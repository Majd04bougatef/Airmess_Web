{% extends 'dashEntreprise/dashboardEntreprise.html.twig' %}

{% block title %}Modifier une Offre{% endblock %}

{% block stylesheets %}
{{ parent() }}
<!-- Bibliothèque Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
<!-- Important: Préchargement de la bibliothèque JavaScript pour éviter les problèmes de chargement -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
<style>
  /* Alert styles */
  .alert {
    font-size: 1.2em;
    margin-top: 20px;
  }

  /* Form card styles */
  .form-card {
    background-color: white;
    border-radius: 20px;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
    margin-bottom: 1.5rem;
    border: 1px solid #eaedf2;
    overflow: hidden;
    transition: all 0.3s ease;
    position: relative;
  }

  .form-card:hover {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }
  
  .form-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    transition: all 0.3s ease;
  }
  
  .card-info::before {
    background-color: #FBBB89;
  }
  
  .card-media::before {
    background-color: #336D8B;
  }
  
  .card-location::before {
    background-color: #4CAF50;
  }

  .form-card-header {
    display: flex;
    align-items: center;
    padding: 1.25rem 1.5rem;
    background-color: #f8fafc;
    border-bottom: 1px solid #eaedf2;
    position: relative;
    z-index: 1;
    overflow: hidden;
  }
  
  .form-card-header::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    width: 30%;
    background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(251, 187, 137, 0.1));
    z-index: -1;
  }
  
  .card-info .form-card-header::after {
    background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(251, 187, 137, 0.1));
  }
  
  .card-media .form-card-header::after {
    background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(51, 109, 139, 0.1));
  }

  .form-card-icon {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    border-radius: 10px;
    margin-right: 1rem;
    padding: 0.5rem;
  }
  
  .card-info .form-card-icon {
    background-color: #FBBB89;
  }
  
  .card-media .form-card-icon {
    background-color: #336D8B;
  }

  .card-location .form-card-icon {
    background-color: #4CAF50;
  }

  .form-card-title {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: #344767;
  }

  .form-card-body {
    padding: 1.5rem;
    position: relative;
    z-index: 1;
  }
  
  .form-card-body::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(94, 114, 228, 0.02) 0%, rgba(255, 255, 255, 0) 50%);
    pointer-events: none;
    z-index: -1;
  }

  .form-spacer {
    height: 1rem;
  }

  /* Form controls */
  .form-row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -0.75rem;
    margin-left: -0.75rem;
  }

  .form-col {
    position: relative;
    width: 100%;
    padding-right: 0.75rem;
    padding-left: 0.75rem;
  }

  @media (min-width: 768px) {
    .form-col-md-6 {
      flex: 0 0 50%;
      max-width: 50%;
    }
  }

  .form-floating {
    position: relative;
    margin-bottom: 0.5rem;
  }

  .form-floating > .form-control {
    height: 58px;
    padding: 1rem 0.75rem;
  }

  .form-floating > textarea.form-control {
    height: auto;
  }

  .form-floating > label {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    padding: 1rem 0.75rem;
    pointer-events: none;
    border: 1px solid transparent;
    transform-origin: 0 0;
    transition: opacity .1s ease-in-out, transform .1s ease-in-out;
    color: #6c757d;
  }

  .form-floating > .form-control:focus,
  .form-floating > .form-control:not(:placeholder-shown) {
    padding-top: 1.625rem;
    padding-bottom: 0.625rem;
  }

  .form-floating > .form-control:focus ~ label,
  .form-floating > .form-control:not(:placeholder-shown) ~ label {
    opacity: .65;
    transform: scale(.85) translateY(-0.5rem) translateX(0.15rem);
  }

  .form-control {
    display: block;
    width: 100%;
    padding: 0.75rem 1rem;
    font-size: 0.875rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid #ced4da;
    border-radius: 12px;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  }

  .form-control:focus {
    color: #495057;
    background-color: #fff;
    border-color: #336D8B;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(51, 109, 139, 0.25);
  }
  
  .card-info .form-control:focus {
    border-color: #FBBB89;
    box-shadow: 0 0 0 0.2rem rgba(251, 187, 137, 0.25);
  }
  
  .card-media .form-control:focus {
    border-color: #336D8B;
    box-shadow: 0 0 0 0.2rem rgba(51, 109, 139, 0.25);
  }

  /* Image upload */
  .form-image-upload {
    padding: 1.5rem;
    border: 2px dashed #ced4da;
    border-radius: 12px;
    text-align: center;
    transition: all 0.3s ease;
    background-color: #f8f9fa;
  }

  .form-image-upload:hover {
    border-color: #336D8B;
    background-color: #f0f7ff;
  }

  .form-control-file {
    display: block;
    width: 100%;
    padding: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.5;
    color: #495057;
    cursor: pointer;
  }

  .form-image-hint {
    margin-top: 0.75rem;
    font-size: 0.75rem;
    color: #6c757d;
  }

  /* Form actions */
  .form-actions {
    display: flex;
    justify-content: flex-end;
    margin-top: 2rem;
  }

  .form-btn-outline {
    background-color: transparent;
    color: #336D8B;
    border: 1px solid #336D8B;
    font-weight: 600;
    padding: 0.75rem 1.5rem;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-right: 1rem;
    display: inline-block;
    text-decoration: none;
  }

  .form-btn-outline:hover {
    background-color: #f0f7ff;
    color: #234A5D;
    border-color: #234A5D;
    text-decoration: none;
  }

  .form-btn {
    background-color: #336D8B;
    color: white;
    font-weight: 600;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    z-index: 1;
  }
  
  .form-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: all 0.5s ease;
    z-index: -1;
  }

  .form-btn:hover {
    background-color: #234A5D;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(51, 109, 139, 0.4);
  }
  
  .form-btn:hover::before {
    left: 100%;
  }
  
  /* Form header */
  .form-header {
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #e9ecef;
    position: relative;
  }
  
  .form-header::after {
    content: "";
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 80px;
    height: 3px;
    background: linear-gradient(90deg, #FBBB89, #336D8B);
    border-radius: 3px;
  }
  
  .form-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: #344767;
    margin-bottom: 0.75rem;
    background: linear-gradient(90deg, #FBBB89, #336D8B);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    display: inline-block;
  }

  .form-subtitle {
    color: #6c757d;
    font-size: 0.95rem;
  }

  /* Content section */
  .content-card {
    background-color: white;
    border-radius: 15px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .content-section {
    display: none;
  }

  .content-section.active {
    display: block;
  }

  .date-control {
    height: 58px !important;
  }
  
  /* Map styles */
  #map-container {
    margin-top: 20px;
    margin-bottom: 20px;
    position: relative;
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
  }
  
  #map {
    height: 450px;
    width: 100%;
    z-index: 1;
  }
  
  .leaflet-container {
    z-index: 1;
  }
  
  .map-instructions {
    margin-top: 10px;
    margin-bottom: 10px;
    font-size: 0.9rem;
    color: #666;
    text-align: center;
  }
</style>
{% endblock %}

{% block body %}
    {# Inclure les styles et scripts pour la validation des formulaires #}
    {% include 'form_error_styling.html.twig' %}
    
    <div class="container-fluid py-4">
        <div class="row">
            <div class="col-12">
                <!-- Content Card -->
                <div class="content-card">
                    <div class="form-header">
                        <h2 class="form-title">Modifier l'Offre</h2>
                        <p class="form-subtitle">Mettez à jour les informations de votre offre.</p>
                    </div>

                    {{ form_start(form, {'method': 'POST', 'attr': {'class': 'offer-form', 'novalidate': 'novalidate', 'enctype': 'multipart/form-data'}}) }}

                        <!-- Basic Info Card -->
                        <div class="form-card card-info">
                            <div class="form-card-header">
                                <i class="fas fa-info-circle form-card-icon"></i>
                                <h3 class="form-card-title">Informations de l'offre</h3>
                            </div>
                            <div class="form-card-body">
                                <div class="form-row">
                                    <div class="form-col form-col-md-6">
                                        <div class="form-floating">
                                            {{ form_widget(form.place, {'attr': {'class': 'form-control', 'placeholder': ' '}}) }}
                                            {{ form_label(form.place) }}
                                            {{ form_errors(form.place) }}
                                        </div>
                                    </div>
                                    
                                    <div class="form-col form-col-md-6">
                                        <div class="form-floating">
                                            {{ form_widget(form.numberLimit, {'attr': {'class': 'form-control', 'placeholder': ' '}}) }}
                                            {{ form_label(form.numberLimit) }}
                                            {{ form_errors(form.numberLimit) }}
                                        </div>
                                    </div>
                                </div>

                                <div class="form-spacer"></div>
                                
                                <div class="form-row">
                                    <div class="form-col form-col-md-6">
                                        <div class="form-floating">
                                            {{ form_widget(form.priceInit, {'attr': {'class': 'form-control', 'placeholder': ' '}}) }}
                                            {{ form_label(form.priceInit) }}
                                            {{ form_errors(form.priceInit) }}
                                        </div>
                                    </div>
                                    
                                    <div class="form-col form-col-md-6">
                                        <div class="form-floating">
                                            {{ form_widget(form.priceAfter, {'attr': {'class': 'form-control', 'placeholder': ' '}}) }}
                                            {{ form_label(form.priceAfter) }}
                                            {{ form_errors(form.priceAfter) }}
                                        </div>
                                    </div>
                                </div>

                                <div class="form-spacer"></div>
                                
                                <div class="form-row">
                                    <div class="form-col form-col-md-6">
                                        <div class="form-floating">
                                            {{ form_widget(form.startDate, {'attr': {'class': 'form-control date-control', 'placeholder': ' '}}) }}
                                            {{ form_label(form.startDate) }}
                                            {{ form_errors(form.startDate) }}
                                        </div>
                                    </div>
                                    
                                    <div class="form-col form-col-md-6">
                                        <div class="form-floating">
                                            {{ form_widget(form.endDate, {'attr': {'class': 'form-control date-control', 'placeholder': ' '}}) }}
                                            {{ form_label(form.endDate) }}
                                            {{ form_errors(form.endDate) }}
                                        </div>
                                    </div>
                                </div>

                                <div class="form-spacer"></div>
                                
                                <div class="form-floating">
                                    {{ form_widget(form.description, {'attr': {'class': 'form-control', 'style': 'height: 120px', 'placeholder': ' '}}) }}
                                    {{ form_label(form.description) }}
                                    {{ form_errors(form.description) }}
                                </div>
                                
                                <div class="form-spacer"></div>
                                
                                <div class="form-group">
                                    {{ form_label(form.aidesc, null, {'label_attr': {'class': 'form-label'}}) }}
                                    {{ form_widget(form.aidesc, {'attr': {'class': 'form-control' ~ (form.aidesc.vars.valid ? '' : ' is-invalid'), 'rows': '4', 'style': 'resize: vertical;'}}) }}
                                    <small class="form-text text-muted">
                                        <i class="bi bi-info-circle me-1"></i>
                                        {{ form_help(form.aidesc) }}
                                    </small>
                                    {% if not form.aidesc.vars.valid %}
                                        <div class="form-error">
                                            <i class="bi bi-exclamation-circle field-error-icon"></i>
                                            {{ form_errors(form.aidesc) }}
                                        </div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                        
                        <!-- Location Card with Map -->
                        <div class="form-card card-location">
                            <div class="form-card-header">
                                <i class="fas fa-map-marker-alt form-card-icon"></i>
                                <h3 class="form-card-title">Localisation</h3>
                            </div>
                            <div class="form-card-body">
                                <div id="map-container">
                                    <div id="map"></div>
                                </div>
                                <p class="map-instructions">Cliquez sur la carte ou faites glisser le marqueur pour modifier l'emplacement de l'offre</p>
                                {{ form_widget(form.latitude, {'attr': {'style': 'display: none', 'id': 'offre_latitude'}}) }}
                                {{ form_errors(form.latitude) }}
                                {{ form_widget(form.longitude, {'attr': {'style': 'display: none', 'id': 'offre_longitude'}}) }}
                                {{ form_errors(form.longitude) }}
                            </div>
                        </div>
                        
                        <!-- Media Card -->
                        <div class="form-card card-media">
                            <div class="form-card-header">
                                <i class="fas fa-photo-video form-card-icon"></i>
                                <h3 class="form-card-title">Image de l'offre</h3>
                            </div>
                            <div class="form-card-body">
                                <div class="form-image-upload">
                                    <h4>Télécharger une image</h4>
                                    {{ form_widget(form.imageFile, {
                                        'attr': {
                                            'class': 'form-control-file',
                                            'accept': 'image/jpeg, image/jpg, image/png, image/webp'
                                        }
                                    }) }}
                                    <small class="form-image-hint">{{ form_help(form.imageFile) }}</small>
                                    {{ form_errors(form.imageFile) }}
                                </div>
                            </div>
                        </div>
                        
                        {% if form.statusoff is defined and is_granted('ROLE_ADMIN') %}
                        <div class="form-card card-status">
                            <div class="form-card-header">
                                <i class="fas fa-flag form-card-icon"></i>
                                <h3 class="form-card-title">Statut de l'offre</h3>
                            </div>
                            <div class="form-card-body">
                                <div class="form-floating">
                                    {{ form_widget(form.statusoff, {'attr': {'class': 'form-control', 'placeholder': ' '}}) }}
                                    {{ form_label(form.statusoff) }}
                                    {{ form_errors(form.statusoff) }}
                                </div>
                            </div>
                        </div>
                        {% endif %}

                        <div class="form-actions">
                            <a href="{{ path('offreEntreprise_page') }}" class="form-btn-outline">Annuler</a>
                            <button type="submit" class="form-btn">Mettre à jour</button>
                        </div>

                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
console.clear();
console.log("==================== DÉBOGAGE DE LA CARTE (ÉDITION) ====================");
console.log("Vérification du chargement de la page...");

// Fonction pour vérifier si Leaflet est chargé
function isLeafletLoaded() {
    return typeof L !== 'undefined';
}

// Fonction pour afficher un message d'erreur visible dans la page
function showMapError(message) {
    const mapEl = document.getElementById('map');
    if (mapEl) {
        mapEl.innerHTML = '<div style="padding: 20px; background-color: #f8d7da; color: #721c24; text-align: center;">' +
            '<h3>Erreur de chargement de la carte</h3>' +
            '<p>' + message + '</p>' +
            '<p>Vérifiez votre connexion internet et rechargez la page.</p>' +
            '</div>';
    }
    console.error("ERREUR DE CARTE:", message);
}

// Attendre que le DOM soit complètement chargé
document.addEventListener('DOMContentLoaded', function() {
    console.log("DOMContentLoaded déclenché");
    console.log("État de Leaflet:", typeof L !== 'undefined' ? "CHARGÉ ✓" : "NON CHARGÉ ✗");
    
    const mapContainer = document.getElementById('map-container');
    const mapElement = document.getElementById('map');
    
    console.log("Conteneur de carte trouvé:", mapContainer ? "OUI ✓" : "NON ✗");
    console.log("Élément map trouvé:", mapElement ? "OUI ✓" : "NON ✗");
    
    if (mapContainer) {
        console.log("Styles du conteneur:", window.getComputedStyle(mapContainer).cssText);
    }
    
    if (mapElement) {
        console.log("Styles de la carte:", window.getComputedStyle(mapElement).cssText);
    }
});

// Attendre que tout soit complètement chargé
window.addEventListener('load', function() {
    console.log("Page entièrement chargée, vérification de Leaflet...");
    
    // Vérifier si Leaflet est disponible
    if (!isLeafletLoaded()) {
        showMapError("La bibliothèque Leaflet n'est pas chargée correctement");
        return;
    }
    
    console.log("Leaflet trouvé, version:", L.version);
    initMap();
});

function initMap() {
    try {
        console.log("Initialisation de la carte...");
        
        // Vérifier l'élément de la carte
        const mapElement = document.getElementById('map');
        if (!mapElement) {
            showMapError("Élément '#map' introuvable dans la page");
            return;
        }
        
        // Dimensions
        console.log("Dimensions du conteneur:", mapElement.offsetWidth, "x", mapElement.offsetHeight);
        
        // Supprimer toute carte existante
        if (window.myMap) {
            window.myMap.remove();
            console.log("Carte précédente supprimée");
        }
        
        // Coordonnées par défaut (centre de la France)
        const defaultLat = 46.603354;
        const defaultLng = 1.888334;
        
        // Récupérer les champs cachés
        const latField = document.getElementById('offre_latitude');
        const lngField = document.getElementById('offre_longitude');
        
        console.log("Champ latitude trouvé:", latField ? "OUI ✓" : "NON ✗");
        console.log("Champ longitude trouvé:", lngField ? "OUI ✓" : "NON ✗");
        
        if (latField) console.log("Valeur latitude:", latField.value);
        if (lngField) console.log("Valeur longitude:", lngField.value);
        
        // Utiliser les valeurs existantes ou les défauts
        const initialLat = latField && latField.value ? parseFloat(latField.value) : defaultLat;
        const initialLng = lngField && lngField.value ? parseFloat(lngField.value) : defaultLng;
        
        console.log("Coordonnées initiales:", initialLat, initialLng);
        
        // Forcer les dimensions de la carte
        mapElement.style.height = '450px';
        mapElement.style.width = '100%';
        
        // Créer la carte
        console.log("Création de la carte avec centre:", initialLat, initialLng);
        const map = L.map('map').setView([initialLat, initialLng], 6);
        window.myMap = map; // Stocker dans une variable globale
        
        // Ajouter la couche OpenStreetMap
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
            maxZoom: 19
        }).addTo(map);
        
        // Ajouter un marqueur
        const marker = L.marker([initialLat, initialLng], {
            draggable: true
        }).addTo(map);
        
        // Gérer le déplacement du marqueur
        marker.on('dragend', function() {
            const position = marker.getLatLng();
            updateFields(position.lat, position.lng);
        });
        
        // Gérer les clics sur la carte
        map.on('click', function(e) {
            marker.setLatLng(e.latlng);
            updateFields(e.latlng.lat, e.latlng.lng);
        });
        
        // Mettre à jour les champs cachés
        function updateFields(lat, lng) {
            if (latField) latField.value = lat.toFixed(6);
            if (lngField) lngField.value = lng.toFixed(6);
            console.log("Coordonnées mises à jour:", lat.toFixed(6), lng.toFixed(6));
        }
        
        // Forcer un redimensionnement pour éviter les problèmes d'affichage
        setTimeout(function() {
            map.invalidateSize();
            console.log("Carte redimensionnée");
        }, 500);
        
        console.log("Initialisation de la carte terminée avec succès");
    } catch (error) {
        showMapError("Erreur lors de l'initialisation: " + error.message);
        console.error("Erreur détaillée:", error);
    }
}
</script>
{% endblock %}
