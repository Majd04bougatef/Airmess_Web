{# templates/social_media/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Social Media Feed{% endblock %}

{% block stylesheets %}
    {{ parent() }} {# Include any base styles #}
    {# === Styles remain here === #}
    
{% endblock %}

{% block body %}
<div class="container feed-container mt-4 mb-4">

    <h1 class="text-center mb-4">ðŸ“¢ Social Feed</h1>
    
    {# Barre de recherche par lieu #}
    <div class="row justify-content-center mb-4">
        <div class="col-md-8">
            <form method="get" class="search-form">
                <div class="input-group">
                    <input type="text" 
                           name="lieu" 
                           class="form-control" 
                           placeholder="Rechercher par lieu..." 
                           value="{{ app.request.query.get('lieu') }}"
                           aria-label="Rechercher par lieu">
                    <button class="btn btn-primary" type="submit">
                        <i class="fas fa-search"></i> Rechercher
                    </button>
                    {% if app.request.query.get('lieu') %}
                        <a href="{{ path('app_social_media_index') }}" class="btn btn-outline-secondary">
                            <i class="fas fa-times"></i> Annuler
                        </a>
                    {% endif %}
                </div>
            </form>
        </div>
    </div>

    <!-- Scrollable Pane for Posts - THIS is the container with the ID -->
    {% if app.request.query.get('lieu') %}
        <div class="alert alert-info text-center mb-3">
            RÃ©sultats pour le lieu : <strong>{{ app.request.query.get('lieu') }}</strong>
        </div>
    {% endif %}
    <div class="posts-scroll-pane" id="posts-list">

        {# === THE INCLUDE TAG HAS BEEN REMOVED === #}
        {# === THE FOR LOOP IS NOW DIRECTLY HERE === #}
        {% for post in pagination %}
            <div class="card post-card">
                {# Image miniature #}
                {% if post.imagemedia %}
                    {% set imagePath = 'uploads/' ~ post.imagemedia %}
                    <img src="{{ asset(imagePath) }}" class="card-img-top post-thumbnail" style="max-height: 300px; width: auto; margin: 20px auto; display: block; border-radius: 2px; border: 1px solid #e9ecef; max-width: 50%;" alt="Miniature : {{ post.titre | default('') }}">
                {% endif %}

                <div class="card-body">
                    {# Post Author Display #}
                    <div class="post-author">
                         <i class="fas fa-user-circle"></i>
                         <span>
                             {% if post.user is defined and post.user is not null %}
                                 {{ (post.user.prenom | default('') ~ ' ' ~ post.user.name | default('')) | trim | default('Utilisateur inconnu') }}
                             {% else %}
                                 Utilisateur inconnu
                             {% endif %}
                         </span>
                    </div>

                    {# Post Title #}
                    <h5 class="card-title">{{ post.titre | default('Sans titre') }}</h5>

                    {# Post Content #}
                    <p class="card-text">{{ post.contenu | default('') | nl2br }}</p>

                    {# Post Metadata #}
                    <div class="post-meta">
                        {% if post.lieu %}
                            <div><strong><i class="fas fa-map-marker-alt"></i> Lieu:</strong> {{ post.lieu }}</div>
                        {% endif %}
                        <div><strong><i class="fas fa-calendar-alt"></i> PubliÃ© le:</strong> {{ post.publicationDate ? post.publicationDate|date('d M Y, H:i') : 'Date inconnue' }}</div>
                    </div>

                    {# Action Buttons #}
                    <div class="post-actions">
                        <a href="{{ path('app_social_media_show', {'idEB': post.idEB}) }}" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-eye"></i> Voir
                        </a>
                        <button class="btn btn-outline-success btn-sm like-button" data-post-id="{{ post.idEB }}">
                             <i class="fas fa-thumbs-up"></i> J'aime
                        </button>
                        <button class="btn btn-outline-info btn-sm comment-button" data-post-id="{{ post.idEB }}">
                             <i class="fas fa-comment"></i> Commenter
                        </button>

                        {# Delete Form #}
                        {% if is_granted('POST_DELETE', post) or (app.user and app.user == post.user) %}
                            <form method="post" action="{{ path('app_social_media_delete', {'idEB': post.idEB}) }}" onsubmit="return confirm('Voulez-vous vraiment supprimer cette publication ?');" class="ms-auto d-inline">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ post.idEB) }}">
                                <button type="submit" class="btn btn-outline-danger btn-sm">
                                     <i class="fas fa-trash-alt"></i> Supprimer
                                </button>
                            </form>
                        {% endif %}
                    </div> {# End post-actions #}
                </div> {# End card-body #}
            </div> {# End post-card #}
        {% else %}
            {# Message shown if 'pagination' is empty #}
            <p class="no-posts-message">Aucune publication trouvÃ©e pour le moment.</p>
        {% endfor %}
        {# === END OF POST LOOP === #}

    </div> {# End posts-scroll-pane #}

    <!-- Pagination - Only shown if needed - ADDED ID -->
    {% if pagination.getTotalItemCount > 0 and pagination.pageCount > 1 %}
    <div class="pagination-controls" id="pagination-controls">
        {{ knp_pagination_render(pagination) }}
    </div>
    {% endif %}

    <!-- Bouton Ajouter une publication -->
    <div class="add-post-section">
        <a href="{{ path('app_social_media_new') }}" class="btn btn-success btn-lg">
             <i class="fas fa-plus-circle"></i> Ajouter une publication
        </a>
    </div>

</div> {# End container #}
{% endblock %}

{% block javascripts %}
    {{ parent() }} {# Include JS from base.html.twig if any #}
    {# === ROBUST AJAX JAVASCRIPT (Same as before) === #}
    <script>
        function handlePaginationClick(event) {
            event.preventDefault(); // Prevent default link navigation
            const url = event.currentTarget.getAttribute('href');
            const postsContainer = document.getElementById('posts-list'); // Target the container
            const paginationContainer = document.getElementById('pagination-controls');

            if (!postsContainer || !paginationContainer) {
                console.error('Error: Could not find posts or pagination container elements.');
                return;
            }

            // Optional: Show loading state
            postsContainer.style.opacity = '0.5';

            fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' }}) // Identify as AJAX
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.text(); // Fetch the FULL HTML of the next page
                })
                .then(html => {
                    // Use DOMParser to safely parse the fetched FULL HTML
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, 'text/html');

                    // Find the NEW content container within the parsed HTML document
                    const newPostsContentElement = doc.getElementById('posts-list');
                    const newPaginationContentElement = doc.getElementById('pagination-controls');

                    // Update the current page's container's INNER HTML
                    if (newPostsContentElement) {
                        postsContainer.innerHTML = newPostsContentElement.innerHTML; // Replace content
                        postsContainer.scrollTop = 0; // Scroll to top
                    } else {
                        console.error('Could not find #posts-list content in fetched data.');
                         postsContainer.innerHTML = '<p class="no-posts-message text-danger">Error loading posts content.</p>';
                    }

                    if (newPaginationContentElement) {
                        paginationContainer.innerHTML = newPaginationContentElement.innerHTML; // Replace pagination
                    } else {
                        paginationContainer.innerHTML = ''; // Clear pagination if not found
                         console.warn('Could not find #pagination-controls content in fetched data.');
                    }

                    // Re-attach event listeners to the *new* pagination links
                    attachPaginationListeners();

                })
                .catch(error => {
                    console.error('Error fetching posts:', error);
                    postsContainer.innerHTML = `<p class="no-posts-message text-danger">Failed to load content: ${error.message}</p>`;
                })
                .finally(() => {
                    // Optional: Remove loading state
                    postsContainer.style.opacity = '1';
                });
        }

        function attachPaginationListeners() {
            const paginationLinks = document.querySelectorAll('#pagination-controls a');
            paginationLinks.forEach(link => {
                link.removeEventListener('click', handlePaginationClick);
                link.addEventListener('click', handlePaginationClick);
            });
        }

        // Initial attachment of listeners when the page fully loads
        document.addEventListener('DOMContentLoaded', function() {
            attachPaginationListeners();
        });
    </script>
{% endblock %}