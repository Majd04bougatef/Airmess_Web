{# Fichier : templates/social_media/show.html.twig #}
{% extends 'dashVoyageurs/dashboardVoyageurs.html.twig' %}


{# Définit le titre de la page #}
{% block title %}{{ social_media.getTitre() }} - Détails{% endblock %}

{% block css %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/feed.css') }}">
    <style>
        :root {
            --main-accent: #4a6bda;
            --main-accent-hover: #3d58b3;
            --danger-color: #dc3545;
            --danger-color-darker: #bb2d3b;
            --light-bg: #f8f9fa;
            --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
            --card-radius: 12px;
            --transition-speed: 0.25s;
        }
        
        body {
            background-color: #f5f7fa;
            color: #444;
        }
        
        /* Custom animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(74, 107, 218, 0.4); }
            70% { box-shadow: 0 0 0 6px rgba(74, 107, 218, 0); }
            100% { box-shadow: 0 0 0 0 rgba(74, 107, 218, 0); }
        }
        
        .pulsate {
            animation: pulse 1.5s infinite;
        }
        
        .post-card {
            box-shadow: var(--card-shadow);
            border-radius: var(--card-radius);
            transition: all var(--transition-speed) ease;
            animation: fadeIn 0.5s ease forwards;
            max-width: 650px;
            margin: 0 auto;
        }
        
        .post-card:hover {
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            transform: translateY(-3px);
        }
        
        .post-image-container {
            max-height: 250px;
            overflow: hidden;
            position: relative;
            border-radius: 10px;
            margin: 0.5rem auto 1.25rem;
            max-width: 75%;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
            padding: 0.25rem;
            background-color: #f9f9f9;
        }
        
        .post-image-container img {
            transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
            object-fit: cover;
            width: 100%;
            max-height: 250px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .post-image-container:hover img {
            transform: scale(1.05);
        }
        
        /* Effet de brillance au survol */
        .post-image-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 50%;
            height: 100%;
            background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,0.3) 100%);
            transform: skewX(-25deg);
            z-index: 1;
            transition: left 0.8s ease-out;
        }
        
        .post-image-container:hover::before {
            left: 150%;
        }
        
        .post-actions {
            padding: 0.75rem 1rem;
            border-top: 1px solid rgba(0, 0, 0, 0.05);
            background-color: #fbfbfd;
        }
        
        .btn-action {
            border-radius: 30px;
            transition: all var(--transition-speed) ease;
            padding: 0.5rem 0.5rem;
            font-weight: 500;
            font-size: 0.9rem;
            border: none;
            text-align: center;
            white-space: nowrap;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0 2px;
        }
        
        .btn-action:hover {
            background-color: rgba(0, 0, 0, 0.05);
            transform: translateY(-1px);
        }
        
        .like-button:hover, .like-button.active {
            color: var(--main-accent) !important;
        }
        
        /* Style pour l'icône Flaticon du bouton like */
        .like-button img, .like-count-badge img, 
        .dislike-button img, .dislike-count-badge img {
            transition: all 0.3s ease;
            filter: brightness(1);
        }
        
        .like-button:hover img, .like-button.active img {
            transform: scale(1.15);
            filter: drop-shadow(0px 0px 3px rgba(74, 107, 218, 0.5));
        }
        
        .dislike-button:hover img, .dislike-button.active img {
            transform: scale(1.15);
            filter: drop-shadow(0px 0px 3px rgba(220, 53, 69, 0.5));
        }
        
        .like-count-badge img {
            filter: brightness(10); /* Rend l'icône blanche pour le badge */
        }
        
        .dislike-count-badge img {
            filter: brightness(10); /* Rend l'icône blanche pour le badge */
        }
        
        .post-author-img, .comment-author-img {
            border: 2px solid #fff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
            object-fit: cover;
        }
        
        .comment-bubble {
            background-color: #f8f9fa;
            border-radius: 18px;
            padding: 0.75rem 1.25rem;
            position: relative;
            margin-bottom: 0.5rem;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            transition: all 0.2s ease;
        }
        
        .comment-bubble:hover {
            background-color: #f2f4f9;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
        }
        
        .comment-author-name {
            font-size: 0.9rem;
            color: #4a5568;
        }
        
        .comment-text {
            font-size: 0.95rem;
            color: #2d3748;
            line-height: 1.5;
        }
        
        .comment-entry {
            margin-bottom: 1rem;
            opacity: 0;
            transform: translateY(10px);
            animation: fadeInUp 0.5s ease forwards;
            animation-delay: calc(var(--animation-order) * 0.1s);
        }
        
        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .comments-section {
            border-radius: 0 0 var(--card-radius) var(--card-radius);
            max-width: 650px;
            margin: 0 auto;
            position: relative;
            border-top: 1px solid rgba(0, 0, 0, 0.08);
            background-color: #f9f9fb;
        }
        
        .post-stats {
            color: #6c757d;
            font-weight: 500;
            font-size: 0.85rem;
            padding: 0.6rem 1.25rem;
            background-color: #fbfbfd;
            border-top: 1px solid rgba(0, 0, 0, 0.03);
            border-bottom: 1px solid rgba(0, 0, 0, 0.03);
            transition: background-color 0.5s ease;
        }
        
        .post-stats.highlight {
            background-color: rgba(74, 107, 218, 0.08);
        }
        
        .post-stats i {
            margin-right: 3px;
            color: var(--main-accent);
        }
        
        .section-title {
            position: relative;
            display: inline-block;
            margin-bottom: 1.5rem;
            font-weight: 600;
            color: #333;
            font-size: 1.5rem;
        }
        
        .section-title:after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 40px;
            height: 3px;
            background: linear-gradient(90deg, var(--main-accent), #71a6ff);
            border-radius: 3px;
        }
        
        .btn-send-comment {
            border-radius: 50%;
            position: absolute;
            right: 10px;
            bottom: 10px;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            background: linear-gradient(45deg, #5e72e4, #3f51b5);
            border: none;
            box-shadow: 0 3px 8px rgba(94, 114, 228, 0.4);
            transition: all 0.3s ease;
        }
        
        .btn-send-comment:hover, 
        .btn-send-comment:focus {
            background: linear-gradient(45deg, #4a6bda, #3949ab);
            transform: translateY(-2px) rotate(15deg);
            box-shadow: 0 5px 12px rgba(94, 114, 228, 0.5);
        }
        
        .btn-send-comment i {
            font-size: 1rem;
            color: white;
            transition: all 0.3s ease;
        }
        
        .btn-send-comment:hover i {
            transform: scale(1.1);
        }
        
        .comment-action-link {
            color: #6c757d;
            text-decoration: none;
            font-weight: 500;
            font-size: 0.8rem;
            transition: all var(--transition-speed) ease;
        }
        
        .comment-action-link:hover {
            color: var(--main-accent);
        }
        
        .post-header {
            padding: 0.75rem 1.25rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.03);
        }
        
        .post-title {
            font-weight: 700;
            color: #333;
            font-size: 1.3rem;
            line-height: 1.3;
            margin-bottom: 0.75rem;
        }
        
        .post-content {
            padding: 1rem 1.25rem;
            line-height: 1.5;
            color: #444;
            font-size: 0.95rem;
        }
        
        .post-text {
            overflow-wrap: break-word;
            word-wrap: break-word;
        }
        
        .add-comment-form-container {
            margin-bottom: 2rem;
        }
        
        .comment-input {
            border-radius: 20px;
            padding: 0.8rem 3rem 0.8rem 1.25rem;
            resize: none;
            border: 1px solid #e0e4e8;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.04);
            transition: all 0.3s ease;
            font-size: 0.95rem;
            line-height: 1.5;
            background-color: #f8fafd;
        }
        
        .comment-input:focus {
            border-color: #bdc9e7;
            box-shadow: 0 0 0 4px rgba(94, 114, 228, 0.15);
            background-color: #fff;
            outline: none;
        }
        
        .comment-author-name {
            color: #444;
            font-size: 0.95rem;
        }
        
        .comment-text {
            font-size: 0.9rem;
            line-height: 1.4;
            color: #555;
        }
        
        .post-actions {
            padding: 0.4rem;
        }
        
        .action-text {
            font-size: 0.9rem;
        }
        
        /* Responsive adjustments */
        @media (max-width: 767px) {
            .post-card, .comments-section {
                border-radius: var(--card-radius);
                margin-left: -0.5rem;
                margin-right: -0.5rem;
                width: calc(100% + 1rem);
            }
            
            .post-header, .post-content {
                padding: 1rem;
            }
            
            .post-stats {
                padding: 0.7rem 1rem;
            }
            
            .post-title {
                font-size: 1.3rem;
            }
        }
        
        .comments-container {
            max-height: 350px;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: rgba(74, 107, 218, 0.2) #f5f7fa;
            padding: 0.5rem 0;
        }
        
        .comments-container::-webkit-scrollbar {
            width: 6px;
        }
        
        .comments-container::-webkit-scrollbar-track {
            background: #f5f7fa;
        }
        
        .comments-container::-webkit-scrollbar-thumb {
            background-color: rgba(74, 107, 218, 0.2);
            border-radius: 10px;
        }
        
        .section-title {
            position: relative;
            display: inline-block;
            margin-bottom: 1rem;
            font-weight: 600;
            color: #333;
            font-size: 1.2rem;
        }
        
        .section-title:after {
            content: '';
            position: absolute;
            bottom: -6px;
            left: 0;
            width: 30px;
            height: 3px;
            background: linear-gradient(90deg, var(--main-accent), #71a6ff);
            border-radius: 3px;
        }
        
        .add-comment-form-container {
            margin-bottom: 1.5rem;
            position: relative;
            transition: all 0.3s ease;
        }
        
        .add-comment-form-container:hover .comment-author-img {
            transform: translateY(-2px);
            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
        }
        
        .comment-input {
            border-radius: 18px;
            padding-right: 40px;
            resize: none;
            border: 1px solid #e0e4e8;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.02);
            transition: all var(--transition-speed) ease;
            font-size: 0.9rem;
        }
        
        .comments-section {
            border-radius: var(--card-radius);
            max-width: 650px;
            margin: 0 auto;
            box-shadow: var(--card-shadow);
            position: relative;
        }
        
        /* Style pour mettre en évidence la section des commentaires */
        .comments-indicator {
            position: absolute;
            top: -15px;
            left: 50%;
            transform: translateX(-50%);
            background-color: var(--main-accent);
            color: white;
            border-radius: 16px;
            padding: 3px 10px;
            font-size: 0.8rem;
            font-weight: 500;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            z-index: 3;
        }
        
        .dislike-count-badge img {
            filter: brightness(10); /* Rend l'icône blanche pour le badge */
        }
        
        .dislike-button:hover, .dislike-button.active {
            color: var(--danger-color) !important;
        }
        
        /* Badge styles for like/dislike counts */
        .like-count-badge {
            background-color: var(--main-accent);
            color: white;
            padding: 0.25rem 0.6rem;
            font-size: 0.85rem;
            transition: all var(--transition-speed) ease;
            box-shadow: 0 2px 4px rgba(74, 107, 218, 0.2);
        }
        
        .like-count-badge:hover {
            background-color: var(--main-accent-hover);
            transform: translateY(-1px);
            box-shadow: 0 3px 6px rgba(74, 107, 218, 0.3);
        }
        
        .dislike-count-badge {
            background-color: var(--danger-color);
            color: white;
            padding: 0.25rem 0.6rem;
            font-size: 0.85rem;
            transition: all var(--transition-speed) ease;
            box-shadow: 0 2px 4px rgba(220, 53, 69, 0.2);
        }
        
        .dislike-count-badge:hover {
            background-color: var(--danger-color-darker);
            transform: translateY(-1px);
            box-shadow: 0 3px 6px rgba(220, 53, 69, 0.3);
        }
        
        /* Style pour le séparateur entre like et dislike */
        .stats-separator {
            width: 1px;
            height: 20px;
            background-color: rgba(0, 0, 0, 0.1);
            display: inline-block;
        }
        
        .comment-action-link.active {
            color: var(--main-accent) !important;
        }
        
        .comment-like-btn:hover .bi-heart,
        .comment-like-btn.active .bi-heart-fill {
            transform: scale(1.2);
            transition: transform 0.2s ease;
        }
        
        .comment-like-count {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-left: 4px;
            font-size: 0.75rem;
            font-weight: 600;
            color: var(--main-accent);
            background-color: rgba(74, 107, 218, 0.1);
            border-radius: 10px;
            padding: 0 6px;
            min-width: 18px;
            height: 18px;
        }
        
        /* Style du bouton retour */
        .btn-back {
            transition: all 0.3s ease;
            border-radius: 50px;
            padding: 0.5rem 1.2rem;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
        }
        
        .btn-back:hover {
            transform: translateX(-5px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.12);
        }
        
        .btn-back i {
            transition: transform 0.3s ease;
        }
        
        .btn-back:hover i {
            transform: translateX(-3px);
        }
        
        /* Style badge lieu */
        .location-badge {
            display: inline-flex;
            align-items: center;
            background-color: #f8f9fa;
            color: #495057;
            padding: 0.35rem 0.8rem;
            border-radius: 50px;
            font-size: 0.85rem;
            margin-bottom: 1rem;
            font-weight: 500;
        }
        
        .location-badge i {
            margin-right: 0.4rem;
            color: var(--main-accent);
        }
        
        /* Style pour le bouton j'aime/je n'aime pas */
        .like-button, .dislike-button {
            transition: all 0.3s ease;
        }
        
        .like-button:hover, .like-button.active {
            color: var(--main-accent) !important;
        }
        
        .dislike-button:hover, .dislike-button.active {
            color: var(--danger-color) !important;
        }
        
        .like-button:hover i, .like-button.active i,
        .dislike-button:hover i, .dislike-button.active i {
            transform: scale(1.15);
        }
        
        .like-button:hover i, .like-button.active i {
            filter: drop-shadow(0px 0px 3px rgba(74, 107, 218, 0.5));
        }
        
        .dislike-button:hover i, .dislike-button.active i {
            filter: drop-shadow(0px 0px 3px rgba(220, 53, 69, 0.5));
        }
        
        /* Style pour les boutons de like des commentaires */
        .comment-action-link.comment-like-btn {
            transition: all 0.3s ease;
            padding: 2px 8px;
            border-radius: 20px;
        }
        
        .comment-action-link.comment-like-btn:hover,
        .comment-action-link.comment-like-btn.active {
            background-color: rgba(74, 107, 218, 0.1);
            color: var(--main-accent) !important;
        }
        
        .comment-action-link.comment-like-btn i {
            transition: all 0.3s ease;
        }
        
        .comment-action-link.comment-like-btn:hover i,
        .comment-action-link.comment-like-btn.active i {
            transform: scale(1.15);
            color: var(--main-accent);
        }
        
        .comment-like-count {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-left: 4px;
            font-size: 0.75rem;
            font-weight: 600;
            color: var(--main-accent);
            background-color: rgba(74, 107, 218, 0.1);
            border-radius: 10px;
            padding: 0 6px;
            min-width: 18px;
            height: 18px;
        }
        
        .comment-actions {
            display: flex;
            gap: 1rem;
            margin-top: 0.5rem;
            font-size: 0.8rem;
        }
        
        .comment-action {
            color: #718096;
            font-weight: 500;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 0.3rem;
        }
        
        .comment-action:hover {
            color: #4a5568;
            text-decoration: none;
        }
        
        .comment-action i {
            font-size: 0.85rem;
        }
        
        .comment-action.liked {
            color: #e53e3e;
        }
    </style>
{% endblock %}

{# Ce bloc REMPLACE le contenu du block body de base.html.twig #}
{% block body %}
<div class="container my-4 my-lg-5">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            <!-- Bouton de retour -->
            <a href="{{ path('socialVoyageurs_page') }}" class="btn btn-outline-primary btn-back mb-3">
                <i class="fas fa-arrow-left me-2"></i> Retour aux publications
            </a>

            {# --- Card unique contenant le post et les commentaires --- #}
            <div class="post-card bg-white overflow-hidden">
                {# En-tête du Post #}
                <header class="post-header d-flex align-items-center">
                    {% set post_author = social_media.getUser() %}
                    <div class="flex-shrink-0 me-3">
                        <img src="{{ post_author and post_author.getImagesU() ? asset('uploads/profile_pictures/' ~ post_author.getImagesU()) : asset('images/placeholder-avatar.png') }}"
                             alt="{{ post_author ? post_author.getPrenom() : 'Utilisateur' }}"
                             class="post-author-img rounded-circle" width="38" height="38">
                    </div>
                    <div class="post-author-info flex-grow-1">
                        <h5 class="post-author-name mb-0">
                            {% if post_author %}
                                <strong>{{ post_author.getPrenom() }} {{ post_author.getName() }}</strong>
                            {% else %}
                                <em class="text-muted">Utilisateur inconnu</em>
                            {% endif %}
                        </h5>
                        <small class="post-timestamp text-muted">
                            <i class="bi bi-clock me-1"></i>{{ social_media.getPublicationDate()|date('d/m/Y à H:i') }}
                        </small>
                    </div>
                </header>

                {# Contenu du Post (Titre) #}
                <div class="post-content pb-0">
                    <h3 class="post-title">{{ social_media.getTitre() }}</h3>
                    
                    <!-- Badge lieu -->
                    <div class="location-badge">
                        <i class="fas fa-map-marker-alt"></i> {{ social_media.getLieu() }}
                    </div>
                </div>

                {# Image du Post (si présente) #}
                {% if social_media.getImagemedia() %}
                    <div class="post-image-container d-flex justify-content-center align-items-center bg-light">
                        <img src="http://localhost/ImageSocialMedia/{{ social_media.getImagemedia() }}"
                             alt="Image pour {{ social_media.getTitre() }}" class="img-fluid">
                    </div>
                {% endif %}

                {# Contenu du Post (Texte) - séparé pour optimiser l'affichage #}
                <div class="post-content pt-2">
                    <div class="post-text">{{ social_media.getContenu()|nl2br }}</div>
                </div>

                {# Statistiques (Likes/Dislikes) - version simplifiée #}
                <div class="post-stats d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center gap-3">
                            <div class="d-flex align-items-center">
                            <span class="badge rounded-pill bg-primary me-2">
                                <i class="fas fa-thumbs-up me-1"></i> {{ social_media.getLikee() }}
                                </span>
                            
                            <span class="badge rounded-pill bg-danger">
                                <i class="fas fa-thumbs-down me-1"></i> {{ social_media.getDislike() }}
                                </span>
                            </div>
                    </div>
                    
                    <div>
                        <small class="text-muted d-flex align-items-center">
                            <i class="bi bi-chat-dots me-1"></i>
                            <span class="comments-count">{{ comments|length }}</span> commentaire{% if comments|length != 1 %}s{% endif %}
                     </small>
                    </div>
                 </div>

               {# Barre d'actions J'aime/Commenter/Modifier/Supprimer #}
                <div class="post-actions d-flex justify-content-between align-items-center">
                    <div class="d-flex flex-grow-1 mx-n1">
                    {# Like Button (Form) #}
                        <form action="{{ path('app_social_media_like', {idEB: social_media.idEB}) }}" method="POST" class="d-inline m-0 flex-grow-1 px-1 like-form">
                        <input type="hidden" name="_token" value="{{ csrf_token('like-post') }}">
                        <button type="submit" class="btn btn-action w-100 text-muted like-button {% if app.session.get('user_post_actions')[social_media.idEB] is defined and app.session.get('user_post_actions')[social_media.idEB] == 'like' %}active{% endif %}">
                                <i class="fas fa-thumbs-up me-1"></i> <span class="action-text">J'aime</span>
                        </button>
                    </form>

                    {# Dislike Button (Form) #}
                        <form action="{{ path('app_social_media_dislike', {idEB: social_media.idEB}) }}" method="POST" class="d-inline m-0 flex-grow-1 px-1 dislike-form">
                        <input type="hidden" name="_token" value="{{ csrf_token('dislike-post') }}">
                        <button type="submit" class="btn btn-action w-100 text-muted dislike-button {% if app.session.get('user_post_actions')[social_media.idEB] is defined and app.session.get('user_post_actions')[social_media.idEB] == 'dislike' %}active{% endif %}">
                                <i class="fas fa-thumbs-down me-1"></i> <span class="action-text">Je n'aime pas</span>
    </button>
                    </form>

    {# Comment Link/Button #}
                        <a href="#comments-area" class="btn btn-action flex-grow-1 text-muted mx-1">
                        <i class="bi bi-chat-dots me-1"></i> <span class="action-text">Commenter</span>
    </a>

                    {# Admin Actions #}
    {% if post_author and post_author.getIdU() == default_user_id %}
                            <div class="d-flex flex-grow-1">
                        {# Edit Button #}
                                <a href="{{ path('app_social_media_edit', {idEB: social_media.idEB}) }}" class="btn btn-action flex-grow-1 text-muted mx-1">
                            <i class="bi bi-pencil-square me-1"></i> <span class="action-text">Éditer</span>
                        </a>

                        {# Delete Button #}
                                <form action="{{ path('app_social_media_delete', {idEB: social_media.idEB}) }}" method="POST" class="d-inline m-0 flex-grow-1 px-1" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette publication ?');">
            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ social_media.idEB) }}">
            <button type="submit" class="btn btn-action w-100 text-danger">
                                <i class="bi bi-trash me-1"></i> <span class="action-text">Supprimer</span>
            </button>
        </form>
                            </div>
    {% endif %}
                    </div>
</div>

                {# --- Section Commentaires intégrée --- #}
                <div id="comments-area" class="comments-section p-3">
                    <h3 class="section-title fs-5">Commentaires</h3>

                {# Formulaire Ajout Commentaire #}
                    <div class="add-comment-form-container d-flex align-items-start">
                        {% set current_user = app.user %}
                        <div class="flex-shrink-0 me-2">
                         <img src="{{ current_user and current_user.getImagesU() ? asset('uploads/profile_pictures/' ~ current_user.getImagesU()) : asset('images/placeholder-avatar.png') }}"
                              alt="Votre avatar"
                                class="comment-author-img rounded-circle" width="32" height="32">
                     </div>
                     <div class="flex-grow-1">
                        <form name="{{ comment_form.vars.name }}" method="{{ comment_form.vars.method }}" action="{{ comment_form.vars.action }}" class="add-comment-form" id="comment-form">
                            <div class="position-relative">
                                {{ form_widget(comment_form.description, {'attr': {'rows': 2, 'placeholder': 'Écrivez un commentaire...', 'class': 'form-control comment-input py-2 px-3', 'id': 'comment-input'}}) }}
                                {{ form_errors(comment_form.description) }}
                                <button type="submit" class="btn btn-primary btn-send-comment" id="submit-comment" aria-label="Publier le commentaire">
                                    <i class="fas fa-paper-plane"></i>
                                </button>
                            </div>
                            {{ form_rest(comment_form) }}
                            <input type="hidden" name="_token" value="{{ csrf_token('comment_token') }}">
                        </form>
                     </div>
                </div>

                    {# Séparateur visuel #}
                    <hr class="my-2 text-muted">

                {# Liste des Commentaires Existants #}
                    <div id="comments-list" class="comments-container">
    {% if comments is defined and comments|length > 0 %}
        {% for commentaire in comments %}
            {% set comment_author = commentaire.getUser() %}
                                {% set animation_order = loop.index %}
                                <div class="comment-entry d-flex align-items-start" id="comment-{{ commentaire.idC }}" style="--animation-order: {{ animation_order }}">
                 {# Image Auteur Commentaire #}
                                    <div class="flex-shrink-0 me-2">
                    <img src="{{ comment_author and comment_author.getImagesU() ? asset('uploads/profile_pictures/' ~ comment_author.getImagesU()) : asset('images/placeholder-avatar.png') }}"
                         alt="{{ comment_author ? comment_author.getPrenom() : 'Avatar' }}"
                                            class="comment-author-img rounded-circle" width="28" height="28">
                </div>
                 {# Bulle Commentaire + Meta #}
                <div class="flex-grow-1">
                                        <div class="comment-bubble">
                        <strong class="comment-author-name d-block mb-1">
                            {% if comment_author %}
                                {{ comment_author.getPrenom() }} {{ comment_author.getName() }}
                            {% else %}
                                Utilisateur inconnu
                            {% endif %}
                        </strong>
                        <p class="comment-text mb-0">{{ commentaire.getDescription()|nl2br }}</p>
                    </div>
                                        {# Meta Données Commentaire #}
                                        <div class="comment-meta mt-1 ps-2 d-flex align-items-center flex-wrap">
                        {# Date #}
                                            <small class="text-muted me-3">
                                                <i class="fas fa-clock me-1"></i>
                                                Il y a quelques instants
                        </small>

                                            {# Actions simplifiées #}
                                            <a href="#" 
                                               class="comment-action-link small me-3 comment-like-btn {% if app.session.get('user_comment_actions')[commentaire.idC] is defined and app.session.get('user_comment_actions')[commentaire.idC] == 'like' %}active text-primary{% endif %}"
                                               onclick="event.preventDefault(); document.getElementById('like-comment-form-{{ commentaire.idC }}').submit();"
                                               data-comment-id="{{ commentaire.idC }}">
                                                <i class="{% if app.session.get('user_comment_actions')[commentaire.idC] is defined and app.session.get('user_comment_actions')[commentaire.idC] == 'like' %}fas fa-heart{% else %}far fa-heart{% endif %}"></i> 
                                                <span class="like-label">J'aime</span>
                                                {% if commentaire.numberlike > 0 %}
                                                    <span class="comment-like-count">{{ commentaire.numberlike }}</span>
                                                {% endif %}
                                            </a>
                                            <form id="like-comment-form-{{ commentaire.idC }}" action="{{ path('app_commentaire_like', {'idC': commentaire.idC}) }}" method="POST" class="d-none">
                                                <input type="hidden" name="_token" value="{{ csrf_token('like_commentaire' ~ commentaire.idC) }}">
                                            </form>
                                            
                                            {% if comment_author and comment_author.getIdU() == default_user_id %}
                                                <a href="{{ path('app_commentaire_edit', {'idC': commentaire.idC}) }}" class="comment-action-link small me-3">
                                                    <i class="fas fa-pencil-alt"></i> Modifier
                                                </a>

                                                <a href="#" 
                                                   class="comment-action-link small text-danger"
                                                   onclick="event.preventDefault(); if(confirm('Êtes-vous sûr de vouloir supprimer ce commentaire ?')) { document.getElementById('delete-form-{{ commentaire.idC }}').submit(); }">
                                                    <i class="fas fa-trash-alt"></i> Supprimer
                                                </a>
                                                <form id="delete-form-{{ commentaire.idC }}" action="{{ path('app_commentaire_delete', {'idC': commentaire.idC}) }}" method="POST" class="d-none">
                                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ commentaire.idC) }}">
                                                </form>
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
        {% endfor %}
    {% else %}
                            <div class="text-center text-muted py-2">
                                <i class="bi bi-chat-left-dots fs-4 mb-2 d-block opacity-50"></i>
                                <p class="mb-0">Soyez le premier à commenter cette publication.</p>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{# Ajout du footer avec attributions Flaticon #}
<div class="container mt-4">
    <div class="row">
        <div class="col-12 text-center text-muted small">
            <a href="https://www.flaticon.com/fr/icones-gratuites/pouces-vers-le-haut" title="pouces vers le haut icônes" class="text-decoration-none text-muted">Pouces vers le haut icônes créées par Freepik - Flaticon</a> • 
            <a href="https://www.flaticon.com/fr/icones-gratuites/ne-pas-aimer" title="ne pas aimer icônes" class="text-decoration-none text-muted">Ne pas aimer icônes créées par Md Tanvirul Haque - Flaticon</a>
        </div>
    </div>
</div>
{% endblock %} {# Fin block body #}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animation au chargement de la page
            const postCard = document.querySelector('.post-card');
            if (postCard) {
                setTimeout(() => {
                    postCard.style.opacity = '1';
                    postCard.style.transform = 'translateY(0)';
                }, 100);
            }
            
            // Animation des images
            const postImage = document.querySelector('.post-image-container img');
            if (postImage) {
                // Appliquer un effet initial
                postImage.style.opacity = '0';
                postImage.style.filter = 'blur(3px)';
                postImage.style.transform = 'scale(0.98)';
                
                // Fonction pour animer l'image
                const animateImage = () => {
                    postImage.style.opacity = '1';
                    postImage.style.filter = 'blur(0)';
                    postImage.style.transform = 'scale(1)';
                };
                
                // Déclencher l'animation après chargement
                postImage.onload = function() {
                    setTimeout(animateImage, 300);
                };
                
                // Si l'image est déjà chargée
                if (postImage.complete) {
                    setTimeout(animateImage, 300);
                }
                
                // Ajouter effet de brillance au survol
                const imageContainer = document.querySelector('.post-image-container');
                if (imageContainer) {
                    imageContainer.addEventListener('mouseenter', function() {
                        postImage.style.transform = 'scale(1.03)';
                    });
                    
                    imageContainer.addEventListener('mouseleave', function() {
                        postImage.style.transform = 'scale(1)';
                    });
                }
            }
            
            // Animation du bouton de retour
            const backButton = document.querySelector('.btn-back');
            if (backButton) {
                backButton.addEventListener('mouseenter', function() {
                    const icon = this.querySelector('i');
                    if (icon) {
                        icon.style.transform = 'translateX(-3px)';
                    }
                });
                
                backButton.addEventListener('mouseleave', function() {
                    const icon = this.querySelector('i');
                    if (icon) {
                        icon.style.transform = 'translateX(0)';
                    }
                });
                
                // Animation de transition en douceur lors du retour
                backButton.addEventListener('click', function(e) {
                    e.preventDefault();
                    const href = this.getAttribute('href');
                    
                    // Effet de sortie
                    postCard.style.opacity = '0';
                    postCard.style.transform = 'translateY(20px)';
                    
                    // Redirection après l'animation
                    setTimeout(() => {
                        window.location.href = href;
                    }, 300);
                });
            }
            
            // Effets visuels simples pour les boutons J'aime
            const likeButtons = document.querySelectorAll('.comment-like-btn');
            likeButtons.forEach(button => {
                button.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = 'rgba(74, 107, 218, 0.1)';
                });
                
                button.addEventListener('mouseleave', function() {
                    if (!this.classList.contains('active')) {
                        this.style.backgroundColor = '';
                    }
                });
            });
        });
    </script>
{% endblock %}
