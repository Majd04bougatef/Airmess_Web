{# Fichier : templates/social_media/show.html.twig #}
{% extends 'base.html.twig' %} {# Hérite de votre base partagée #}

{# Définit le titre de la page #}
{% block title %}{{ social_media.getTitre() }} - Détails{% endblock %}

{# Ce bloc REMPLACE le contenu du block body de base.html.twig #}
{% block body %}
<div class="container my-4 my-lg-5"> {# Use 'my' for vertical margin #}
    <div class="row justify-content-center">
        <div class="col-lg-9 col-xl-8"> {# Slightly wider central column #}

            {# --- Carte Principale du Post --- #}
            <article class="post-card bg-white rounded-3 shadow-sm mb-4 overflow-hidden"> {# Use bg-white, rounded-3, shadow-sm #}
                {# En-tête du Post #}
                <header class="post-header d-flex align-items-center p-3">
                    {% set post_author = social_media.getUser() %}
                    <div class="flex-shrink-0 me-3">
                        <img src="{{ post_author and post_author.getImagesU() ? asset('uploads/profile_pictures/' ~ post_author.getImagesU()) : asset('images/placeholder-avatar.png') }}"
                             alt="{{ post_author ? post_author.getPrenom() : 'Utilisateur' }}"
                             class="post-author-img rounded-circle">
                    </div>
                    <div class="post-author-info flex-grow-1">
                        <h5 class="post-author-name mb-0">
                            {% if post_author %}
                                <strong>{{ post_author.getPrenom() }} {{ post_author.getName() }}</strong>
                            {% else %}
                                <em class="text-muted">Utilisateur inconnu</em>
                            {% endif %}
                        </h5>
                        <small class="post-timestamp text-muted">
                            Publié le {{ social_media.getPublicationDate()|date('d/m/Y à H:i') }}
                        </small>
                    </div>
                    
                </header>

                                {# Contenu du Post #}
                <div class="post-content p-3 pt-0">

                    {# === UNCOMMENTED LINE - Use h3 for better structure === #}
                    <h3 class="post-title mb-3">{{ social_media.getTitre() }}</h3>
                    {# === END OF UNCOMMENTED LINE === #}

                    <p class="mb-3">{{ social_media.getContenu()|nl2br }}</p>
                </div>

                {# Image du Post #}
                {% if social_media.getImagemedia() %}
                    <div class="post-image-container">
                        <img src="{{ asset('uploads/' ~ social_media.getImagemedia()) }}"
                             alt="Image pour {{ social_media.getTitre() }}"
                             class="img-fluid">
                    </div>
                {% endif %}

                {# Statistiques (Likes/Dislikes) - Optionnel, plus clean que les boutons désactivés #}
                 <div class="post-stats px-3 pb-2 text-muted d-flex justify-content-between">
                     <small>
                         {% if social_media.getLikee() > 0 %}
                            <i class="bi bi-hand-thumbs-up-fill text-primary"></i> {{ social_media.getLikee() }}
                         {% endif %}
                     </small>
                     <small>
                         {# Vous pouvez ajouter le nombre de commentaires ici aussi #}
                         {# {{ comments.getTotalItemCount }} commentaires #}
                          {% if social_media.getDislike() > 0 %}
                              {{ social_media.getDislike() }} <i class="bi bi-hand-thumbs-down"></i> Je n'aime pas {# Moins commun d'afficher dislike count #}
                          {% endif %}
                     </small>
                 </div>

               {# Barre d'actions J'aime/Commenter/Modifier/Supprimer #}
<div class="post-actions border-top border-light p-2 d-flex justify-content-around align-items-center flex-wrap"> {# Added align-items-center and flex-wrap #}

    {# Like Button #}
    <button class="btn btn-action flex-grow-1 text-muted like-button mx-1 my-1" {# Added mx-1 my-1 for spacing #}
            data-post-id="{{ social_media.idEB }}"
            data-csrf="{{ csrf_token('like-post') }}"
            data-url="{{ path('app_social_media_like', {idEB: social_media.idEB}) }}">
        <i class="bi bi-hand-thumbs-up me-1"></i> <span class="action-text">J'aime</span> {# Wrap text in span #}
    </button>

    {# Comment Link/Button #}
    <a href="#comments-section" class="btn btn-action flex-grow-1 text-muted mx-1 my-1"> {# Added mx-1 my-1 #}
        <i class="bi bi-chat-dots me-1"></i> <span class="action-text">Commenter</span> {# Wrap text in span #}
    </a>

    {# --- MOVED & MODIFIED EDIT/DELETE ACTIONS --- #}
    {% if post_author and post_author.getIdU() == default_user_id %}

        {# Edit Button - Styled as an action button #}
        <a href="{{ path('app_social_media_edit', {idEB: social_media.idEB}) }}" class="btn btn-action flex-grow-1 text-muted mx-1 my-1"> {# Added mx-1 my-1 #}
            <i class="bi bi-pencil-square me-1"></i> <span class="action-text">Éditer</span> {# Wrap text in span #}
        </a>

        {# Delete Button (within a form, styled as an action button) #}
        {# The form itself doesn't need flex-grow, the button inside does indirectly via btn-action styles #}
        <form action="{{ path('app_social_media_delete', {idEB: social_media.idEB}) }}" method="POST" class="d-inline m-0 flex-grow-1 mx-1 my-1" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette publication ?');"> {# Added mx-1 my-1 #}
            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ social_media.idEB) }}">
            {# Apply btn-action directly to the button, add text-danger #}
            <button type="submit" class="btn btn-action w-100 text-danger">
                <i class="bi bi-trash me-1"></i> <span class="action-text">Supprimer</span> {# Wrap text in span #}
            </button>
        </form>

    {% endif %}
    {# --- END MOVED ACTIONS --- #}

</div>

            </article> {# Fin article post #}

            {# --- Section Commentaires --- #}
            <section id="comments-section" class="comments-section bg-white rounded-3 shadow-sm p-3 p-md-4">
                <h3 class="mb-4 section-title">Commentaires</h3>

                {# Formulaire Ajout Commentaire #}
                <div class="add-comment-form-container d-flex align-items-start mb-4">
                     {% set current_user = app.user %} {# Assuming you have access to the logged-in user #}
                     <div class="flex-shrink-0 me-2 me-md-3">
                         <img src="{{ current_user and current_user.getImagesU() ? asset('uploads/profile_pictures/' ~ current_user.getImagesU()) : asset('images/placeholder-avatar.png') }}"
                              alt="Votre avatar"
                              class="comment-author-img rounded-circle">
                     </div>
                     <div class="flex-grow-1">
                        <form name="{{ comment_form.vars.name }}" method="{{ comment_form.vars.method }}" action="{{ comment_form.vars.action }}" class="add-comment-form">
                            <div class="mb-2 position-relative">
                                {{ form_widget(comment_form.description, {'attr': {'rows': 2, 'placeholder': 'Écrivez un commentaire public...', 'class': 'form-control comment-input'}}) }}
                                {{ form_errors(comment_form.description) }}
                                <button type="submit" class="btn btn-primary btn-sm btn-send-comment" aria-label="Publier le commentaire">
                                    <i class="bi bi-send-fill"></i>
                                </button>
                            </div>
                             {{ form_rest(comment_form) }} {# CSRF token etc. #}
                        </form>
                     </div>
                </div>

                {# Liste des Commentaires Existants #}
<div id="comments-list">
    {% if comments is defined and comments|length > 0 %}
        {% for commentaire in comments %}
            {% set comment_author = commentaire.getUser() %}
            {# --- Unique ID for the comment entry --- #}
            <div class="comment-entry d-flex align-items-start mb-3" id="comment-{{ commentaire.idC }}">
                 {# Image Auteur Commentaire #}
                <div class="flex-shrink-0 me-2 me-md-3">
                    <img src="{{ comment_author and comment_author.getImagesU() ? asset('uploads/profile_pictures/' ~ comment_author.getImagesU()) : asset('images/placeholder-avatar.png') }}"
                         alt="{{ comment_author ? comment_author.getPrenom() : 'Avatar' }}"
                         class="comment-author-img rounded-circle">
                </div>
                 {# Bulle Commentaire + Meta #}
                <div class="flex-grow-1">
                    <div class="comment-bubble p-2 px-3 rounded-pill">
                        <strong class="comment-author-name d-block mb-1">
                            {% if comment_author %}
                                {{ comment_author.getPrenom() }} {{ comment_author.getName() }}
                            {% else %}
                                Utilisateur inconnu
                            {% endif %}
                        </strong>
                        <p class="comment-text mb-0">{{ commentaire.getDescription()|nl2br }}</p>
                    </div>
                    {# Meta Données Commentaire (Date, J'aime, Répondre, Editer, Supprimer) #}
                    <div class="comment-meta mt-1 ps-3 d-flex align-items-center flex-wrap"> {# Use flex for alignment #}
                        {# Date #}
                        <small class="text-muted me-3"> {# Increased margin #}
                            {% if commentaire.createdAt is defined and commentaire.createdAt %}
                                {{ commentaire.createdAt|date('d/m/Y H:i') }}
                            {% else %}
                                 ID: {{ commentaire.idC }} {# Fallback #}
                            {% endif %}
                        </small>

                        {# Like (Placeholder) #}
                        <a href="#" class="comment-action-link small me-3">J'aime</a> {# Increased margin #}

                        {# Reply (Placeholder) #}
                        <a href="#" class="comment-action-link small me-3">Répondre</a> {# Increased margin #}

                        {# --- Edit/Delete Actions --- #}
{# D'abord, on récupère l'auteur du commentaire #}
{% set comment_author = commentaire.getUser() %}

{# === LA CONDITION CORRIGÉE AVEC id_U === #}
{% if app.user and comment_author and app.user.id_U == comment_author.id_U %}
    {# Edit Link #}
    <a href="{{ path('app_comment_edit', {'idC': commentaire.idC}) }}" class="comment-action-link small me-3 edit-comment-link"> {# Increased margin #}
        <i class="bi bi-pencil-square"></i> Modifier
    </a>

    {# Delete Form/Button - Styled as a link #}
    <form action="{{ path('app_comment_delete', {'idC': commentaire.idC}) }}"
          method="POST"
          class="d-inline delete-comment-form"
          onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce commentaire ?');">
        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ commentaire.idC) }}">
        <button type="submit" class="btn btn-link comment-action-link small text-danger p-0 border-0 shadow-none"> {# Styled like a link #}
            <i class="bi bi-trash"></i> Supprimer
        </button>
    </form>
{% endif %}
{# --- End Edit/Delete Actions --- #}
                    </div> {# End comment-meta #}
                </div> {# End flex-grow-1 #}
            </div> {# End comment-entry #}
        {% endfor %}

        {# ... Pagination ... #}
        {# ... No comments message ... #}

    {% else %}
        <div class="text-center text-muted py-3">
           <small>Soyez le premier à commenter.</small>
        </div>
    {% endif %}
</div> {# Fin comments-list #}

            </section> {# Fin section commentaires #}

        </div> {# Fin col #}
    </div> {# Fin row #}
</div> {# Fin container #}
{% endblock %} {# Fin block body #}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle like button clicks
            const likeButtons = document.querySelectorAll('.like-button');
            likeButtons.forEach(button => {
                button.addEventListener('click', async function() {
                    const url = this.dataset.url;
                    const csrfToken = this.dataset.csrf;
                    const postId = this.dataset.postId;
                    
                    try {
                        const response = await fetch(url, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: JSON.stringify({
                                _token: csrfToken
                            })
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        const data = await response.json();
                        
                        if (data.success) {
                            // Mise à jour visuelle du bouton
                            this.innerHTML = `<i class="bi bi-hand-thumbs-up-fill text-primary me-1"></i> J'aime`;
                            
                            // Mise à jour du compteur
                            const likeCountElement = document.querySelector(`[data-post-id="${postId}"] .like-count`);
                            if (likeCountElement) {
                                likeCountElement.textContent = data.likeCount;
                            }
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                });
            });
        });
    </script>
{% endblock %}


{# Utilise le nom de bloc CSS de la base - PLACE THIS IN A SEPARATE CSS FILE! #}
{% block css %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/feed.css') }}">
{% endblock %}
