{% extends 'base.html.twig' %}

{% block title %}{{ social_media.getTitre() }} - Détails{% endblock %}

{% block body %}
<div class="container mt-4">
    {# --- Post Display --- #}
    <article class="card shadow-sm mb-4">
        <div class="card-body">
            {# Post Header: Title, Author, Date #}
            <header class="mb-3 pb-3 border-bottom">
                <h1 class="card-title">{{ social_media.getTitre() }}</h1>
                <p class="card-subtitle text-muted">
                    Publié par
                    {% if social_media.getUser() %}
                        {# Display user's full name #}
                        <strong>{{ social_media.getUser().getPrenom() }} {{ social_media.getUser().getName() }}</strong>
                    {% else %}
                        <em>Utilisateur inconnu</em>
                    {% endif %}
                    le {{ social_media.getPublicationDate()|date('d/m/Y à H:i') }}
                </p>
            </header>

            {# Post Image #}
            {% if social_media.getImagemedia() %}
                <div class="text-center mb-3">
                    {# Ensure 'uploads/' matches your public path to the uploads dir #}
                    <img src="{{ asset('uploads/' ~ social_media.getImagemedia()) }}"
                         alt="Image pour {{ social_media.getTitre() }}"
                         class="img-fluid rounded"
                         style="max-height: 500px; object-fit: cover;"> {# Optional: constrain image size #}
                </div>
            {% endif %}

            {# Post Content #}
            <div class="card-text post-content mb-4">
                {# Use nl2br to respect line breaks #}
                <p>{{ social_media.getContenu()|nl2br }}</p>
            </div>

            {# Like/Dislike Buttons (Placeholder - Requires specific controller actions/JS) #}
            <div class="mb-3">
                <button class="btn btn-outline-success btn-sm me-2" disabled> {# Disabled until logic is added #}
                    <i class="bi bi-hand-thumbs-up"></i> J'aime ({{ social_media.getLikee() }})
                </button>
                <button class="btn btn-outline-danger btn-sm" disabled> {# Disabled until logic is added #}
                    <i class="bi bi-hand-thumbs-down"></i> Je n'aime pas ({{ social_media.getDislike() }})
                </button>
            </div>

            {# Action Buttons: Edit / Delete - Visible only if post belongs to default user ID #}
{% if social_media.getUser() and social_media.getUser().getIdU() == default_user_id %} {# default_user_id passed from controller #}
    <div class="actions border-top pt-3">
        <a href="{{ path('app_social_media_edit', {idEB: social_media.idEB}) }}" class="btn btn-sm btn-primary me-2">
            <i class="bi bi-pencil-square"></i> Éditer
        </a>
        {# Delete Form with CSRF protection #}
        <form action="{{ path('app_social_media_delete', {idEB: social_media.idEB}) }}" method="POST" class="d-inline-block" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette publication ?');">
            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ social_media.idEB) }}">
            <button type="submit" class="btn btn-sm btn-danger">
                <i class="bi bi-trash"></i> Supprimer
            </button>
        </form>
    </div>
{% endif %}
        </div> {# End card-body for post #}
    </article> {# End post article #}

    {# --- Comments Section --- #}
    <section id="comments" class="mt-5">
        <h2 class="mb-4">Commentaires</h2>

        {# Add Comment Form - Shown directly as user is assumed logged in #}
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                 <h5 class="card-title mb-3">Laisser un commentaire</h5>
                 {# Render the form passed from the controller (comment_form) #}
                 {{ form_start(comment_form, {'attr': {'class': 'add-comment-form'}}) }}
                     <div class="mb-3">
                        {# Make sure 'description' is the correct field name in CommentaireType #}
                        {# CORRECTED form_row call #}
                        {{ form_row(comment_form.description, {
                            'label': 'Votre commentaire',
                            'label_attr': {
                                'class': 'form-label'
                             },
                            'attr': {
                                'rows': 4,
                                'placeholder': 'Écrivez votre commentaire ici...',
                                'class': 'form-control'
                            }
                        }) }}
                     </div>

                     {# Render submit button if defined in form type #}
                     {% if comment_form.submit is defined %}
                         {{ form_widget(comment_form.submit, {'label': 'Envoyer le commentaire', 'attr': {'class': 'btn btn-success'}} ) }}
                     {% else %}
                        {# Default submit button if not defined in CommentaireType #}
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-send"></i> Envoyer le commentaire
                        </button>
                     {% endif %}
                {{ form_end(comment_form) }}
            </div> {# End card-body for comment form #}
        </div> {# End add comment card #}


        {# List Existing Comments - Uses the paginated 'comments' variable #}
        <div id="comments-list">
            {% if comments is defined and comments|length > 0 %}
                {% for commentaire in comments %} {# Iterate over the paginated results #}
                    <div class="card mb-3 comment-card">
                        <div class="card-body">
                             <p class="card-text">{{ commentaire.getDescription()|nl2br }}</p>
                             <footer class="blockquote-footer mt-2">
                                Par
                                {% if commentaire.getUser() %}
                                    {# Display comment author's full name #}
                                    <strong>{{ commentaire.getUser().getPrenom() }} {{ commentaire.getUser().getName() }}</strong>
                                {% else %}
                                    <em>Utilisateur inconnu</em>
                                {% endif %}
                                {# Display comment creation date if available #}
                                
                             </footer>
                             {# Optional: Placeholder for comment actions like like/dislike/reply #}
                             {#
                             <div class="comment-actions mt-2">
                                <button class="btn btn-sm btn-outline-secondary me-1">Like</button>
                                <button class="btn btn-sm btn-outline-secondary">Reply</button>
                             </div>
                             #}
                        </div>
                    </div>
                {% endfor %}

                {# Pagination Links - Rendered by KnpPaginatorBundle #}
                <div class="navigation d-flex justify-content-center mt-4">
                    {{ knp_pagination_render(comments) }}
                </div>

            {% else %}
                {# Message shown when there are no comments #}
                <div class="alert alert-secondary text-center" role="alert">
                   <i class="bi bi-chat-dots"></i> Il n'y a pas encore de commentaires. Soyez le premier à réagir !
                </div>
            {% endif %}
        </div> {# End comments-list #}

    </section> {# End comments section #}

</div> {# End container #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# Add any specific JavaScript for this page here if needed #}
    {# e.g., for handling like/dislike buttons via AJAX #}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# You can include a specific CSS file or add inline styles #}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css"> {# Example: Include Bootstrap Icons #}
    <style>
        .post-content p {
            line-height: 1.6;
            white-space: pre-wrap; /* Respect line breaks and wrap text */
        }
        .comment-card {
            border-left: 3px solid #0d6efd; /* Example accent border */
            background-color: #f8f9fa; /* Slightly off-white background */
        }
        .comment-card .card-body {
            padding: 1rem;
        }
        .blockquote-footer {
            font-size: 0.85em;
        }
        .actions .btn, .actions form {
            margin-bottom: 0.5rem; /* Spacing for buttons on small screens */
        }
        /* Ensure images don't exceed container width */
        .img-fluid {
          max-width: 100%;
          height: auto;
        }
    </style>
{% endblock %}