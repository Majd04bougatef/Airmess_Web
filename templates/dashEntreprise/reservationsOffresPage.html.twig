{% extends 'dashEntreprise/dashboardEntreprise.html.twig' %}

{% block title %}Réservations - Airmess Dashboard{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
  .reservation-card {
    transition: all 0.3s ease;
    border-radius: 15px;
    overflow: hidden;
  }
  
  .reservation-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
  }
  
  .table-hover tbody tr:hover {
    background-color: rgba(0, 0, 0, 0.02);
  }
  
  .card-header-gradient {
    background: linear-gradient(to right, #4481eb, #04befe);
    color: white;
    border-bottom: none;
  }
  
  .stats-icon {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
    font-size: 20px;
    color: white;
  }
  
  .bg-gradient-success {
    background: linear-gradient(310deg, #2dce89, #26adab);
  }
  
  .bg-gradient-warning {
    background: linear-gradient(310deg, #fb6340, #fbb140);
  }
  
  .bg-gradient-info {
    background: linear-gradient(310deg, #1171ef, #11cdef);
  }
  
  .avatar-sm {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
  }
  
  .empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem;
  }
  
  .empty-state i {
    font-size: 4rem;
    color: #ccc;
    margin-bottom: 1.5rem;
  }
  
  .empty-state h4 {
    color: #666;
    margin-bottom: 0.75rem;
  }
  
  .empty-state p {
    color: #999;
    max-width: 400px;
    text-align: center;
  }
  
  .status-badge {
    padding: 0.35rem 0.75rem;
    border-radius: 30px;
    font-size: 0.75rem;
    font-weight: 600;
  }
  
  .date-badge {
    background-color: rgba(0, 0, 0, 0.03);
    border-radius: 6px;
    padding: 0.35rem 0.5rem;
    display: inline-flex;
    align-items: center;
  }
  
  .date-badge i {
    margin-right: 0.35rem;
    opacity: 0.5;
  }
  
  /* Ajout de styles pour les filtres actifs */
  .filter-badge {
    background-color: #eee;
    color: #555;
    border-radius: 30px;
    padding: 0.35rem 0.75rem;
    margin-right: 0.5rem;
    font-size: 0.75rem;
    display: inline-flex;
    align-items: center;
    transition: all 0.2s ease;
  }
  
  .filter-badge:hover {
    background-color: #e0e0e0;
  }
  
  .filter-badge i.remove {
    margin-left: 0.5rem;
    cursor: pointer;
    opacity: 0.5;
  }
  
  .filter-badge i.remove:hover {
    opacity: 1;
  }
  
  .filters-container {
    display: flex;
    flex-wrap: wrap;
    margin-top: 0.5rem;
  }
</style>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
  <!-- Page Header -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="card card-header-gradient reservation-card shadow-lg">
        <div class="card-body py-4">
          <div class="row align-items-center">
            <div class="col-md-6">
              <h2 class="text-white font-weight-bolder mb-0">Gestion des Réservations</h2>
              <p class="text-white opacity-8 mb-0">Suivez et gérez toutes les réservations de vos offres</p>
            </div>
            <div class="col-md-6 text-md-end mt-3 mt-md-0">
              <a href="{{ path('offreEntreprise_page') }}" class="btn btn-sm bg-white text-primary px-3 mb-0">
                <i class="fas fa-arrow-left me-2"></i> Retour aux offres
              </a>
              <a href="#" class="btn btn-sm bg-white text-primary px-3 mb-0 ms-2" onclick="window.print()">
                <i class="fas fa-print me-2"></i> Imprimer
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Statistiques -->
  <div class="row mb-4">
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
      <div class="card reservation-card">
        <div class="card-body p-3">
          <div class="row">
            <div class="col-8">
              <div class="numbers">
                <p class="text-sm mb-0 text-uppercase font-weight-bold text-muted">Total Réservations</p>
                <h5 class="font-weight-bolder mt-2">
                  {% if reservations is defined and reservations is not null %}
                    {{ reservations|length }}
                  {% else %}
                    0
                  {% endif %}
                </h5>
                <p class="mb-0 text-xs text-success">
                  <span>Réservations actives</span>
                </p>
              </div>
            </div>
            <div class="col-4 text-end">
              <div class="stats-icon bg-gradient-primary shadow">
                <i class="fas fa-calendar text-lg opacity-10" aria-hidden="true"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
      <div class="card reservation-card">
        <div class="card-body p-3">
          <div class="row">
            <div class="col-8">
              <div class="numbers">
                <p class="text-sm mb-0 text-uppercase font-weight-bold text-muted">Revenus Estimés</p>
                <h5 class="font-weight-bolder mt-2">
                  {% set totalRevenue = 0 %}
                  {% for reservation in reservations %}
                    {% if reservation.offre %}
                      {% set totalRevenue = totalRevenue + reservation.offre.priceAfter %}
                    {% endif %}
                  {% endfor %}
                  {{ totalRevenue|number_format(2, ',', ' ') }} €
                </h5>
                <p class="mb-0 text-xs text-success">
                  <span>Après réductions</span>
                </p>
              </div>
            </div>
            <div class="col-4 text-end">
              <div class="stats-icon bg-gradient-success shadow">
                <i class="fas fa-euro-sign text-lg opacity-10" aria-hidden="true"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
      <div class="card reservation-card">
        <div class="card-body p-3">
          <div class="row">
            <div class="col-8">
              <div class="numbers">
                <p class="text-sm mb-0 text-uppercase font-weight-bold text-muted">Taux d'occupation</p>
                <h5 class="font-weight-bolder mt-2">
                  {% set totalPlaces = 0 %}
                  {% set occupiedPlaces = reservations|length %}
                  {% for reservation in reservations %}
                    {% if reservation.offre %}
                      {% set totalPlaces = totalPlaces + reservation.offre.numberLimit %}
                    {% endif %}
                  {% endfor %}
                  {% if totalPlaces > 0 %}
                    {{ ((occupiedPlaces / (totalPlaces + occupiedPlaces)) * 100)|round }}%
                  {% else %}
                    0%
                  {% endif %}
                </h5>
                <p class="mb-0 text-xs text-info">
                  <span>Places réservées</span>
                </p>
              </div>
            </div>
            <div class="col-4 text-end">
              <div class="stats-icon bg-gradient-info shadow">
                <i class="fas fa-percentage text-lg opacity-10" aria-hidden="true"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-xl-3 col-sm-6">
      <div class="card reservation-card">
        <div class="card-body p-3">
          <div class="row">
            <div class="col-8">
              <div class="numbers">
                <p class="text-sm mb-0 text-uppercase font-weight-bold text-muted">Offres Populaires</p>
                <h5 class="font-weight-bolder mt-2">
                  {% set offreCount = {} %}
                  {% for reservation in reservations %}
                    {% if reservation.offre %}
                      {% set offreId = reservation.offre.idO %}
                      {% if offreCount[offreId] is defined %}
                        {% set offreCount = offreCount|merge({(offreId): offreCount[offreId] + 1}) %}
                      {% else %}
                        {% set offreCount = offreCount|merge({(offreId): 1}) %}
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                  {{ offreCount|length }}
                </h5>
                <p class="mb-0 text-xs text-warning">
                  <span>Offres avec réservations</span>
                </p>
              </div>
            </div>
            <div class="col-4 text-end">
              <div class="stats-icon bg-gradient-warning shadow">
                <i class="fas fa-star text-lg opacity-10" aria-hidden="true"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Liste des réservations -->
  <div class="row">
    <div class="col-12">
      <div class="card reservation-card mb-4">
        <div class="card-header pb-0">
          <div class="d-flex justify-content-between align-items-center">
            <h6 class="mb-0">Liste des Réservations</h6>
            <div class="d-flex">
              <div class="form-group mb-0 me-2">
                <div class="input-group">
                  <span class="input-group-text"><i class="fas fa-search"></i></span>
                  <input class="form-control" id="searchReservation" type="text" placeholder="Rechercher un client, une offre...">
                </div>
              </div>
              <div class="dropdown">
                <button type="button" class="btn btn-outline-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" id="filterDropdown">
                  <i class="fas fa-filter me-2"></i>Filtrer
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                  <li><h6 class="dropdown-header">Période</h6></li>
                  <li><a class="dropdown-item filter-time" data-time="all" href="#">Toutes les réservations</a></li>
                  <li><a class="dropdown-item filter-time" data-time="today" href="#">Aujourd'hui</a></li>
                  <li><a class="dropdown-item filter-time" data-time="week" href="#">Cette semaine</a></li>
                  <li><a class="dropdown-item filter-time" data-time="month" href="#">Ce mois-ci</a></li>
                  <li><hr class="dropdown-divider"></li>
                  <li><h6 class="dropdown-header">Par offre</h6></li>
                  {% set uniqueOffres = [] %}
                  {% for reservation in reservations %}
                    {% if reservation.offre and reservation.offre.idO not in uniqueOffres %}
                      {% set uniqueOffres = uniqueOffres|merge([reservation.offre.idO]) %}
                      <li><a class="dropdown-item filter-offer" data-offer-id="{{ reservation.offre.idO }}" href="#">{{ reservation.offre.description|length > 25 ? reservation.offre.description|slice(0, 25) ~ '...' : reservation.offre.description }}</a></li>
                    {% endif %}
                  {% endfor %}
                </ul>
              </div>
            </div>
          </div>
          <!-- Filtres actifs -->
          <div class="filters-container mt-2" id="activeFilters">
            <!-- Les filtres actifs apparaîtront ici -->
          </div>
        </div>
        <div class="card-body px-0 pt-0 pb-2">
          {% if reservations is defined and reservations|length > 0 %}
            <div class="table-responsive p-4">
              <table class="table align-items-center mb-0 table-hover">
                <thead>
                  <tr>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Client</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Offre</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Prix</th>
                  </tr>
                </thead>
                <tbody id="reservationsTableBody">
                  {% for reservation in reservations %}
                    <tr class="reservation-row" 
                        data-client="{{ reservation.user ? reservation.user.prenom|lower ~ ' ' ~ reservation.user.email|lower : '' }}"
                        data-offer="{{ reservation.offre ? reservation.offre.description|lower : '' }}"
                        data-offer-id="{{ reservation.offre ? reservation.offre.idO : '' }}"
                        data-date="{{ reservation.dateRes ? reservation.dateRes|date('Y-m-d') : '' }}"
                        data-timestamp="{{ reservation.dateRes ? reservation.dateRes|date('U') : '' }}">
                      <td>
                        <div class="d-flex px-3 py-2">
                          <div class="avatar-sm bg-gradient-primary me-3">
                            <i class="fas fa-user text-white"></i>
                          </div>
                          <div class="d-flex flex-column justify-content-center">
                            {% if reservation.user %}
                              <h6 class="mb-0 text-sm">{{ reservation.user.prenom }}</h6>
                              <p class="text-xs text-secondary mb-0">{{ reservation.user.email }}</p>
                            {% else %}
                              <h6 class="mb-0 text-sm">Utilisateur non enregistré</h6>
                              <p class="text-xs text-secondary mb-0">Email non disponible</p>
                            {% endif %}
                          </div>
                        </div>
                      </td>
                      <td>
                        <div class="d-flex flex-column px-3 py-2">
                          {% if reservation.offre %}
                            <h6 class="mb-0 text-sm">{{ reservation.offre.description|length > 30 ? reservation.offre.description|slice(0, 30) ~ '...' : reservation.offre.description }}</h6>
                          {% else %}
                            <h6 class="mb-0 text-sm">Offre non disponible</h6>
                          {% endif %}
                        </div>
                      </td>
                      <td>
                        <div class="d-flex flex-column px-3 py-2">
                          {% if reservation.dateRes %}
                            <div class="date-badge mt-2">
                              <i class="fas fa-calendar-day"></i>
                              <span class="text-xs">{{ reservation.dateRes|date('d/m/Y') }}</span>
                            </div>
                            <div class="date-badge mt-1">
                              <i class="fas fa-clock"></i>
                              <span class="text-xs">{{ reservation.dateRes|date('H:i') }}</span>
                            </div>
                          {% else %}
                            <p class="text-xs text-secondary mb-0">Date non disponible</p>
                          {% endif %}
                        </div>
                      </td>
                      <td>
                        <div class="px-3 py-2">
                          {% if reservation.offre %}
                            <div class="d-flex align-items-center">
                              <h6 class="mb-0 text-sm">{{ reservation.offre.priceAfter }} €</h6>
                            </div>
                          {% else %}
                            <p class="text-xs text-secondary mb-0">Prix non disponible</p>
                          {% endif %}
                        </div>
                      </td>
                    </tr>
                  {% endfor %}
                </tbody>
              </table>
              
              <!-- Pagination -->
              <div class="d-flex justify-content-center mt-4" id="pagination-container">
                <nav aria-label="Navigation des réservations">
                  <ul class="pagination" id="pagination-reservations">
                    <!-- Les boutons de pagination seront générés dynamiquement -->
                  </ul>
                </nav>
              </div>
              
              <!-- Informations sur la pagination -->
              <div class="text-center mt-2">
                <span class="text-xs text-secondary">
                  Affichage de <span id="start-index">1</span> à <span id="end-index">10</span> sur <span id="total-items">{{ reservations|length }}</span> réservations
                </span>
              </div>
            </div>
          {% else %}
            <div class="empty-state">
              <i class="fas fa-calendar-times"></i>
              <h4>Aucune réservation trouvée</h4>
              <p>Les réservations de vos clients apparaîtront ici une fois qu'ils auront réservé vos offres.</p>
              <a href="{{ path('offreEntreprise_page') }}" class="btn btn-primary mt-3">
                <i class="fas fa-plus me-2"></i>Gérer vos offres
              </a>
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Configuration de la pagination
    const itemsPerPage = 10;
    let currentPage = 1;
    let filteredRows = [];
    
    // Variables pour suivre les filtres actifs
    let activeFilters = {
      search: '',
      time: 'all',
      offerId: null
    };
    
    // Fonction pour mettre à jour l'affichage des filtres actifs
    const updateActiveFiltersDisplay = () => {
      const container = document.getElementById('activeFilters');
      container.innerHTML = '';
      
      if (activeFilters.search) {
        const searchBadge = document.createElement('div');
        searchBadge.className = 'filter-badge';
        searchBadge.innerHTML = `<i class="fas fa-search me-1"></i> ${activeFilters.search} <i class="fas fa-times remove" data-filter-type="search"></i>`;
        container.appendChild(searchBadge);
      }
      
      if (activeFilters.time && activeFilters.time !== 'all') {
        const timeBadge = document.createElement('div');
        timeBadge.className = 'filter-badge';
        let timeText = '';
        switch(activeFilters.time) {
          case 'today': timeText = "Aujourd'hui"; break;
          case 'week': timeText = "Cette semaine"; break;
          case 'month': timeText = "Ce mois-ci"; break;
        }
        timeBadge.innerHTML = `<i class="fas fa-calendar-alt me-1"></i> ${timeText} <i class="fas fa-times remove" data-filter-type="time"></i>`;
        container.appendChild(timeBadge);
      }
      
      if (activeFilters.offerId) {
        const offerElement = document.querySelector(`.filter-offer[data-offer-id="${activeFilters.offerId}"]`);
        if (offerElement) {
          const offerBadge = document.createElement('div');
          offerBadge.className = 'filter-badge';
          offerBadge.innerHTML = `<i class="fas fa-tag me-1"></i> ${offerElement.textContent} <i class="fas fa-times remove" data-filter-type="offerId"></i>`;
          container.appendChild(offerBadge);
        }
      }
      
      // Ajouter des écouteurs d'événements pour les boutons de suppression de filtres
      const removeButtons = document.querySelectorAll('.filter-badge .remove');
      removeButtons.forEach(button => {
        button.addEventListener('click', function() {
          const filterType = this.getAttribute('data-filter-type');
          activeFilters[filterType] = filterType === 'time' ? 'all' : null;
          currentPage = 1;
          applyFilters();
          displayPageItems();
          createPagination();
          updateActiveFiltersDisplay();
        });
      });
    };
    
    // Fonction pour déterminer si une date est dans la période spécifiée
    const isDateInPeriod = (timestamp, period) => {
      if (!timestamp || period === 'all') return true;
      
      const now = new Date();
      const date = new Date(parseInt(timestamp) * 1000);
      
      if (period === 'today') {
        return date.setHours(0, 0, 0, 0) === now.setHours(0, 0, 0, 0);
      } else if (period === 'week') {
        const startOfWeek = new Date(now);
        startOfWeek.setDate(now.getDate() - now.getDay());
        startOfWeek.setHours(0, 0, 0, 0);
        return date >= startOfWeek;
      } else if (period === 'month') {
        return date.getMonth() === now.getMonth() && date.getFullYear() === now.getFullYear();
      }
      
      return true;
    };
    
    // Fonction pour filtrer les réservations
    const filterReservations = () => {
      const rows = document.querySelectorAll('.reservation-row');
      filteredRows = [];
      
      rows.forEach(row => {
        const clientText = row.getAttribute('data-client');
        const offerText = row.getAttribute('data-offer');
        const offerId = row.getAttribute('data-offer-id');
        const timestamp = row.getAttribute('data-timestamp');
        
        // Vérifier la recherche
        const matchesSearch = !activeFilters.search || 
                             clientText.includes(activeFilters.search.toLowerCase()) || 
                             offerText.includes(activeFilters.search.toLowerCase());
        
        // Vérifier le filtre de temps
        const matchesTime = isDateInPeriod(timestamp, activeFilters.time);
        
        // Vérifier le filtre d'offre
        const matchesOffer = !activeFilters.offerId || offerId === activeFilters.offerId;
        
        // Ajouter à la liste filtrée si tous les filtres correspondent
        if (matchesSearch && matchesTime && matchesOffer) {
          filteredRows.push(row);
        }
        
        // Masquer toutes les lignes pour commencer
        row.style.display = 'none';
      });
      
      // Mettre à jour les indicateurs de pagination
      const totalItems = document.getElementById('total-items');
      if (totalItems) {
        totalItems.textContent = filteredRows.length;
      }
    };
    
    // Fonction pour appliquer tous les filtres
    const applyFilters = () => {
      filterReservations();
      displayPageItems();
      createPagination();
    };
    
    // Fonction pour afficher les éléments de la page courante
    const displayPageItems = () => {
      const startIndex = (currentPage - 1) * itemsPerPage;
      const endIndex = Math.min(startIndex + itemsPerPage, filteredRows.length);
      
      // Mise à jour des informations de pagination
      document.getElementById('start-index').textContent = filteredRows.length > 0 ? startIndex + 1 : 0;
      document.getElementById('end-index').textContent = endIndex;
      
      // Afficher uniquement les éléments de la page courante
      filteredRows.forEach((row, index) => {
        if (index >= startIndex && index < endIndex) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    };
    
    // Fonction pour créer la pagination
    const createPagination = () => {
      const paginationContainer = document.getElementById('pagination-reservations');
      paginationContainer.innerHTML = '';
      
      const totalPages = Math.ceil(filteredRows.length / itemsPerPage);
      
      // Bouton précédent
      const prevBtn = document.createElement('li');
      prevBtn.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
      prevBtn.innerHTML = '<a class="page-link" href="#" aria-label="Précédent"><span aria-hidden="true">&laquo;</span></a>';
      prevBtn.addEventListener('click', function(e) {
        e.preventDefault();
        if (currentPage > 1) {
          currentPage--;
          displayPageItems();
          createPagination();
        }
      });
      paginationContainer.appendChild(prevBtn);
      
      // Pages numérotées
      const maxPageButtons = 5;
      let startPage = Math.max(1, currentPage - Math.floor(maxPageButtons / 2));
      let endPage = Math.min(totalPages, startPage + maxPageButtons - 1);
      
      if (endPage - startPage + 1 < maxPageButtons && startPage > 1) {
        startPage = Math.max(1, endPage - maxPageButtons + 1);
      }
      
      for (let i = startPage; i <= endPage; i++) {
        const pageBtn = document.createElement('li');
        pageBtn.className = `page-item ${i === currentPage ? 'active' : ''}`;
        pageBtn.innerHTML = `<a class="page-link" href="#">${i}</a>`;
        pageBtn.addEventListener('click', function(e) {
          e.preventDefault();
          currentPage = i;
          displayPageItems();
          createPagination();
        });
        paginationContainer.appendChild(pageBtn);
      }
      
      // Bouton suivant
      const nextBtn = document.createElement('li');
      nextBtn.className = `page-item ${currentPage === totalPages || totalPages === 0 ? 'disabled' : ''}`;
      nextBtn.innerHTML = '<a class="page-link" href="#" aria-label="Suivant"><span aria-hidden="true">&raquo;</span></a>';
      nextBtn.addEventListener('click', function(e) {
        e.preventDefault();
        if (currentPage < totalPages) {
          currentPage++;
          displayPageItems();
          createPagination();
        }
      });
      paginationContainer.appendChild(nextBtn);
      
      // Afficher ou masquer la pagination en fonction du nombre d'éléments
      const paginationParent = document.getElementById('pagination-container');
      paginationParent.style.display = totalPages <= 1 ? 'none' : 'flex';
    };
    
    // Recherche
    const searchInput = document.getElementById('searchReservation');
    if (searchInput) {
      searchInput.addEventListener('keyup', function() {
        activeFilters.search = this.value.trim();
        currentPage = 1;
        applyFilters();
        updateActiveFiltersDisplay();
      });
    }
    
    // Filtrage par période
    const timeFilters = document.querySelectorAll('.filter-time');
    timeFilters.forEach(filter => {
      filter.addEventListener('click', function(e) {
        e.preventDefault();
        activeFilters.time = this.getAttribute('data-time');
        currentPage = 1;
        document.getElementById('filterDropdown').innerHTML = '<i class="fas fa-filter me-2"></i>' + this.textContent;
        applyFilters();
        updateActiveFiltersDisplay();
      });
    });
    
    // Filtrage par offre
    const offerFilters = document.querySelectorAll('.filter-offer');
    offerFilters.forEach(filter => {
      filter.addEventListener('click', function(e) {
        e.preventDefault();
        activeFilters.offerId = this.getAttribute('data-offer-id');
        currentPage = 1;
        document.getElementById('filterDropdown').innerHTML = '<i class="fas fa-filter me-2"></i>' + this.textContent;
        applyFilters();
        updateActiveFiltersDisplay();
      });
    });
    
    // Initialisation
    function initializeReservations() {
      const rows = document.querySelectorAll('.reservation-row');
      filteredRows = Array.from(rows);
      displayPageItems();
      createPagination();
    }
    
    // Initialiser la pagination au chargement
    initializeReservations();
  });
</script>
{% endblock %} 