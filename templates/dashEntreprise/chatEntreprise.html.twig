{% extends 'dashEntreprise/dashboardEntreprise.html.twig' %}

{% block body %}
<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body p-0">
                    <div class="chat-container">
                    
                        <!-- User List Sidebar -->
                        <div class="chat-sidebar">
                            <div class="sidebar-header">
                                <h6 class="mb-0 text-dark">Clients en ligne</h6>
                            </div>
                            <div class="user-list">
                                {% if chatUsers is empty %}
                                    <div class="no-users-message p-3">
                                        <p class="text-muted mb-0">Aucune conversation pour le moment</p>
                                    </div>
                                {% else %}
                                    {% for user in chatUsers %}
                                        <div class="user-item {% if user.id == selectedUserId %}active{% endif %}" data-user-id="{{ user.id }}">
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-wrapper">
                                                    <img src="{{ asset('uploads/users_images/' ~ user.image) }}" class="rounded-circle" onerror="this.src='{{ asset('images/user-avatar.svg') }}'">
                                                    <span class="status-dot {{ user.status == 'En ligne' ? 'online' : 'offline' }}"></span>
                                                </div>
                                                <div class="user-info">
                                                    <h6 class="mb-0">{{ user.name }}</h6>
                                                    <small class="text-muted">{{ user.status }}</small>
                                                    {% if user.lastMessage %}
                                                        <p class="last-message text-truncate mb-0">{{ user.lastMessage }}</p>
                                                        <small class="text-muted">{{ user.lastMessageTime|date('H:i') }}</small>
                                                    {% endif %}
                                                </div>
                                            </div>
                                        </div>
                                    {% endfor %}
                                {% endif %}
                            </div>
                        </div>

                        <!-- Chat Area -->
                        <div class="chat-main">
                            {% if selectedUserId %}
                                <div class="chat-header">
                                    {% set selectedUser = chatUsers|filter(u => u.id == selectedUserId)|first %}
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-wrapper">
                                            <img src="{{ asset('uploads/users_images/' ~ selectedUser.image) }}" class="rounded-circle" onerror="this.src='{{ asset('images/user-avatar.svg') }}'">
                                            <span class="status-dot {{ selectedUser.status == 'En ligne' ? 'online' : 'offline' }}"></span>
                                        </div>
                                        <div class="user-info">
                                            <h6 class="mb-0">{{ selectedUser.name }}</h6>
                                            <small>{{ selectedUser.status }}</small>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="messages-area" id="messages">
                                    {% if messages is empty %}
                                        <div class="message system-message">
                                            <div class="message-content">Commencez une conversation avec {{ selectedUser.name }}</div>
                                        </div>
                                    {% else %}
                                        {% for message in messages %}
                                            <div class="message {{ message.sender.getIdU() == app.session.get('user_id') ? 'user-message' : 'other-message' }}">
                                                <div class="message-content">{{ message.content }}</div>
                                                <div class="message-time">{{ message.dateM|date('H:i') }}</div>
                                            </div>
                                        {% endfor %}
                                    {% endif %}
                                </div>
                                
                                <div class="message-form">
                                    {{ form_start(form, {'method': 'POST', 'action': path('app_message_new'), 'attr': {'id': 'message-form', 'class': 'form-group d-flex align-items-center mb-0'}}) }}
                                        {{ form_widget(form.content, {'attr': {'class': 'form-control flex-grow-1 me-2', 'placeholder': 'Écrivez votre message...', 'id': 'message-input'}}) }}
                                        <button type="submit" class="btn btn-send d-flex align-items-center justify-content-center">
                                            <i class="fas fa-paper-plane"></i>
                                        </button>
                                        <input type="hidden" name="receiver_id" value="{{ selectedUserId }}">
                                    {{ form_end(form) }}
                                </div>
                            {% else %}
                                <div class="no-chat-selected">
                                    <div class="text-center p-5">
                                        <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                                        <h5>Sélectionnez une conversation</h5>
                                        <p class="text-muted">Choisissez un utilisateur dans la liste pour commencer à discuter</p>
                                    </div>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .chat-container {
        display: flex;
        height: calc(100vh - 200px);
        background: #fff;
        border-radius: 15px;
        overflow: hidden;
    }

    .chat-sidebar {
        width: 300px;
        background: #f8f9fa;
        border-right: 1px solid #edf2f7;
    }

    .sidebar-header {
        padding: 20px;
        background: #fff;
        border-bottom: 1px solid #edf2f7;
    }

    .user-list {
        overflow-y: auto;
        height: calc(100% - 70px);
    }

    .user-item {
        padding: 15px 20px;
        cursor: pointer;
        transition: all 0.3s ease;
        border-bottom: 1px solid #edf2f7;
    }

    .user-item:hover {
        background: #edf2f7;
    }

    .user-item.active {
        background: #e9ecef;
    }

    .avatar-wrapper {
        position: relative;
        margin-right: 15px;
    }

    .avatar-wrapper img {
        width: 45px;
        height: 45px;
        object-fit: cover;
    }

    .status-dot {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: 2px solid #fff;
    }

    .status-dot.online {
        background: #48bb78;
    }

    .status-dot.offline {
        background: #e53e3e;
    }

    .chat-main {
        flex: 1;
        display: flex;
        flex-direction: column;
        background: #fff;
    }

    .chat-header {
        padding: 20px;
        background: #6c99bc;
        color: #fff;
    }

    .messages-area {
        flex: 1;
        padding: 20px;
        overflow-y: auto;
        background: #f8fafc;
    }

    .message {
        max-width: 70%;
        margin-bottom: 20px;
        display: flex;
        flex-direction: column;
    }

    .user-message {
        margin-left: auto;
    }

    .other-message {
        margin-right: auto;
    }

    .message-content {
        padding: 12px 18px;
        border-radius: 15px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        margin-bottom: 5px;
    }

    .user-message .message-content {
        background: #6c99bc;
        color: #fff;
        border-bottom-right-radius: 5px;
    }

    .other-message .message-content {
        background: #fff;
        color: #1a202c;
        border-bottom-left-radius: 5px;
    }

    .message-time {
        font-size: 11px;
        color: #718096;
        align-self: flex-end;
    }

    .message-form {
        padding: 20px;
        background: #fff;
        border-top: 1px solid #edf2f7;
        position: sticky;
        bottom: 0;
        z-index: 2;
    }

    #message-form {
        display: flex;
        align-items: center;
        margin-bottom: 0;
    }

    #message-input {
        flex-grow: 1;
        margin-right: 10px;
    }

    .btn-send {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background: #6c99bc;
        color: #fff;
        display: flex;
        align-items: center;
        justify-content: center;
        border: none;
        transition: all 0.3s ease;
    }

    .btn-send:hover {
        background: #5a7f9c;
    }

    /* Custom Scrollbar */
    .messages-area::-webkit-scrollbar,
    .user-list::-webkit-scrollbar {
        width: 6px;
    }

    .messages-area::-webkit-scrollbar-track,
    .user-list::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    .messages-area::-webkit-scrollbar-thumb,
    .user-list::-webkit-scrollbar-thumb {
        background: #cbd5e0;
        border-radius: 3px;
    }

    .messages-area::-webkit-scrollbar-thumb:hover,
    .user-list::-webkit-scrollbar-thumb:hover {
        background: #a0aec0;
    }

    .user-info h6 {
        font-size: 0.9rem;
        font-weight: 600;
    }

    .user-info small {
        font-size: 0.75rem;
    }

    .last-message {
        font-size: 0.8rem;
        color: #718096;
        margin-top: 2px;
    }

    .no-users-message {
        text-align: center;
        padding: 2rem;
    }

    .system-message {
        text-align: center;
        margin: 2rem auto;
        max-width: 80%;
    }

    .system-message .message-content {
        background: #f7fafc;
        color: #718096;
        font-style: italic;
    }

    .no-chat-selected {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        background: #f8fafc;
    }

    .no-chat-selected i {
        color: #cbd5e0;
    }
</style>

<script>
    // Auto-scroll to bottom of messages
    const messagesArea = document.getElementById('messages');
    if (messagesArea) {
        messagesArea.scrollTop = messagesArea.scrollHeight;
    }
    
    // Handle form submission with AJAX to prevent page redirection
    document.getElementById('message-form')?.addEventListener('submit', function(e) {
        e.preventDefault();
        const formData = new FormData(this);
        
        fetch(this.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Add the new message to the chat
                const messagesArea = document.getElementById('messages');
                const newMessage = document.createElement('div');
                newMessage.className = 'message user-message';
                newMessage.innerHTML = `
                    <div class="message-content">${data.message}</div>
                    <div class="message-time">${data.time}</div>
                `;
                messagesArea.appendChild(newMessage);
                messagesArea.scrollTop = messagesArea.scrollHeight;
                document.getElementById('message-input').value = '';
            } else {
                console.error('Error sending message:', data.error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });

    // Handle user selection
    document.querySelectorAll('.user-item').forEach(item => {
        item.addEventListener('click', function() {
            const userId = this.dataset.userId;
            window.location.href = `{{ path('app_message_entreprise') }}?user=${userId}`;
        });
    });
</script>
{% endblock %} 