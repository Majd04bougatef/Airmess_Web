{% extends 'dashAdmin/dashboard.html.twig' %}

{% block title %}Gestion des Utilisateurs{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
  /* Enhanced card styling */
  .card {
    border-radius: 15px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s, box-shadow 0.3s;
  }
  
  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }
  
  /* Table styling */
  .table thead th {
    font-size: 0.7rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.7px;
    padding-top: 12px;
    padding-bottom: 12px;
    border-bottom: 2px solid #f0f2f5;
  }
  
  .table tbody tr {
    transition: background-color 0.2s;
  }
  
  .table tbody tr:hover {
    background-color: rgba(52, 71, 103, 0.04);
  }
  
  /* Avatar styling */
  .avatar {
    transition: transform 0.3s;
    border: 3px solid #fff;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }
  
  .avatar:hover {
    transform: scale(1.15);
  }
  
  /* Button styling */
  .btn {
    text-transform: uppercase;
    font-size: 0.75rem;
    font-weight: 700;
    letter-spacing: 0.5px;
    padding: 0.55rem 1.25rem;
    border-radius: 8px;
    transition: all 0.3s ease;
  }
  
  .btn-sm {
    padding: 0.40rem 1rem;
    font-size: 0.7rem;
  }
  
  .btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
  }
  
  /* Badge styling */
  .badge {
    padding: 0.55em 0.9em;
    font-weight: 700;
    transition: all 0.2s;
  }
  
  .badge:hover {
    transform: scale(1.05);
  }
  
  /* Filter section styling */
  .filter-section {
    background-color: #f8f9fa;
    border-radius: 10px;
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid #eee;
  }
  
  /* Pagination styling */
  .pagination {
    gap: 5px;
  }
  
  .pagination .page-link {
    border-radius: 8px;
    border: none;
    background-color: #f8f9fa;
    color: #344767;
    font-weight: 600;
    padding: 8px 16px;
    transition: all 0.2s;
  }
  
  .pagination .page-item.active .page-link {
    background: linear-gradient(310deg, #7928CA, #FF0080);
    color: white;
    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
  }
  
  .pagination .page-link:hover:not(.active) {
    background-color: #e9ecef;
    transform: translateY(-2px);
  }
  
  /* Timeline styling */
  .timeline-step {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  .timeline-content {
    padding-left: 10px;
  }
  
  /* User actions */
  .user-actions-container {
    display: flex;
    gap: 8px;
  }
  
  .user-action-btn {
    padding: 5px 10px;
    border-radius: 6px;
    transition: all 0.2s;
  }
  
  .user-action-btn:hover {
    background-color: rgba(52, 71, 103, 0.1);
  }
  
  /* User info hover effect */
  .user-info-cell:hover .user-name {
    color: #5e72e4;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 10px;
  }
  
  ::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 10px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: #888;
  }
  
  /* User counter badge */
  .user-counter {
    background: linear-gradient(310deg, #2152ff, #21d4fd);
    color: white;
    padding: 4px 10px;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 700;
    margin-left: 8px;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .action-buttons-container {
      flex-direction: column;
      gap: 10px;
    }
    
    .btn {
      width: 100%;
    }
  }

  /* Online status indicator */
  .online-indicator {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    display: inline-block;
    margin-right: 5px;
  }
  .online-yes {
    background-color: #2dce89;
    box-shadow: 0 0 6px #2dce89;
  }
  .online-no {
    background-color: #adb5bd;
  }
  .last-activity {
    font-size: 10px;
    color: #8392ab;
    margin-top: 3px;
  }
</style>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="{{ asset('js/avatar-handler.js') }}"></script>
<!-- Add libraries for PDF and Excel export -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
{% endblock %}

{% block content %}
<nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl " id="navbarBlur" data-scroll="false">
  <div class="container-fluid py-1 px-3">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
        <li class="breadcrumb-item text-sm"><a class="opacity-5 text-white" href="{{ path('dashboard_page') }}">Dashboard</a></li>
        <li class="breadcrumb-item text-sm text-white active" aria-current="page">Gestion des Utilisateurs</li>
      </ol>
      <h6 class="font-weight-bolder text-white mb-0">Gestion des Utilisateurs</h6>
    </nav>
    <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
      <div class="ms-md-auto pe-md-3 d-flex align-items-center">
        <div class="input-group">
          <span class="input-group-text text-body"><i class="fas fa-search" aria-hidden="true"></i></span>
          <input type="text" class="form-control" id="searchInput" placeholder="Rechercher un utilisateur...">
        </div>
      </div>
    </div>
  </div>
</nav>
<!-- End Navbar -->
<div class="container-fluid py-4">
  <div class="row">
    <div class="col-12">
      <div class="card mb-4">
        <div class="card-header pb-0">
          <div class="d-flex justify-content-between align-items-center">
            <h6>Liste des utilisateurs <span class="user-counter">{{ users|length }}</span></h6>
            <div class="action-buttons-container d-flex gap-2">
              <button type="button" class="btn btn-sm bg-gradient-primary mb-0" data-bs-toggle="modal" data-bs-target="#addUserModal">
                <i class="fas fa-plus me-2"></i> Ajouter un utilisateur
              </button>
              <button type="button" class="btn btn-sm bg-gradient-success mb-0" id="activateAllButton">
                <i class="fas fa-check-circle me-2"></i> Activer tous
              </button>
              <div class="dropdown">
                <button class="btn btn-sm bg-gradient-info mb-0 dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                  <i class="fas fa-file-export me-2"></i> Exporter
                </button>
                <ul class="dropdown-menu" aria-labelledby="exportDropdown">
                  <li><a class="dropdown-item" href="#" id="exportPdfButton" data-bs-toggle="modal" data-bs-target="#pdfExportModal"><i class="fas fa-file-pdf me-2"></i>PDF</a></li>
                  <li><a class="dropdown-item" href="#" id="exportExcelButton"><i class="fas fa-file-excel me-2"></i>Excel (CSV)</a></li>
                </ul>
              </div>
            </div>
          </div>
          
          <!-- Filtres -->
          <div class="mt-3 filter-section">
            <div class="row g-2 align-items-center">
              <div class="col-md-5">
                <div class="btn-group w-100" role="group" aria-label="Role toggle">
                  <input type="radio" class="btn-check" name="roleFilter" id="roleAll" value="" checked>
                  <label class="btn btn-sm btn-outline-secondary" for="roleAll">Tous</label>
                  
                  <input type="radio" class="btn-check" name="roleFilter" id="roleAdmin" value="Admin">
                  <label class="btn btn-sm btn-outline-primary" for="roleAdmin">Admin</label>
                  
                  <input type="radio" class="btn-check" name="roleFilter" id="roleVoyageurs" value="Voyageurs">
                  <label class="btn btn-sm btn-outline-info" for="roleVoyageurs">Voyageurs</label>
                  
                  <input type="radio" class="btn-check" name="roleFilter" id="roleEntreprise" value="Entreprise">
                  <label class="btn btn-sm btn-outline-warning" for="roleEntreprise">Entreprise</label>
                </div>
              </div>
              <div class="col-md-5">
                <div class="btn-group w-100" role="group" aria-label="Status toggle">
                  <input type="radio" class="btn-check" name="statusFilter" id="statusAll" value="" checked>
                  <label class="btn btn-sm btn-outline-secondary" for="statusAll">Tous</label>
                  
                  <input type="radio" class="btn-check" name="statusFilter" id="statusActive" value="actif">
                  <label class="btn btn-sm btn-outline-success" for="statusActive">Actif</label>
                  
                  <input type="radio" class="btn-check" name="statusFilter" id="statusInactive" value="inactif">
                  <label class="btn btn-sm btn-outline-danger" for="statusInactive">Inactif</label>
                </div>
              </div>
              <div class="col-md-2">
                <button class="btn btn-sm btn-outline-secondary w-100" id="resetFilters">
                  <i class="fas fa-undo me-2"></i> RÃ©initialiser
                </button>
              </div>
            </div>
          </div>
        </div>
        <div class="card-body px-0 pt-0 pb-2">
          <div class="table-responsive p-0">
            <table class="table align-items-center mb-0" id="usersTable" 
                  data-edit-path="{{ path('admin_user_edit', {'id_U': 0}) }}"
                  data-delete-path="{{ path('admin_user_delete', {'id_U': 0}) }}">
              <thead>
                <tr>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Utilisateur</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">RÃ´le</th>
                  <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Statut</th>
                  <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date de naissance</th>
                  <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">TÃ©lÃ©phone</th>
                  <th class="text-secondary opacity-7">Actions</th>
                </tr>
              </thead>
              <tbody>
                {% for user in users %}
                  <tr>
                    <td class="user-info-cell">
                      <div class="d-flex px-2 py-1">
                        <div>
                          <img src="{{ path('app_profile_image', {'filename': user.imagesU }) }}" 
                               class="avatar avatar-sm me-3"
                               alt="{{ user.name }}" 
                               onerror="this.src='{{ asset('images/user-avatar.svg') }}'">
                          {% if user.isOnline %}
                          <span class="online-indicator online-yes" title="En ligne"></span>
                          {% else %}
                          <span class="online-indicator online-no" title="Hors ligne"></span>
                          {% endif %}
                        </div>
                        <div class="d-flex flex-column justify-content-center">
                          <h6 class="mb-0 text-sm user-name">{{ user.name }} {{ user.prenom }}</h6>
                          <p class="text-xs text-secondary mb-0">{{ user.email }}</p>
                          {% if user.lastActivity %}
                          <p class="last-activity">
                            DerniÃ¨re activitÃ©: {{ user.lastActivity|date("d/m/Y H:i") }}
                          </p>
                          {% endif %}
                        </div>
                      </div>
                    </td>
                    <td>
                      <p class="text-xs font-weight-bold mb-0">{{ user.roleUser }}</p>
                    </td>
                    <td class="align-middle text-center text-sm">
                      <!-- Debug: {{ user.statut }} -->
                      {% if user.statut == 'actif' or user.statut == 'active' %}
                        <span class="badge badge-sm bg-gradient-success">Actif</span>
                      {% elseif user.statut == 'inactif' or user.statut == 'inactive' %}
                        <span class="badge badge-sm bg-gradient-danger">Inactif</span>
                      {% else %}
                        <span class="badge badge-sm bg-gradient-warning">{{ user.statut }}</span>
                      {% endif %}
                    </td>
                    <td class="align-middle text-center">
                      <span class="text-secondary text-xs font-weight-bold">{{ user.dateNaiss|date("d/m/Y") }}</span>
                    </td>
                    <td class="align-middle text-center">
                      <span class="text-secondary text-xs font-weight-bold">{{ user.phoneNumber }}</span>
                    </td>
                    <td class="align-middle">
                      <div class="user-actions-container">
                        <button class="btn btn-link text-warning user-action-btn px-2 mb-0" data-bs-toggle="modal" data-bs-target="#editUserModal{{ user.idU }}">
                          <i class="fas fa-edit me-2"></i>Modifier
                        </button>
                        <button class="btn btn-link text-danger user-action-btn px-2 mb-0" onclick="confirmDelete({{ user.idU }})">
                          <i class="fas fa-trash me-2"></i>Supprimer
                        </button>
                      </div>
                    </td>
                  </tr>
                {% endfor %}
              </tbody>
            </table>
          </div>
          <!-- Pagination -->
          <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Page navigation">
              <ul class="pagination">
                {% if currentPage > 1 %}
                  <li class="page-item">
                    <a class="page-link pagination-link" href="{{ path('user_page', {'page': currentPage - 1}) }}" aria-label="PrÃ©cÃ©dent">
                      <span aria-hidden="true">&laquo;</span> PrÃ©cÃ©dent
                    </a>
                  </li>
                {% else %}
                  <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">&laquo; PrÃ©cÃ©dent</a>
                  </li>
                {% endif %}
                
                {% set startPage = max(1, currentPage - 2) %}
                {% set endPage = min(totalPages, startPage + 4) %}
                {% if endPage - startPage < 4 and totalPages > 5 %}
                  {% set startPage = max(1, endPage - 4) %}
                {% endif %}
                
                {% for i in startPage..endPage %}
                  <li class="page-item {{ currentPage == i ? 'active' : '' }}">
                    <a class="page-link pagination-link" href="{{ path('user_page', {'page': i}) }}">{{ i }}</a>
                  </li>
                {% endfor %}
                
                {% if currentPage < totalPages %}
                  <li class="page-item">
                    <a class="page-link pagination-link" href="{{ path('user_page', {'page': currentPage + 1}) }}" aria-label="Suivant">
                      Suivant <span aria-hidden="true">&raquo;</span>
                    </a>
                  </li>
                {% else %}
                  <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Suivant &raquo;</a>
                  </li>
                {% endif %}
              </ul>
            </nav>
          </div>
          
          <!-- Pagination info -->
          <div class="text-center text-sm text-muted mt-2">
            Affichage des utilisateurs {{ (currentPage - 1) * pageSize + 1 }} Ã  {{ min(currentPage * pageSize, totalUsers) }} sur {{ totalUsers }} utilisateurs
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Statistiques Utilisateurs -->
  <div class="row">
    <div class="col-lg-7 mb-lg-0 mb-4">
      <div class="card mb-4">
        <div class="card-header pb-0">
          <h6>RÃ©partition des utilisateurs</h6>
        </div>
        <div class="card-body p-3">
          <div class="chart">
            <canvas id="userRoleChart" class="chart-canvas" height="300"></canvas>
          </div>
        </div>
      </div>
    </div>
    <div class="col-lg-5">
      <div class="card mb-4">
        <div class="card-header pb-0">
          <h6>ActivitÃ© des utilisateurs</h6>
        </div>
        <div class="card-body p-3">
          <div class="timeline timeline-one-side">
            {% for activity in recentActivities %}
              <div class="timeline-block mb-3">
                <span class="timeline-step">
                  <i class="{{ activity.icon }}"></i>
                </span>
                <div class="timeline-content">
                  <h6 class="text-dark text-sm font-weight-bold mb-0">{{ activity.description }}</h6>
                  <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">Il y a {{ activity.date|date("d") == "now"|date("d") ? activity.date|date("G") ~ ' heures' : activity.date|date("d/m/Y") }}</p>
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Footer -->
  <footer class="footer pt-3">
    <div class="container-fluid">
      <div class="row align-items-center justify-content-lg-between">
        <div class="col-lg-6 mb-lg-0 mb-4">
          <div class="copyright text-center text-sm text-muted text-lg-start">
            Â© {{ "now"|date("Y") }} Airmess
          </div>
        </div>
      </div>
    </div>
  </footer>
</div>

<!-- Modals -->
<!-- Modal Ajouter Utilisateur -->
<div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="addUserModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addUserModalLabel">Ajouter un utilisateur</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="addUserForm" method="post" action="{{ path('admin_user_add') }}" enctype="multipart/form-data">
          <div class="mb-3">
            <label for="name" class="form-label">Nom</label>
            <input type="text" class="form-control" id="name" name="name" required>
          </div>
          <div class="mb-3">
            <label for="prenom" class="form-label">PrÃ©nom</label>
            <input type="text" class="form-control" id="prenom" name="prenom" required>
          </div>
          <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email" required>
          </div>
          <div class="mb-3">
            <label for="password" class="form-label">Mot de passe</label>
            <input type="password" class="form-control" id="password" name="password" required>
          </div>
          <div class="mb-3">
            <label for="phone" class="form-label">TÃ©lÃ©phone</label>
            <input type="tel" class="form-control" id="phone" name="phone">
          </div>
          <div class="mb-3">
            <label for="role" class="form-label">RÃ´le</label>
            <select class="form-select" id="role" name="role" required>
              <option value="Voyageurs">Voyageurs</option>
              <option value="Entreprise">Entreprise</option>
              <option value="Admin">Admin</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="photo" class="form-label">Photo de profil</label>
            <input type="file" class="form-control" id="photo" name="photo" accept="image/*">
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Annuler</button>
        <button type="button" class="btn bg-gradient-primary" id="saveNewUser" onclick="submitAddForm()">Enregistrer</button>
      </div>
    </div>
  </div>
</div>

<!-- Modals d'Ã©dition pour chaque utilisateur -->
{% for user in users %}
<div class="modal fade" id="editUserModal{{ user.idU }}" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel{{ user.idU }}" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editUserModalLabel{{ user.idU }}">Modifier l'utilisateur</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="editUserForm{{ user.idU }}" method="post" action="{{ path('admin_user_edit', {'id_U': user.idU}) }}" enctype="multipart/form-data">
          <input type="hidden" id="editUserId{{ user.idU }}" name="id" value="{{ user.idU }}">
          <div class="mb-3">
            <label for="editName{{ user.idU }}" class="form-label">Nom</label>
            <input type="text" class="form-control" id="editName{{ user.idU }}" name="name" value="{{ user.name }}" required>
          </div>
          <div class="mb-3">
            <label for="editPrenom{{ user.idU }}" class="form-label">PrÃ©nom</label>
            <input type="text" class="form-control" id="editPrenom{{ user.idU }}" name="prenom" value="{{ user.prenom }}" required>
          </div>
          <div class="mb-3">
            <label for="editEmail{{ user.idU }}" class="form-label">Email</label>
            <input type="email" class="form-control" id="editEmail{{ user.idU }}" name="email" value="{{ user.email }}" required>
          </div>
          <div class="mb-3">
            <label for="editPhone{{ user.idU }}" class="form-label">TÃ©lÃ©phone</label>
            <input type="tel" class="form-control" id="editPhone{{ user.idU }}" name="phone" value="{{ user.phoneNumber }}">
          </div>
          <div class="mb-3">
            <label for="editRole{{ user.idU }}" class="form-label">RÃ´le</label>
            <select class="form-select" id="editRole{{ user.idU }}" name="role">
              <option value="Voyageurs" {% if user.roleUser == 'Voyageurs' %}selected{% endif %}>Voyageurs</option>
              <option value="Entreprise" {% if user.roleUser == 'Entreprise' %}selected{% endif %}>Entreprise</option>
              <option value="Admin" {% if user.roleUser == 'Admin' %}selected{% endif %}>Admin</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="editStatus{{ user.idU }}" class="form-label">Statut</label>
            <select class="form-select" id="editStatus{{ user.idU }}" name="status">
              <option value="actif" {% if user.statut == 'actif' or user.statut == 'active' %}selected{% endif %}>Actif</option>
              <option value="inactif" {% if user.statut == 'inactif' or user.statut == 'inactive' %}selected{% endif %}>Inactif</option>
            </select>
          </div>
          <div class="form-group mb-3">
            <label for="editPhoto{{ user.idU }}" class="form-label">Photo de profil</label>
            <div class="mb-3">
              <img src="{{ '/images_users/' ~ user.imagesU }}" alt="Photo de profil actuelle"
                class="img-thumbnail" style="max-width: 100px; max-height: 100px;">
            </div>
            <input type="file" class="form-control" id="editPhoto{{ user.idU }}" name="photo" accept="image/*">
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Annuler</button>
        <button type="button" class="btn bg-gradient-primary" id="saveEditUser-{{ user.idU }}" onclick="submitEditForm({{ user.idU }})">Enregistrer</button>
      </div>
    </div>
  </div>
</div>
{% endfor %}

<!-- Modal PDF Export Options -->
<div class="modal fade" id="pdfExportModal" tabindex="-1" aria-labelledby="pdfExportModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="pdfExportModalLabel">Options d'export PDF</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="pdfExportForm" method="post" action="{{ path('admin_users_export_pdf') }}">
          <div class="mb-3">
            <label for="pdfTitle" class="form-label">Titre du document</label>
            <input type="text" class="form-control" id="pdfTitle" name="title" value="Liste des Utilisateurs">
          </div>
          <div class="mb-3">
            <label for="pdfOrientation" class="form-label">Orientation</label>
            <select class="form-select" id="pdfOrientation" name="orientation">
              <option value="portrait">Portrait</option>
              <option value="landscape" selected>Paysage</option>
            </select>
          </div>
          <div class="mb-3">
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="showTimestamp" name="showTimestamp" checked>
              <label class="form-check-label" for="showTimestamp">
                Inclure date et heure d'export
              </label>
            </div>
          </div>
          <div class="mb-3">
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="showFilters" name="showFilters" checked>
              <label class="form-check-label" for="showFilters">
                Inclure filtres appliquÃ©s
              </label>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label">Colonnes Ã  inclure</label>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="includeUserColumn" name="includeUserColumn" checked>
              <label class="form-check-label" for="includeUserColumn">
                Utilisateur
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="includeRoleColumn" name="includeRoleColumn" checked>
              <label class="form-check-label" for="includeRoleColumn">
                RÃ´le
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="includeStatusColumn" name="includeStatusColumn" checked>
              <label class="form-check-label" for="includeStatusColumn">
                Statut
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="includeDateColumn" name="includeDateColumn" checked>
              <label class="form-check-label" for="includeDateColumn">
                Date de naissance
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="includePhoneColumn" name="includePhoneColumn" checked>
              <label class="form-check-label" for="includePhoneColumn">
                TÃ©lÃ©phone
              </label>
            </div>
          </div>
          <!-- Ajouter les filtres actifs comme champs cachÃ©s -->
          <input type="hidden" id="roleFilterValue" name="role" value="">
          <input type="hidden" id="statusFilterValue" name="status" value="">
          <input type="hidden" id="searchFilterValue" name="search" value="">
          
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
            <button type="submit" class="btn btn-primary">GÃ©nÃ©rer PDF</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Modal Excel Export Options -->
<div class="modal fade" id="excelExportModal" tabindex="-1" aria-labelledby="excelExportModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="excelExportModalLabel">Options d'export Excel</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="excelExportForm" method="post" action="{{ path('admin_users_export_excel') }}">
          <div class="mb-3">
            <label class="form-label">Colonnes Ã  inclure</label>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="excelIncludeUserColumn" name="includeUserColumn" checked>
              <label class="form-check-label" for="excelIncludeUserColumn">
                Utilisateur
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="excelIncludeRoleColumn" name="includeRoleColumn" checked>
              <label class="form-check-label" for="excelIncludeRoleColumn">
                RÃ´le
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="excelIncludeStatusColumn" name="includeStatusColumn" checked>
              <label class="form-check-label" for="excelIncludeStatusColumn">
                Statut
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="excelIncludeDateColumn" name="includeDateColumn" checked>
              <label class="form-check-label" for="excelIncludeDateColumn">
                Date de naissance
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="excelIncludePhoneColumn" name="includePhoneColumn" checked>
              <label class="form-check-label" for="excelIncludePhoneColumn">
                TÃ©lÃ©phone
              </label>
            </div>
          </div>
          <!-- Ajouter les filtres actifs comme champs cachÃ©s -->
          <input type="hidden" id="excelRoleFilterValue" name="role" value="">
          <input type="hidden" id="excelStatusFilterValue" name="status" value="">
          <input type="hidden" id="excelSearchFilterValue" name="search" value="">
          
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
            <button type="submit" class="btn btn-primary">GÃ©nÃ©rer Excel</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Setup pour le graphique de rÃ©partition des utilisateurs
  var ctx = document.getElementById('userRoleChart').getContext('2d');
  var userRoleChart = new Chart(ctx, {
    type: 'doughnut',
    data: {
      labels: ['Voyageurs', 'Entreprise', 'Admin'],
      datasets: [{
        label: 'Utilisateurs par rÃ´le',
        data: [
          {{ usersByRole.Voyageurs }}, 
          {{ usersByRole.Entreprise }}, 
          {{ usersByRole.Admin }}
        ],
        backgroundColor: [
          'rgba(94, 114, 228, 0.8)',
          'rgba(233, 196, 106, 0.8)',
          'rgba(92, 184, 92, 0.8)'
        ],
        borderColor: [
          'rgba(94, 114, 228, 1)',
          'rgba(233, 196, 106, 1)',
          'rgba(92, 184, 92, 1)'
        ],
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'bottom'
        }
      }
    }
  });
  
  // Fonction de filtrage des utilisateurs
  function applyFilters() {
    // RÃ©cupÃ©rer les valeurs des filtres
    const roleFilter = document.querySelector('input[name="roleFilter"]:checked').value;
    const statusFilter = document.querySelector('input[name="statusFilter"]:checked').value;
    const searchFilter = document.getElementById('searchInput').value;

    // Afficher un indicateur de chargement
    const tableBody = document.querySelector('#usersTable tbody');
    tableBody.innerHTML = '<tr><td colspan="6" class="text-center py-3"><i class="fas fa-spinner fa-spin me-2"></i> Chargement...</td></tr>';
    
    // Mettre Ã  jour le compteur temporairement
    document.querySelector('.user-counter').textContent = '...';
    
    // Faire une requÃªte AJAX pour obtenir les donnÃ©es filtrÃ©es
    fetch('{{ path('user_page', {'page': 1}) }}', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Requested-With': 'XMLHttpRequest'
      },
      body: JSON.stringify({
        search: searchFilter,
        role: roleFilter,
        status: statusFilter
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Mettre Ã  jour le tableau avec les donnÃ©es filtrÃ©es
        tableBody.innerHTML = data.html;
        
        // Mettre Ã  jour la pagination
        const paginationContainer = document.querySelector('.pagination');
        if (paginationContainer) {
          paginationContainer.innerHTML = data.pagination;
          
          // Mettre Ã  jour les liens de pagination avec les filtres
          updatePaginationLinks();
        }
        
        // Mettre Ã  jour le compteur d'utilisateurs
        document.querySelector('.user-counter').textContent = data.totalItems;
        
        // Mettre Ã  jour les informations de pagination
        const paginationInfoEl = document.querySelector('.text-center.text-sm.text-muted.mt-2');
        if (paginationInfoEl && data.paginationInfo) {
          paginationInfoEl.textContent = data.paginationInfo;
        }
      } else {
        console.error('Erreur lors du filtrage:', data.message);
        tableBody.innerHTML = '<tr><td colspan="6" class="text-center py-3"><i class="fas fa-exclamation-triangle text-warning me-2"></i> Erreur lors du chargement des donnÃ©es</td></tr>';
      }
    })
    .catch(error => {
      console.error('Erreur lors du filtrage:', error);
      tableBody.innerHTML = '<tr><td colspan="6" class="text-center py-3"><i class="fas fa-exclamation-triangle text-warning me-2"></i> Erreur lors du chargement des donnÃ©es</td></tr>';
    });
  }
  
  // Event listeners for role radio buttons
  document.querySelectorAll('input[name="roleFilter"]').forEach(function(radio) {
    radio.addEventListener('change', applyFilters);
  });
  
  // Event listeners for status radio buttons
  document.querySelectorAll('input[name="statusFilter"]').forEach(function(radio) {
    radio.addEventListener('change', applyFilters);
  });
  
  // RÃ©initialiser les filtres
  document.getElementById('resetFilters').addEventListener('click', function() {
    document.getElementById('roleAll').checked = true;
    document.getElementById('statusAll').checked = true;
    document.getElementById('searchInput').value = '';
    
    // Appliquer les filtres rÃ©initialisÃ©s
    applyFilters();
  });
  
  // AJAX Search functionality
  const searchInput = document.getElementById('searchInput');
  let searchTimeout;

  searchInput.addEventListener('input', function() {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
      applyFilters();
    }, 500); // DÃ©lai de 500ms pour Ã©viter trop de requÃªtes
  });
  
  // Fonction pour soumettre le formulaire d'ajout d'utilisateur
  function submitAddForm() {
    var form = document.getElementById('addUserForm');
    
    if (!form) {
      console.error('Form not found: addUserForm');
      alert('Erreur: Formulaire non trouvÃ©');
      return;
    }
    
    // Check required fields
    var name = form.querySelector('[name="name"]');
    var prenom = form.querySelector('[name="prenom"]');
    var email = form.querySelector('[name="email"]');
    var password = form.querySelector('[name="password"]');
    
    if (!name.value || !prenom.value || !email.value || !password.value) {
      alert('Veuillez remplir tous les champs obligatoires');
      return;
    }
    
    // Create FormData from the form
    var formData = new FormData(form);
    
    // Debug form data
    console.log('Add user form data:');
    for (var pair of formData.entries()) {
      console.log(pair[0] + ': ' + pair[1]);
    }
    
    // Use fetch API to submit the form
    fetch(form.action, {
      method: form.method,
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      },
      body: formData
    })
    .then(response => {
      console.log('Response status:', response.status);
      return response.json();
    })
    .then(data => {
      console.log('Response data:', data);
      if (data.success) {
        alert('Utilisateur crÃ©Ã© avec succÃ¨s');
        // Reload page to see the new user, staying on current page
        window.location.href = '{{ path('user_page', {'page': currentPage}) }}';
      } else {
        alert('Erreur: ' + data.message);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Une erreur est survenue');
    });
  }

  // Fonction pour activer tous les utilisateurs
  document.getElementById('activateAllButton').addEventListener('click', function() {
    if (confirm("Ãtes-vous sÃ»r de vouloir activer tous les utilisateurs?")) {
      fetch('{{ path('admin_activate_all_users') }}', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Tous les utilisateurs ont Ã©tÃ© activÃ©s avec succÃ¨s');
          // Reload page to update the user list
          window.location.href = '{{ path('user_page', {'page': currentPage}) }}';
        } else {
          alert('Erreur lors de l\'activation des utilisateurs: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Une erreur est survenue lors de l\'activation des utilisateurs');
      });
    }
  });

  // Excel Export
  document.getElementById('exportExcelButton').addEventListener('click', function() {
    // RÃ©cupÃ©rer les valeurs des filtres actifs
    let roleFilter = document.querySelector('input[name="roleFilter"]:checked').value;
    let statusFilter = document.querySelector('input[name="statusFilter"]:checked').value;
    let searchFilter = document.getElementById('searchInput').value;
    
    // Mettre Ã  jour les champs cachÃ©s du formulaire Excel
    document.getElementById('excelRoleFilterValue').value = roleFilter;
    document.getElementById('excelStatusFilterValue').value = statusFilter;
    document.getElementById('excelSearchFilterValue').value = searchFilter;
    
    // Afficher le modal Excel
    new bootstrap.Modal(document.getElementById('excelExportModal')).show();
  });

  // PrÃ©parer les donnÃ©es du formulaire d'export PDF et Excel
  document.getElementById('exportPdfButton').addEventListener('click', function() {
    // RÃ©cupÃ©rer les valeurs des filtres actifs
    let roleFilter = document.querySelector('input[name="roleFilter"]:checked').value;
    let statusFilter = document.querySelector('input[name="statusFilter"]:checked').value;
    let searchFilter = document.getElementById('searchInput').value;
    
    // Mettre Ã  jour les champs cachÃ©s du formulaire PDF
    document.getElementById('roleFilterValue').value = roleFilter;
    document.getElementById('statusFilterValue').value = statusFilter;
    document.getElementById('searchFilterValue').value = searchFilter;
  });
  
  // Ajouter les filtres aux liens de pagination
  function updatePaginationLinks() {
    const roleFilter = document.querySelector('input[name="roleFilter"]:checked').value;
    const statusFilter = document.querySelector('input[name="statusFilter"]:checked').value;
    const searchFilter = document.getElementById('searchInput').value;
    
    const params = new URLSearchParams();
    if (roleFilter) params.append('role', roleFilter);
    if (statusFilter) params.append('status', statusFilter);
    if (searchFilter) params.append('search', searchFilter);
    
    const queryString = params.toString();
    
    document.querySelectorAll('.pagination-link').forEach(link => {
      const url = new URL(link.href);
      
      // Ajouter les paramÃ¨tres de filtre Ã  l'URL
      if (roleFilter) url.searchParams.set('role', roleFilter);
      if (statusFilter) url.searchParams.set('status', statusFilter);
      if (searchFilter) url.searchParams.set('search', searchFilter);
      
      link.href = url.toString();
    });
  }
  
  // Mettre Ã  jour les liens de pagination quand les filtres changent
  document.querySelectorAll('input[name="roleFilter"]').forEach(radio => {
    radio.addEventListener('change', function() {
      updatePaginationLinks();
      applyFilters();
    });
  });
  
  document.querySelectorAll('input[name="statusFilter"]').forEach(radio => {
    radio.addEventListener('change', function() {
      updatePaginationLinks();
      applyFilters();
    });
  });
  
  document.getElementById('searchInput').addEventListener('input', function() {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
      updatePaginationLinks();
    }, 300);
  });
  
  // Initialiser les liens de pagination
  updatePaginationLinks();
});

// Fonction de confirmation de suppression
function confirmDelete(userId) {
  if (confirm("Ãtes-vous sÃ»r de vouloir dÃ©sactiver cet utilisateur ?")) {
    const deletePath = document.getElementById('usersTable').dataset.deletePath.replace('/0', '/' + userId);
    
    fetch(deletePath, {
      method: 'POST',
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Utilisateur dÃ©sactivÃ© avec succÃ¨s');
        // Reload page to update the user list, keeping the current page
        window.location.href = '{{ path('user_page', {'page': currentPage}) }}';
      } else {
        alert('Erreur lors de la dÃ©sactivation');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Une erreur est survenue');
    });
  }
}

// Fonction pour enregistrer les modifications d'un utilisateur
function submitEditForm(userId) {
  // Get the form element directly
  var form = document.getElementById('editUserForm' + userId);
  
  if (!form) {
    console.error('Form not found:', 'editUserForm' + userId);
    alert('Erreur: Formulaire non trouvÃ©');
    return;
  }
  
  // Check required fields
  var name = form.querySelector('[name="name"]');
  var prenom = form.querySelector('[name="prenom"]');
  var email = form.querySelector('[name="email"]');
  
  if (!name.value || !prenom.value || !email.value) {
    alert('Veuillez remplir tous les champs obligatoires');
    return;
  }
  
  // Create FormData from the form
  var formData = new FormData(form);
  
  // Debug form data
  console.log('Form data entries:');
  for (var pair of formData.entries()) {
    console.log(pair[0] + ': ' + pair[1]);
  }
  
  // Use fetch API to submit the form
  fetch(form.action, {
    method: form.method,
    headers: {
      'X-Requested-With': 'XMLHttpRequest'
    },
    body: formData
  })
  .then(response => {
    console.log('Response status:', response.status);
    return response.json();
  })
  .then(data => {
    console.log('Response data:', data);
    if (data.success) {
      alert('Utilisateur modifiÃ© avec succÃ¨s');
      // Reload page to see the updated user, keeping the current page
      window.location.href = '{{ path('user_page', {'page': currentPage}) }}';
    } else {
      alert('Erreur: ' + data.message);
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Une erreur est survenue');
  });
}
</script>
{% endblock %}