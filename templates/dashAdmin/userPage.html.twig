{% extends 'dashAdmin/dashboard.html.twig' %}

{% block title %}Gestion des Utilisateurs{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
  /* Main Container & Elements */
  .container-fluid {
    padding: 2rem;
  }
  
  /* Modern Card Styling */
  .card {
    border: none;
    border-radius: 15px;
    box-shadow: 0 5px 25px rgba(0, 0, 0, 0.07);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    background: #fff;
    margin-bottom: 1.5rem;
  }
  
  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
  }
  
  .card-header {
    background: linear-gradient(to right, #f8f9fa, #ffffff);
    border-bottom: 1px solid rgba(0,0,0,0.05);
    padding: 1.25rem 1.5rem;
  }
  
  /* Filter Controls */
  .filter-section {
    padding: 1.25rem;
    margin-bottom: 1.5rem;
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    border-radius: 12px;
    border: 1px solid rgba(0,0,0,0.05);
    box-shadow: 0 3px 10px rgba(0,0,0,0.03);
  }
  
  /* Button Styling */
  .btn {
    font-weight: 600;
    letter-spacing: 0.3px;
    padding: 0.55rem 1rem;
    border-radius: 8px;
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0,0,0,0.04);
  }
  
  .btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.07);
  }
  
  .btn-sm {
    padding: 0.4rem 0.8rem;
    font-size: 0.82rem;
  }
  
  /* Filter Toggle Buttons */
  .btn-check:checked + .btn-outline-secondary,
  .btn-check:checked + .btn-outline-primary,
  .btn-check:checked + .btn-outline-info,
  .btn-check:checked + .btn-outline-success,
  .btn-check:checked + .btn-outline-danger {
    color: #fff;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }
  
  .btn-check:checked + .btn-outline-secondary {
    background: linear-gradient(45deg, #6c757d, #5a6268);
    border-color: #5a6268;
  }
  
  .btn-check:checked + .btn-outline-primary {
    background: linear-gradient(45deg, #4e73df, #3a54c4);
    border-color: #3a54c4;
  }
  
  .btn-check:checked + .btn-outline-info {
    background: linear-gradient(45deg, #36b9cc, #258391);
    border-color: #258391;
  }
  
  .btn-check:checked + .btn-outline-success {
    background: linear-gradient(45deg, #1cc88a, #13855c);
    border-color: #13855c;
  }
  
  .btn-check:checked + .btn-outline-danger {
    background: linear-gradient(45deg, #e74a3b, #be2e1f);
    border-color: #be2e1f;
  }
  
  /* Table Styling */
  .table {
    margin-bottom: 0;
    border-collapse: separate;
    border-spacing: 0;
  }
  
  .table thead th {
    font-size: 0.8rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.7px;
    padding: 1rem;
    background: linear-gradient(to right, #f8f9fa, #ffffff);
    border-bottom: 2px solid #f0f2f5;
    color: #4e73df;
  }
  
  .table tbody tr {
    transition: all 0.2s ease;
    border-bottom: 1px solid #f3f3f3;
  }
  
  .table tbody tr:hover {
    background-color: rgba(78, 115, 223, 0.04);
    transform: translateX(3px);
  }
  
  .table td {
    padding: 1rem;
    vertical-align: middle;
  }
  
  /* Badges & Status Indicators */
  .badge {
    padding: 0.5em 0.85em;
    font-weight: 600;
    letter-spacing: 0.3px;
    border-radius: 6px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    transition: all 0.2s ease;
  }
  
  .badge:hover {
    transform: scale(1.05);
  }
  
  .bg-primary {
    background: linear-gradient(45deg, #4e73df, #3a54c4) !important;
  }
  
  .bg-success {
    background: linear-gradient(45deg, #1cc88a, #13855c) !important;
  }
  
  .bg-info {
    background: linear-gradient(45deg, #36b9cc, #258391) !important;
  }
  
  .bg-warning {
    background: linear-gradient(45deg, #f6c23e, #dda20a) !important;
  }
  
  .bg-danger {
    background: linear-gradient(45deg, #e74a3b, #be2e1f) !important;
  }
  
  /* User Avatar & Info */
  .avatar {
    width: 45px;
    height: 45px;
    object-fit: cover;
    border: 3px solid #fff;
    box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
  }
  
  .avatar:hover {
    transform: scale(1.1);
    box-shadow: 0 5px 15px rgba(0,0,0,0.15);
  }
  
  .avatar-container {
    position: relative;
    margin-right: 1rem;
  }
  
  .rounded-circle {
    border-radius: 50% !important;
  }
  
  .user-name {
    color: #333;
    font-weight: 600;
    margin-bottom: 0.25rem;
    transition: color 0.2s ease;
  }
  
  .user-info-cell:hover .user-name {
    color: #4e73df;
  }
  
  /* Online Status Indicator */
  .online-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    display: inline-block;
    margin-right: 5px;
    position: absolute;
    right: 0;
    bottom: 0;
    border: 2px solid #fff;
  }
  
  .online-yes {
    background-color: #1cc88a;
    box-shadow: 0 0 10px rgba(28, 200, 138, 0.5);
    animation: pulse 2s infinite;
  }
  
  .online-no {
    background-color: #adb5bd;
  }
  
  @keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(28, 200, 138, 0.5); }
    70% { box-shadow: 0 0 0 6px rgba(28, 200, 138, 0); }
    100% { box-shadow: 0 0 0 0 rgba(28, 200, 138, 0); }
  }
  
  /* Pagination Styling */
  .pagination {
    gap: 0.3rem;
  }
  
  .page-item.active .page-link {
    background: linear-gradient(45deg, #4e73df, #3a54c4);
    border-color: #3a54c4;
    box-shadow: 0 3px 8px rgba(78, 115, 223, 0.3);
  }
  
  .page-link {
    color: #4e73df;
    border-radius: 6px;
    padding: 0.5rem 0.8rem;
    font-weight: 600;
    border: none;
    transition: all 0.2s ease;
  }
  
  .page-link:hover {
    background-color: #eaecf4;
    transform: translateY(-2px);
  }
  
  /* Search Box Styling */
  .input-group {
    box-shadow: 0 3px 10px rgba(0,0,0,0.03);
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
  }
  
  .input-group:focus-within {
    box-shadow: 0 5px 15px rgba(78, 115, 223, 0.15);
  }
  
  .input-group-text {
    background-color: #f8f9fa;
    border: 1px solid #eaecf4;
    border-right: none;
    color: #6e707e;
  }
  
  .form-control {
    border: 1px solid #eaecf4;
    border-left: none;
    padding: 0.75rem 1rem;
    font-size: 0.9rem;
    transition: all 0.2s ease;
  }
  
  .form-control:focus {
    box-shadow: none;
    border-color: #4e73df;
  }
  
  /* Modal Styling */
  .modal-content {
    border: none;
    border-radius: 15px;
    box-shadow: 0 15px 35px rgba(0,0,0,0.15);
    overflow: hidden;
  }
  
  .modal-header {
    background: linear-gradient(to right, #f8f9fa, #ffffff);
    border-bottom: 1px solid rgba(0,0,0,0.05);
    padding: 1.25rem 1.5rem;
  }
  
  .modal-footer {
    background: #f8f9fa;
    border-top: 1px solid rgba(0,0,0,0.05);
    padding: 1.25rem 1.5rem;
  }
  
  .form-label {
    font-weight: 600;
    color: #4e5055;
    margin-bottom: 0.5rem;
  }
  
  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .container-fluid {
      padding: 1rem;
    }
    
    .card-header {
      padding: 1rem;
    }
    
    .table td, .table th {
      padding: 0.75rem;
    }
    
    .avatar {
      width: 35px;
      height: 35px;
    }
  }
</style>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="{{ asset('js/user-filters.js') }}"></script>
<script>
  // Function to confirm deletion of a user
  window.confirmDelete = function(userId) {
    // Create a nicer confirmation dialog
    const confirmDialog = document.createElement('div');
    confirmDialog.className = 'modal fade';
    confirmDialog.id = 'confirmDeleteModal';
    confirmDialog.setAttribute('tabindex', '-1');
    confirmDialog.setAttribute('aria-hidden', 'true');
    
    confirmDialog.innerHTML = `
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header bg-danger text-white">
            <h5 class="modal-title">
              <i class="fas fa-user-slash me-2"></i>
              Confirmation de désactivation
            </h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <p>Êtes-vous sûr de vouloir désactiver cet utilisateur ?</p>
            <p class="mb-0"><small class="text-muted">L'utilisateur ne pourra plus se connecter à son compte, mais ses données seront conservées dans le système.</small></p>
            <p class="mt-2"><small class="text-muted">Un SMS de notification sera envoyé à l'utilisateur s'il a un numéro de téléphone enregistré.</small></p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
              <i class="fas fa-times me-1"></i> Annuler
            </button>
            <button type="button" class="btn btn-danger" id="confirmDeleteButton">
              <i class="fas fa-user-slash me-1"></i> Désactiver
            </button>
          </div>
        </div>
      </div>
    `;
    
    // Add the dialog to the document
    document.body.appendChild(confirmDialog);
    
    // Create and show the modal
    const modal = new bootstrap.Modal(confirmDialog);
    modal.show();
    
    // Handle confirmation
    document.getElementById('confirmDeleteButton').addEventListener('click', function() {
      const deletePath = `/admin/UserPage/delete/${userId}`;
      
      // Show loading state
      this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Désactivation...';
      this.disabled = true;
      
      fetch(deletePath, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Server returned ' + response.status);
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Hide the modal
          modal.hide();
          
          // Show success message with SMS status if available
          let successMessage = 'Utilisateur désactivé avec succès';
          
          // User SMS notification status
          if (data.smsStatus) {
            if (data.smsStatus === 'envoyé') {
              successMessage += `
                <div class="mt-2">
                  <span class="badge bg-success">
                    <i class="fas fa-sms me-1"></i> SMS de notification envoyé avec succès
                  </span>
                </div>`;
            } else if (data.smsStatus.includes('échec')) {
              successMessage += `
                <div class="mt-2">
                  <span class="badge bg-warning text-dark">
                    <i class="fas fa-exclamation-triangle me-1"></i> SMS non envoyé: ${data.smsStatus}
                  </span>
                </div>`;
            } else {
              successMessage += `
                <div class="mt-2">
                  <span class="badge bg-secondary">
                    <i class="fas fa-info-circle me-1"></i> ${data.smsStatus}
                  </span>
                </div>`;
            }
          }
          
          // Admin notification status
          if (data.adminSmsStatus) {
            if (data.adminSmsStatus === 'envoyé') {
              successMessage += `
                <div class="mt-1">
                  <span class="badge bg-info">
                    <i class="fas fa-bell me-1"></i> Notification admin envoyée
                  </span>
                </div>`;
            } else {
              successMessage += `
                <div class="mt-1">
                  <span class="badge bg-secondary">
                    <i class="fas fa-bell-slash me-1"></i> Notification admin non envoyée
                  </span>
                </div>`;
            }
          }
          
          showAlert('success', successMessage);
          
          // Reload the table after a short delay
          setTimeout(() => {
            window.location.reload();
          }, 2000); // Increased to 2 seconds to give user time to read SMS status
        } else {
          throw new Error(data.message || 'Une erreur est survenue');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        
        // Hide the modal
        modal.hide();
        
        // Show error message
        showAlert('danger', 'Erreur lors de la désactivation: ' + error.message);
      })
      .finally(() => {
        // Clean up the modal
        confirmDialog.addEventListener('hidden.bs.modal', function() {
          document.body.removeChild(confirmDialog);
        });
      });
    });
    
    // Clean up the modal when closed
    confirmDialog.addEventListener('hidden.bs.modal', function() {
      document.body.removeChild(confirmDialog);
    });
  };
  
  // Function to confirm reactivation of a user
  window.confirmReactivate = function(userId) {
    // Create a confirmation dialog
    const confirmDialog = document.createElement('div');
    confirmDialog.className = 'modal fade';
    confirmDialog.id = 'confirmReactivateModal';
    confirmDialog.setAttribute('tabindex', '-1');
    confirmDialog.setAttribute('aria-hidden', 'true');
    
    confirmDialog.innerHTML = `
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header bg-success text-white">
            <h5 class="modal-title">
              <i class="fas fa-user-check me-2"></i>
              Confirmation de réactivation
            </h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <p>Êtes-vous sûr de vouloir réactiver cet utilisateur ?</p>
            <p class="mb-0"><small class="text-muted">L'utilisateur pourra de nouveau se connecter à son compte.</small></p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
              <i class="fas fa-times me-1"></i> Annuler
            </button>
            <button type="button" class="btn btn-success" id="confirmReactivateButton">
              <i class="fas fa-user-check me-1"></i> Réactiver
            </button>
          </div>
        </div>
      </div>
    `;
    
    // Add the dialog to the document
    document.body.appendChild(confirmDialog);
    
    // Create and show the modal
    const modal = new bootstrap.Modal(confirmDialog);
    modal.show();
    
    // Handle confirmation
    document.getElementById('confirmReactivateButton').addEventListener('click', function() {
      const reactivatePath = `/admin/UserPage/activate/${userId}`;
      
      // Show loading state
      this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Réactivation...';
      this.disabled = true;
      
      fetch(reactivatePath, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Server returned ' + response.status);
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Hide the modal
          modal.hide();
          
          // Show success message
          showAlert('success', 'Utilisateur réactivé avec succès');
          
          // Reload the table after a short delay
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        } else {
          throw new Error(data.message || 'Une erreur est survenue');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        
        // Hide the modal
        modal.hide();
        
        // Show error message
        showAlert('danger', 'Erreur lors de la réactivation: ' + error.message);
      })
      .finally(() => {
        // Clean up the modal
        confirmDialog.addEventListener('hidden.bs.modal', function() {
          document.body.removeChild(confirmDialog);
        });
      });
    });
    
    // Clean up the modal when closed
    confirmDialog.addEventListener('hidden.bs.modal', function() {
      document.body.removeChild(confirmDialog);
    });
  };
  
  // Function to show alerts
  function showAlert(type, message) {
    const alertContainer = document.createElement('div');
    alertContainer.className = `alert alert-${type} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-4 shadow-lg`;
    alertContainer.style.zIndex = '9999';
    alertContainer.style.minWidth = '350px';
    alertContainer.style.maxWidth = '600px';
    
    // Use prefix icon based on alert type
    const iconClass = type === 'success' ? 'fa-check-circle' : 
                     type === 'warning' ? 'fa-exclamation-triangle' : 
                     type === 'danger' ? 'fa-exclamation-circle' : 'fa-info-circle';
    
    alertContainer.innerHTML = `
      <div class="d-flex align-items-start">
        <div class="me-3">
          <i class="fas ${iconClass} fa-lg"></i>
        </div>
        <div class="flex-grow-1">
          ${message}
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    `;
    
    document.body.appendChild(alertContainer);
    
    // Auto-dismiss after 5 seconds
    setTimeout(() => {
      const bsAlert = new bootstrap.Alert(alertContainer);
      bsAlert.close();
    }, 5000);
    
    // Remove from DOM after hidden
    alertContainer.addEventListener('hidden.bs.alert', function() {
      document.body.removeChild(alertContainer);
    });
  }

  // Function to submit the edit user form
  window.submitEditForm = function(userId) {
    const form = document.getElementById(`editUserForm${userId}`);
    
    if (!form) {
      console.error('Form not found:', `editUserForm${userId}`);
      showAlert('danger', 'Erreur: Formulaire non trouvé');
      return;
    }
    
    // Check required fields
    const name = form.querySelector('[name="name"]');
    const prenom = form.querySelector('[name="prenom"]');
    const email = form.querySelector('[name="email"]');
    
    if (!name.value || !prenom.value || !email.value) {
      showAlert('warning', 'Veuillez remplir tous les champs obligatoires');
      return;
    }
    
    // Show loading state on the submit button
    const submitBtn = document.querySelector(`#editUserModal${userId} .btn-primary`);
    const originalBtnText = submitBtn.innerHTML;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Enregistrement...';
    submitBtn.disabled = true;
    
    // Create FormData from the form
    const formData = new FormData(form);
    
    // Use fetch API to submit the form
    fetch(form.action, {
      method: 'POST',
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      },
      body: formData
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Server returned ' + response.status);
      }
      return response.json();
    })
    .then(data => {
      if (data.success) {
        // Hide the modal
        const modal = bootstrap.Modal.getInstance(document.getElementById(`editUserModal${userId}`));
        modal.hide();
        
        // Show success message
        showAlert('success', 'Utilisateur modifié avec succès');
        
        // Reload the table after a short delay
        setTimeout(() => {
          window.location.reload();
        }, 1000);
      } else {
        throw new Error(data.message || 'Une erreur est survenue');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      
      // Show error message
      showAlert('danger', 'Erreur lors de la modification: ' + error.message);
    })
    .finally(() => {
      // Reset button state
      submitBtn.innerHTML = originalBtnText;
      submitBtn.disabled = false;
    });
  };

  // Initialize Bootstrap components after page loads
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize tooltips
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
    
    // Initialize modals if they're not already initialized
    const modalElements = document.querySelectorAll('.modal');
    modalElements.forEach(modalElement => {
      new bootstrap.Modal(modalElement);
    });
    
    // Initialize PDF export confirmation button (direct approach in page - alternative to user-filters.js handling)
    const confirmPdfExportBtn = document.getElementById('confirmPdfExport');
    if (confirmPdfExportBtn) {
      confirmPdfExportBtn.addEventListener('click', function() {
        // Get the current filter values
        const roleFilter = document.querySelector('input[name="roleFilter"]:checked')?.value || '';
        const statusFilter = document.querySelector('input[name="statusFilter"]:checked')?.value || '';
        const searchText = document.getElementById('searchInput')?.value.trim() || 
                         document.getElementById('tableSearchInput')?.value.trim() || '';
        
        // Set filter values
        document.getElementById('roleFilterValue').value = roleFilter;
        document.getElementById('statusFilterValue').value = statusFilter;
        document.getElementById('searchFilterValue').value = searchText;
        
        // Transfer values from the modal form to the hidden form
        document.getElementById('pdfTitleValue').value = document.getElementById('pdfTitle').value;
        
        // Get orientation
        const orientation = document.querySelector('input[name="orientation"]:checked')?.value || 'landscape';
        document.getElementById('pdfOrientationValue').value = orientation;
        
        // Get theme
        const theme = document.querySelector('input[name="theme"]:checked')?.value || 'default';
        document.getElementById('pdfThemeValue').value = theme;
        
        // Get checkbox values
        document.getElementById('pdfShowTimestampValue').value = document.getElementById('showTimestamp').checked ? '1' : '0';
        document.getElementById('pdfShowFiltersValue').value = document.getElementById('showFilters').checked ? '1' : '0';
        
        // Get column selection values
        document.getElementById('pdfIncludeUserColumnValue').value = document.getElementById('includeUserColumn').checked ? '1' : '0';
        document.getElementById('pdfIncludeRoleColumnValue').value = document.getElementById('includeRoleColumn').checked ? '1' : '0';
        document.getElementById('pdfIncludeStatusColumnValue').value = document.getElementById('includeStatusColumn').checked ? '1' : '0';
        document.getElementById('pdfIncludeDateColumnValue').value = document.getElementById('includeDateColumn').checked ? '1' : '0';
        document.getElementById('pdfIncludePhoneColumnValue').value = document.getElementById('includePhoneColumn').checked ? '1' : '0';
        
        // Submit the form
        document.getElementById('pdfExportForm').submit();
      });
    }
  });

  // SMS form submission handler
  $(document).ready(function() {
    $('#admin-sms-form').on('submit', function(e) {
      e.preventDefault();
      
      const message = $('#admin-sms-message').val().trim();
      if (!message) {
        $('#sms-result').html(`
          <div class="alert alert-warning">
            <i class="fas fa-exclamation-triangle mr-2"></i>Veuillez saisir un message
          </div>
        `).show();
        return;
      }
      
      // Show loading state
      $('#sms-result').html(`
        <div class="alert alert-info">
          <i class="fas fa-spinner fa-spin mr-2"></i>Envoi du message en cours...
        </div>
      `).show();
      
      // Send the message via AJAX
      $.ajax({
        url: '{{ path('admin_send_custom_sms') }}',
        type: 'POST',
        data: {
          message: message
        },
        success: function(response) {
          if (response.success) {
            $('#sms-result').html(`
              <div class="alert alert-success">
                <i class="fas fa-check-circle mr-2"></i>${response.message}
              </div>
            `).show();
            $('#admin-sms-message').val(''); // Clear the textarea
          } else {
            $('#sms-result').html(`
              <div class="alert alert-danger">
                <i class="fas fa-times-circle mr-2"></i>${response.message || 'Erreur lors de l\'envoi du message'}
              </div>
            `).show();
          }
        },
        error: function(xhr) {
          let errorMsg = 'Erreur lors de l\'envoi du message';
          try {
            const response = JSON.parse(xhr.responseText);
            errorMsg = response.message || errorMsg;
          } catch (e) {}
          
          $('#sms-result').html(`
            <div class="alert alert-danger">
              <i class="fas fa-times-circle mr-2"></i>${errorMsg}
            </div>
          `).show();
        }
      });
    });
  });
</script>
{% endblock %}

{% block content %}
<div class="container-fluid">
  <h1 class="h3 mb-4 text-gray-800">Gestion des Utilisateurs</h1>
  
  <div class="row">
    <!-- User Stats Cards -->
    <div class="col-lg-8">
      <div class="row">
        <!-- Offline/Online Users Card -->
        <div class="col-xl-6 col-md-6 mb-4">
          <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
              <div class="row no-gutters align-items-center">
                <div class="col mr-2">
                  <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                    Statut des Utilisateurs</div>
                  <div class="row no-gutters align-items-center">
                    <div class="col-auto">
                      <div class="h5 mb-0 font-weight-bold text-gray-800">{{ onlineUsersCount }} / {{ totalUsers }}</div>
                    </div>
                    <div class="col">
                      <div class="progress progress-sm mr-2">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: {{ (onlineUsersCount / totalUsers) * 100 }}%" aria-valuenow="{{ onlineUsersCount }}" aria-valuemin="0" aria-valuemax="{{ totalUsers }}"></div>
                      </div>
                    </div>
                  </div>
                  <div class="mt-2">
                    <span class="badge bg-success text-white rounded-pill">
                      <i class="fas fa-circle text-white-50 mr-1"></i>En ligne: {{ onlineUsersCount }}
                    </span>
                    <span class="badge bg-danger text-white rounded-pill">
                      <i class="fas fa-circle text-white-50 mr-1"></i>Hors ligne: {{ totalUsers - onlineUsersCount }}
                    </span>
                  </div>
                </div>
                <div class="col-auto">
                  <i class="fas fa-users fa-2x text-gray-300"></i>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- User Roles Card -->
        <div class="col-xl-6 col-md-6 mb-4">
          <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
              <div class="row no-gutters align-items-center">
                <div class="col mr-2">
                  <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                    Rôles des Utilisateurs</div>
                  <div class="h5 mb-0 font-weight-bold text-gray-800">{{ totalUsers }} Utilisateurs</div>
                  <div class="mt-2">
                    <span class="badge bg-primary text-white rounded-pill">
                      <i class="fas fa-user-shield text-white-50 mr-1"></i>Admin: {{ usersByRole.Admin }}
                    </span>
                    <span class="badge bg-info text-white rounded-pill">
                      <i class="fas fa-user-tie text-white-50 mr-1"></i>Entreprise: {{ usersByRole.Entreprise }}
                    </span>
                    <span class="badge bg-warning text-white rounded-pill">
                      <i class="fas fa-user text-white-50 mr-1"></i>Voyageurs: {{ usersByRole.Voyageurs }}
                    </span>
                  </div>
                </div>
                <div class="col-auto">
                  <i class="fas fa-user-tag fa-2x text-gray-300"></i>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    
    </div>
  </div>
  
  <!-- Filter Section -->
  <div class="card shadow mb-4">
    <!-- Filter Controls -->
    <div class="card-header bg-light py-2">
      <div class="row g-2">
        <div class="col-md-6">
          <div class="filter-group">
            <label class="d-flex align-items-center mb-1">
              <i class="fas fa-filter me-1"></i> Filtrer par rôle:
            </label>
            <div class="btn-group w-100" role="group">
              <input type="radio" class="btn-check" name="roleFilter" id="roleAll" value="" checked>
              <label class="btn btn-outline-secondary btn-sm" for="roleAll">
                <i class="fas fa-users me-1"></i> Tous
              </label>
              
              <input type="radio" class="btn-check" name="roleFilter" id="roleAdmin" value="Admin">
              <label class="btn btn-outline-primary btn-sm" for="roleAdmin">
                <i class="fas fa-user-shield me-1"></i> Admin
              </label>
              
              <input type="radio" class="btn-check" name="roleFilter" id="roleVoyageur" value="Voyageurs">
              <label class="btn btn-outline-info btn-sm" for="roleVoyageur">
                <i class="fas fa-plane me-1"></i> Voyageurs
              </label>
              
              <input type="radio" class="btn-check" name="roleFilter" id="roleEntreprise" value="Entreprise">
              <label class="btn btn-outline-success btn-sm" for="roleEntreprise">
                <i class="fas fa-building me-1"></i> Entreprise
              </label>
            </div>
          </div>
        </div>
        
        <div class="col-md-6">
          <div class="filter-group">
            <label class="d-flex align-items-center mb-1">
              <i class="fas fa-toggle-on me-1"></i> Filtrer par statut:
            </label>
            <div class="btn-group w-100" role="group">
              <input type="radio" class="btn-check" name="statusFilter" id="statusAll" value="" checked>
              <label class="btn btn-outline-secondary btn-sm" for="statusAll">
                <i class="fas fa-list me-1"></i> Tous
              </label>
              
              <input type="radio" class="btn-check" name="statusFilter" id="statusOnline" value="online">
              <label class="btn btn-outline-success btn-sm" for="statusOnline">
                <i class="fas fa-circle me-1"></i> En ligne
              </label>
              
              <input type="radio" class="btn-check" name="statusFilter" id="statusActive" value="actif">
              <label class="btn btn-outline-primary btn-sm" for="statusActive">
                <i class="fas fa-check-circle me-1"></i> Actifs
              </label>
              
              <input type="radio" class="btn-check" name="statusFilter" id="statusInactive" value="inactive">
              <label class="btn btn-outline-danger btn-sm" for="statusInactive">
                <i class="fas fa-times-circle me-1"></i> Inactifs
              </label>
            </div>
          </div>
        </div>
      </div>
      
      <div class="d-flex justify-content-between mt-2">
        <div>
          <div class="input-group">
            <span class="input-group-text bg-light">
              <i class="fas fa-search text-primary"></i>
            </span>
            <input type="text" class="form-control" id="searchInput" placeholder="Rechercher un utilisateur...">
          </div>
        </div>

        <div class="d-flex gap-2 align-items-center">
          <!-- Export buttons -->
          <div class="btn-group" role="group" aria-label="Export options">
            <button type="button" class="btn btn-sm btn-outline-success" id="exportExcelButton">
              <i class="fas fa-file-excel me-1"></i> Excel
            </button>
            <button type="button" class="btn btn-sm btn-outline-danger" id="exportPdfButton" data-bs-toggle="modal" data-bs-target="#pdfExportModal">
              <i class="fas fa-file-pdf me-1"></i> PDF
            </button>
          </div>
          <button id="resetFilters" class="btn btn-sm btn-outline-secondary">
            <i class="fas fa-sync-alt me-1"></i> Réinitialiser
          </button>
        </div>
      </div>
    </div>
  </div>
  
  <div class="card shadow mb-4">
    <!-- Users Table -->
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table align-middle mb-0" id="usersTable" data-delete-path="/admin/user/delete/0">
          <thead class="bg-light">
            <tr>
              <th style="width: 25%;">Utilisateur</th>
              <th style="width: 20%;">Email</th>
              <th style="width: 10%;">Rôle</th>
              <th style="width: 15%;">Date de Naissance</th>
              <th style="width: 10%;">Statut</th>
              <th class="text-center" style="width: 20%;">Actions</th>
            </tr>
          </thead>
          <tbody id="userTableBody">
            {% for user in users %}
            <tr data-role="{{ user.roleUser }}" data-status="{% if user.isOnline == 1 %}online{% elseif user.statut == 'actif' %}active{% else %}inactive{% endif %}">
              <td>
                <div class="d-flex align-items-center">
                  <div class="avatar-container position-relative me-3">
                    {% if user.imagesU is not empty %}
                      <img src="{{ asset('images_users/' ~ user.imagesU) }}" alt="Avatar" class="avatar rounded-circle" style="width: 40px; height: 40px; object-fit: cover;">
                    {% else %}
                      <div class="avatar rounded-circle bg-primary d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                        <span class="text-white">{{ user.name|first|upper }}{{ user.prenom ? user.prenom|first|upper : '' }}</span>
                      </div>
                    {% endif %}
                    
                    <span class="position-absolute bg-{{ user.isOnline == 1 ? 'success' : 'secondary' }} border border-white rounded-circle"
                          style="width: 12px; height: 12px; bottom: 0; right: 0;"
                          title="{{ user.isOnline == 1 ? 'En ligne' : 'Hors ligne' }}">
                    </span>
                  </div>
                  
                  <div>
                    <p class="fw-bold mb-0 user-name">{{ user.prenom }} {{ user.name }}</p>
                    <small class="text-muted">
                      <i class="fas fa-clock me-1"></i> 
                      {% if user.lastActivity %}
                        Dernière activité: {{ user.lastActivity|date('d/m/Y H:i') }}
                      {% else %}
                        Jamais connecté
                      {% endif %}
                    </small>
                  </div>
                </div>
              </td>
              <td>
                <p class="mb-0">{{ user.email }}</p>
              </td>
              <td>
                <span class="badge bg-{% if user.roleUser == 'Admin' %}primary{% elseif user.roleUser == 'Voyageurs' %}info{% else %}success{% endif %}">
                  <i class="fas fa-{% if user.roleUser == 'Admin' %}user-shield{% elseif user.roleUser == 'Voyageurs' %}plane{% else %}building{% endif %} me-1"></i>
                  {{ user.roleUser }}
                </span>
              </td>
              <td>
                <p class="mb-0">{{ user.dateNaiss|date('d/m/Y') }}</p>
              </td>
              <td>
                <span class="badge bg-{% if user.deleteFlag == 1 %}danger{% elseif user.statut == 'actif' %}success{% else %}warning{% endif %}">
                  {{ user.deleteFlag == 1 ? 'Supprimé' : (user.statut == 'actif' ? 'Actif' : 'Inactif') }}
                </span>
              </td>
              <td class="text-center">
                <div class="d-flex gap-2 justify-content-center">
                  <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#editUserModal{{user.idU}}" title="Modifier l'utilisateur">
                    <i class="fas fa-edit me-1"></i> Éditer
                  </button>
                  <button type="button" class="btn btn-sm btn-danger" onclick="confirmDelete({{user.idU}})" title="Désactiver l'utilisateur">
                    <i class="fas fa-trash-alt me-1"></i> Supprimer
                  </button>
                </div>
              </td>
            </tr>
            {% else %}
            <tr>
              <td colspan="6" class="text-center py-4">
                <div class="alert alert-info mb-0">
                  <i class="fas fa-info-circle me-2"></i> Aucun utilisateur trouvé.
                </div>
              </td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
    </div>
    
    <!-- Pagination -->
    <div class="card-footer d-flex justify-content-between align-items-center bg-light">
      <div class="pagination-info">
        Affichage de <span class="fw-bold">{{ users|length }}</span> sur <span class="fw-bold">{{ totalUsers ?? users|length }}</span> utilisateur(s)
      </div>
      {% if totalPages > 1 %}
      <nav aria-label="Navigation des pages">
        <ul class="pagination mb-0">
          {% if currentPage > 1 %}
            <li class="page-item">
              <a class="page-link" href="#" data-page="1" aria-label="First">
                <span aria-hidden="true"><i class="fas fa-angle-double-left"></i></span>
              </a>
            </li>
            <li class="page-item">
              <a class="page-link" href="#" data-page="{{ currentPage - 1 }}" aria-label="Previous">
                <span aria-hidden="true"><i class="fas fa-angle-left"></i></span>
              </a>
            </li>
          {% else %}
            <li class="page-item disabled">
              <span class="page-link"><i class="fas fa-angle-double-left"></i></span>
            </li>
            <li class="page-item disabled">
              <span class="page-link"><i class="fas fa-angle-left"></i></span>
            </li>
          {% endif %}
          
          {% for i in max(1, currentPage - 2)..min(totalPages, currentPage + 2) %}
            <li class="page-item {% if i == currentPage %}active{% endif %}">
              <a class="page-link" href="#" data-page="{{ i }}">{{ i }}</a>
            </li>
          {% endfor %}
          
          {% if currentPage < totalPages %}
            <li class="page-item">
              <a class="page-link" href="#" data-page="{{ currentPage + 1 }}" aria-label="Next">
                <span aria-hidden="true"><i class="fas fa-angle-right"></i></span>
              </a>
            </li>
            <li class="page-item">
              <a class="page-link" href="#" data-page="{{ totalPages }}" aria-label="Last">
                <span aria-hidden="true"><i class="fas fa-angle-double-right"></i></span>
              </a>
            </li>
          {% else %}
            <li class="page-item disabled">
              <span class="page-link"><i class="fas fa-angle-right"></i></span>
            </li>
            <li class="page-item disabled">
              <span class="page-link"><i class="fas fa-angle-double-right"></i></span>
            </li>
          {% endif %}
        </ul>
      </nav>
      {% endif %}
    </div>
  </div>
</div>

<!-- PDF Export Customization Modal -->
<div class="modal fade" id="pdfExportModal" tabindex="-1" aria-labelledby="pdfExportModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-gradient-danger text-white">
        <h5 class="modal-title" id="pdfExportModalLabel">
          <i class="fas fa-file-pdf me-2"></i> Personnaliser l'exportation PDF
        </h5>
        <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="pdfExportConfigForm">
          <!-- Title and Layout Options -->
          <div class="mb-3">
            <label for="pdfTitle" class="form-label fw-bold">Titre du document</label>
            <input type="text" class="form-control" id="pdfTitle" name="title" value="Liste des Utilisateurs">
          </div>
          
          <div class="mb-3">
            <label class="form-label fw-bold">Orientation</label>
            <div class="d-flex gap-3">
              <div class="form-check">
                <input class="form-check-input" type="radio" name="orientation" id="orientationLandscape" value="landscape" checked>
                <label class="form-check-label" for="orientationLandscape">
                  <i class="fas fa-arrows-alt-h me-1"></i> Paysage
                </label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="orientation" id="orientationPortrait" value="portrait">
                <label class="form-check-label" for="orientationPortrait">
                  <i class="fas fa-arrows-alt-v me-1"></i> Portrait
                </label>
              </div>
            </div>
          </div>
          
          <!-- Columns to Include -->
          <div class="mb-3">
            <label class="form-label fw-bold">Colonnes à inclure</label>
            <div class="row g-2">
              <div class="col-md-6">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="includeUserColumn" name="includeUserColumn" checked>
                  <label class="form-check-label" for="includeUserColumn">
                    Utilisateur & Email
                  </label>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="includeRoleColumn" name="includeRoleColumn" checked>
                  <label class="form-check-label" for="includeRoleColumn">
                    Rôle
                  </label>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="includeStatusColumn" name="includeStatusColumn" checked>
                  <label class="form-check-label" for="includeStatusColumn">
                    Statut
                  </label>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="includeDateColumn" name="includeDateColumn" checked>
                  <label class="form-check-label" for="includeDateColumn">
                    Date de naissance
                  </label>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="includePhoneColumn" name="includePhoneColumn" checked>
                  <label class="form-check-label" for="includePhoneColumn">
                    Téléphone
                  </label>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Additional Options -->
          <div class="mb-3">
            <label class="form-label fw-bold">Options supplémentaires</label>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="showTimestamp" name="showTimestamp" checked>
              <label class="form-check-label" for="showTimestamp">
                <i class="fas fa-clock me-1"></i> Afficher la date et l'heure d'exportation
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="showFilters" name="showFilters" checked>
              <label class="form-check-label" for="showFilters">
                <i class="fas fa-filter me-1"></i> Afficher les filtres appliqués
              </label>
            </div>
          </div>
          
          <!-- PDF Theme -->
          <div class="mb-3">
            <label class="form-label fw-bold">Thème</label>
            <div class="d-flex gap-2">
              <div class="form-check">
                <input class="form-check-input" type="radio" name="theme" id="themeDefault" value="default" checked>
                <label class="form-check-label" for="themeDefault">
                  <span class="badge bg-primary">Défaut</span>
                </label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="theme" id="themeDark" value="dark">
                <label class="form-check-label" for="themeDark">
                  <span class="badge bg-dark">Sombre</span>
                </label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="theme" id="themeMinimal" value="minimal">
                <label class="form-check-label" for="themeMinimal">
                  <span class="badge bg-light text-dark">Minimal</span>
                </label>
              </div>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer bg-light">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          <i class="fas fa-times me-1"></i> Annuler
        </button>
        <button type="button" class="btn btn-danger" id="confirmPdfExport">
          <i class="fas fa-file-export me-1"></i> Exporter
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Hidden form for export to Excel -->
<form id="excelExportForm" action="{{ path('admin_users_export_excel') }}" method="post" class="d-none">
  <input type="hidden" id="excelRoleFilterValue" name="role" value="">
  <input type="hidden" id="excelStatusFilterValue" name="status" value="">
  <input type="hidden" id="excelSearchFilterValue" name="search" value="">
</form>

<!-- Hidden form for export to PDF -->
<form id="pdfExportForm" action="{{ path('admin_users_export_pdf') }}" method="post" class="d-none">
  <input type="hidden" id="roleFilterValue" name="role" value="">
  <input type="hidden" id="statusFilterValue" name="status" value="">
  <input type="hidden" id="searchFilterValue" name="search" value="">
  
  <!-- PDF Customization Options -->
  <input type="hidden" id="pdfTitleValue" name="title" value="Liste des Utilisateurs">
  <input type="hidden" id="pdfOrientationValue" name="orientation" value="landscape">
  <input type="hidden" id="pdfShowTimestampValue" name="showTimestamp" value="0">
  <input type="hidden" id="pdfShowFiltersValue" name="showFilters" value="0">
  <input type="hidden" id="pdfThemeValue" name="theme" value="default">
  
  <!-- Column Selection -->
  <input type="hidden" id="pdfIncludeUserColumnValue" name="includeUserColumn" value="0">
  <input type="hidden" id="pdfIncludeRoleColumnValue" name="includeRoleColumn" value="0">
  <input type="hidden" id="pdfIncludeStatusColumnValue" name="includeStatusColumn" value="0">
  <input type="hidden" id="pdfIncludeDateColumnValue" name="includeDateColumn" value="0">
  <input type="hidden" id="pdfIncludePhoneColumnValue" name="includePhoneColumn" value="0">
</form>

<!-- Edit User Modals -->
{% for user in users %}
<div class="modal fade" id="editUserModal{{user.idU}}" tabindex="-1" aria-labelledby="editUserModal{{user.idU}}Label" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="editUserModal{{user.idU}}Label">
          <i class="fas fa-user-edit me-2"></i>Modifier l'utilisateur
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="editUserForm{{user.idU}}" action="{{ path('admin_user_edit', {'id_U': user.idU}) }}" method="post" enctype="multipart/form-data">
          
          <!-- User Info Header -->
          <div class="d-flex align-items-center mb-4">
            <div class="avatar-container position-relative me-3">
              {% if user.imagesU is not empty %}
                <img src="{{ asset('images_users/' ~ user.imagesU) }}" alt="Avatar" class="avatar rounded-circle" style="width: 64px; height: 64px; object-fit: cover;">
              {% else %}
                <div class="avatar rounded-circle bg-primary d-flex align-items-center justify-content-center" style="width: 64px; height: 64px;">
                  <span class="text-white fs-4">{{ user.name|first|upper }}{{ user.prenom ? user.prenom|first|upper : '' }}</span>
                </div>
              {% endif %}
            </div>
            <div>
              <h5 class="mb-1">{{ user.prenom }} {{ user.name }}</h5>
              <p class="text-muted mb-0">{{ user.email }}</p>
            </div>
          </div>
          
          <!-- Form Fields -->
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="name{{user.idU}}" class="form-label">
                <i class="fas fa-user me-1"></i> Nom
              </label>
              <input type="text" class="form-control" id="name{{user.idU}}" name="name" value="{{ user.name }}" required>
            </div>
            <div class="col-md-6 mb-3">
              <label for="prenom{{user.idU}}" class="form-label">
                <i class="fas fa-user me-1"></i> Prénom
              </label>
              <input type="text" class="form-control" id="prenom{{user.idU}}" name="prenom" value="{{ user.prenom }}" required>
            </div>
          </div>
          
          <div class="mb-3">
            <label for="email{{user.idU}}" class="form-label">
              <i class="fas fa-envelope me-1"></i> Email
            </label>
            <input type="email" class="form-control" id="email{{user.idU}}" name="email" value="{{ user.email }}" required>
          </div>
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="phoneNumber{{user.idU}}" class="form-label">
                <i class="fas fa-phone me-1"></i> Téléphone
              </label>
              <input type="tel" class="form-control" id="phoneNumber{{user.idU}}" name="phoneNumber" value="{{ user.phoneNumber }}">
            </div>
            <div class="col-md-6 mb-3">
              <label for="dateNaiss{{user.idU}}" class="form-label">
                <i class="fas fa-calendar me-1"></i> Date de naissance
              </label>
              <input type="date" class="form-control" id="dateNaiss{{user.idU}}" name="dateNaiss" value="{{ user.dateNaiss|date('Y-m-d') }}">
            </div>
          </div>

          <hr class="my-4">
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="role{{user.idU}}" class="form-label">
                <i class="fas fa-user-tag me-1"></i> Rôle
              </label>
              <select class="form-select" id="role{{user.idU}}" name="role">
                <option value="Admin" {% if user.roleUser == 'Admin' %}selected{% endif %}>Admin</option>
                <option value="Voyageurs" {% if user.roleUser == 'Voyageurs' %}selected{% endif %}>Voyageurs</option>
                <option value="Entreprise" {% if user.roleUser == 'Entreprise' %}selected{% endif %}>Entreprise</option>
              </select>
            </div>
            <div class="col-md-6 mb-3">
              <label for="status{{user.idU}}" class="form-label">
                <i class="fas fa-toggle-on me-1"></i> Statut
              </label>
              <select class="form-select" id="status{{user.idU}}" name="status">
                <option value="actif" {% if user.statut == 'actif' %}selected{% endif %}>Actif</option>
                <option value="inactif" {% if user.statut == 'inactif' %}selected{% endif %}>Inactif</option>
              </select>
            </div>
          </div>
          
          <div class="mb-3">
            <label for="profileImage{{user.idU}}" class="form-label">
              <i class="fas fa-image me-1"></i> Photo de profil
            </label>
            <input type="file" class="form-control" id="profileImage{{user.idU}}" name="profileImage" accept="image/*">
            <div class="form-text">Formats acceptés: JPG, PNG, GIF. Taille maximale: 2MB</div>
          </div>
        </form>
      </div>
      <div class="modal-footer bg-light">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          <i class="fas fa-times me-1"></i> Annuler
        </button>
        <button type="button" class="btn btn-primary" onclick="window.submitEditForm({{user.idU}})">
          <i class="fas fa-save me-1"></i> Enregistrer
        </button>
      </div>
    </div>
  </div>
</div>
{% endfor %}
{% endblock %} 