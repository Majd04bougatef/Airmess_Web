{% extends 'dashAdmin/dashboard.html.twig' %}

{% block title %}Gestion des Utilisateurs{% endblock %}

{% block stylesheets %}
{{ parent() }}
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="{{ asset('js/avatar-handler.js') }}"></script>
{% endblock %}

{% block content %}
<nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl " id="navbarBlur" data-scroll="false">
  <div class="container-fluid py-1 px-3">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
        <li class="breadcrumb-item text-sm"><a class="opacity-5 text-white" href="{{ path('dashboard_page') }}">Dashboard</a></li>
        <li class="breadcrumb-item text-sm text-white active" aria-current="page">Gestion des Utilisateurs</li>
      </ol>
      <h6 class="font-weight-bolder text-white mb-0">Gestion des Utilisateurs</h6>
    </nav>
    <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
      <div class="ms-md-auto pe-md-3 d-flex align-items-center">
        <div class="input-group">
          <span class="input-group-text text-body"><i class="fas fa-search" aria-hidden="true"></i></span>
          <input type="text" class="form-control" id="searchInput" placeholder="Rechercher un utilisateur...">
        </div>
      </div>
    </div>
  </div>
</nav>
<!-- End Navbar -->
<div class="container-fluid py-4">
  <div class="row">
    <div class="col-12">
      <div class="card mb-4">
        <div class="card-header pb-0">
          <div class="d-flex justify-content-between align-items-center">
            <h6>Liste des utilisateurs ({{ users|length }})</h6>
            <div>
              <button type="button" class="btn btn-sm bg-gradient-primary mb-0" data-bs-toggle="modal" data-bs-target="#addUserModal">
                <i class="fas fa-plus me-2"></i> Ajouter un utilisateur
              </button>
              <button type="button" class="btn btn-sm bg-gradient-success mb-0" id="activateAllButton">
                <i class="fas fa-check-circle me-2"></i> Activer tous
              </button>
              <button type="button" class="btn btn-sm bg-gradient-info mb-0" id="exportButton">
                <i class="fas fa-file-export me-2"></i> Exporter
              </button>
            </div>
          </div>
          
          <!-- Filtres -->
          <div class="mt-3">
            <div class="row g-2">
              <div class="col-md-3">
                <select class="form-select form-select-sm" id="roleFilter">
                  <option value="">Tous les rôles</option>
                  <option value="Admin">Admin</option>
                  <option value="Voyageurs">Voyageurs</option>
                  <option value="Entreprise">Entreprise</option>
                </select>
              </div>
              <div class="col-md-3">
                <select class="form-select form-select-sm" id="statusFilter">
                  <option value="">Tous les statuts</option>
                  <option value="actif">Actif</option>
                  <option value="active">Actif</option>
                  <option value="inactif">Inactif</option>
                  <option value="inactive">Inactif</option>
                </select>
              </div>
              <div class="col-md-3">
                <button class="btn btn-sm btn-outline-primary w-100" id="applyFilters">Appliquer les filtres</button>
              </div>
              <div class="col-md-3">
                <button class="btn btn-sm btn-outline-secondary w-100" id="resetFilters">Réinitialiser</button>
              </div>
            </div>
          </div>
        </div>
        <div class="card-body px-0 pt-0 pb-2">
          <div class="table-responsive p-0">
            <table class="table align-items-center mb-0" id="usersTable" 
                  data-edit-path="{{ path('admin_user_edit', {'id': 0}) }}"
                  data-delete-path="{{ path('admin_user_delete', {'id': 0}) }}">
              <thead>
                <tr>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Utilisateur</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Rôle</th>
                  <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Statut</th>
                  <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date d'inscription</th>
                  <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Téléphone</th>
                  <th class="text-secondary opacity-7">Actions</th>
                </tr>
              </thead>
              <tbody>
                {% for user in users %}
                  <tr>
                    <td>
                      <div class="d-flex px-2 py-1">
                        <div>
                          <img src="{{ asset('uploads/users/' ~ user.imagesU) }}" class="avatar avatar-sm me-3" 
                             alt="{{ user.name }}" onerror="handleImageError(this)">
                        </div>
                        <div class="d-flex flex-column justify-content-center">
                          <h6 class="mb-0 text-sm">{{ user.name }} {{ user.prenom }}</h6>
                          <p class="text-xs text-secondary mb-0">{{ user.email }}</p>
                        </div>
                      </div>
                    </td>
                    <td>
                      <p class="text-xs font-weight-bold mb-0">{{ user.roleUser }}</p>
                    </td>
                    <td class="align-middle text-center text-sm">
                      <!-- Debug: {{ user.statut }} -->
                      {% if user.statut == 'actif' or user.statut == 'active' %}
                        <span class="badge badge-sm bg-gradient-success">Actif</span>
                      {% elseif user.statut == 'inactif' or user.statut == 'inactive' %}
                        <span class="badge badge-sm bg-gradient-danger">Inactif</span>
                      {% else %}
                        <span class="badge badge-sm bg-gradient-warning">{{ user.statut }}</span>
                      {% endif %}
                    </td>
                    <td class="align-middle text-center">
                      <span class="text-secondary text-xs font-weight-bold">{{ user.dateNaiss|date("d/m/Y") }}</span>
                    </td>
                    <td class="align-middle text-center">
                      <span class="text-secondary text-xs font-weight-bold">{{ user.phoneNumber }}</span>
                    </td>
                    <td class="align-middle">
                      <div class="d-flex">
                        <button class="btn btn-link text-warning px-2 mb-0" data-bs-toggle="modal" data-bs-target="#editUserModal{{ user.idU }}">
                          <i class="fas fa-edit me-2"></i>Modifier
                        </button>
                        <button class="btn btn-link text-danger px-2 mb-0" onclick="confirmDelete({{ user.idU }})">
                          <i class="fas fa-trash me-2"></i>Supprimer
                        </button>
                      </div>
                    </td>
                  </tr>
                {% endfor %}
              </tbody>
            </table>
          </div>
          <!-- Pagination -->
          <div class="d-flex justify-content-center mt-3">
            <nav aria-label="Page navigation">
              <ul class="pagination">
                {% if currentPage > 1 %}
                  <li class="page-item">
                    <a class="page-link" href="{{ path('user_page', {'page': currentPage - 1}) }}" aria-label="Précédent">
                      <span aria-hidden="true">&laquo;</span> Précédent
                    </a>
                  </li>
                {% else %}
                  <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">&laquo; Précédent</a>
                  </li>
                {% endif %}
                
                {% set startPage = max(1, currentPage - 2) %}
                {% set endPage = min(totalPages, startPage + 4) %}
                {% if endPage - startPage < 4 and totalPages > 5 %}
                  {% set startPage = max(1, endPage - 4) %}
                {% endif %}
                
                {% for i in startPage..endPage %}
                  <li class="page-item {{ currentPage == i ? 'active' : '' }}">
                    <a class="page-link" href="{{ path('user_page', {'page': i}) }}">{{ i }}</a>
                  </li>
                {% endfor %}
                
                {% if currentPage < totalPages %}
                  <li class="page-item">
                    <a class="page-link" href="{{ path('user_page', {'page': currentPage + 1}) }}" aria-label="Suivant">
                      Suivant <span aria-hidden="true">&raquo;</span>
                    </a>
                  </li>
                {% else %}
                  <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Suivant &raquo;</a>
                  </li>
                {% endif %}
              </ul>
            </nav>
          </div>
          
          <!-- Pagination info -->
          <div class="text-center text-sm text-muted mt-2">
            Affichage des utilisateurs {{ (currentPage - 1) * pageSize + 1 }} à {{ min(currentPage * pageSize, totalUsers) }} sur {{ totalUsers }} utilisateurs
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Statistiques Utilisateurs -->
  <div class="row">
    <div class="col-lg-7 mb-lg-0 mb-4">
      <div class="card mb-4">
        <div class="card-header pb-0">
          <h6>Répartition des utilisateurs</h6>
        </div>
        <div class="card-body p-3">
          <div class="chart">
            <canvas id="userRoleChart" class="chart-canvas" height="300"></canvas>
          </div>
        </div>
      </div>
    </div>
    <div class="col-lg-5">
      <div class="card mb-4">
        <div class="card-header pb-0">
          <h6>Activité des utilisateurs</h6>
        </div>
        <div class="card-body p-3">
          <div class="timeline timeline-one-side">
            {% for activity in recentActivities %}
              <div class="timeline-block mb-3">
                <span class="timeline-step">
                  <i class="{{ activity.icon }}"></i>
                </span>
                <div class="timeline-content">
                  <h6 class="text-dark text-sm font-weight-bold mb-0">{{ activity.description }}</h6>
                  <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">Il y a {{ activity.date|date("d") == "now"|date("d") ? activity.date|date("G") ~ ' heures' : activity.date|date("d/m/Y") }}</p>
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Footer -->
  <footer class="footer pt-3">
    <div class="container-fluid">
      <div class="row align-items-center justify-content-lg-between">
        <div class="col-lg-6 mb-lg-0 mb-4">
          <div class="copyright text-center text-sm text-muted text-lg-start">
            © {{ "now"|date("Y") }} Airmess
          </div>
        </div>
      </div>
    </div>
  </footer>
</div>

<!-- Modals -->
<!-- Modal Ajouter Utilisateur -->
<div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="addUserModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addUserModalLabel">Ajouter un utilisateur</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="addUserForm" action="{{ path('admin_user_add') }}">
          <div class="mb-3">
            <label for="name" class="form-label">Nom</label>
            <input type="text" class="form-control" id="name" required>
          </div>
          <div class="mb-3">
            <label for="prenom" class="form-label">Prénom</label>
            <input type="text" class="form-control" id="prenom" required>
          </div>
          <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" required>
          </div>
          <div class="mb-3">
            <label for="password" class="form-label">Mot de passe</label>
            <input type="password" class="form-control" id="password" required>
          </div>
          <div class="mb-3">
            <label for="phone" class="form-label">Téléphone</label>
            <input type="tel" class="form-control" id="phone">
          </div>
          <div class="mb-3">
            <label for="role" class="form-label">Rôle</label>
            <select class="form-select" id="role" required>
              <option value="Voyageurs">Voyageurs</option>
              <option value="Entreprise">Entreprise</option>
              <option value="Admin">Admin</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="photo" class="form-label">Photo de profil</label>
            <input type="file" class="form-control" id="photo" accept="image/*">
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Annuler</button>
        <button type="button" class="btn bg-gradient-primary" id="saveNewUser">Enregistrer</button>
      </div>
    </div>
  </div>
</div>

<!-- Modals d'édition pour chaque utilisateur -->
{% for user in users %}
<div class="modal fade" id="editUserModal{{ user.idU }}" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel{{ user.idU }}" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editUserModalLabel{{ user.idU }}">Modifier l'utilisateur</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="editUserForm{{ user.idU }}" action="{{ path('admin_user_edit', {'id': user.idU}) }}">
          <input type="hidden" id="editUserId{{ user.idU }}" value="{{ user.idU }}">
          <div class="mb-3">
            <label for="editName{{ user.idU }}" class="form-label">Nom</label>
            <input type="text" class="form-control" id="editName{{ user.idU }}" value="{{ user.name }}" required>
          </div>
          <div class="mb-3">
            <label for="editPrenom{{ user.idU }}" class="form-label">Prénom</label>
            <input type="text" class="form-control" id="editPrenom{{ user.idU }}" value="{{ user.prenom }}" required>
          </div>
          <div class="mb-3">
            <label for="editEmail{{ user.idU }}" class="form-label">Email</label>
            <input type="email" class="form-control" id="editEmail{{ user.idU }}" value="{{ user.email }}" required>
          </div>
          <div class="mb-3">
            <label for="editPhone{{ user.idU }}" class="form-label">Téléphone</label>
            <input type="tel" class="form-control" id="editPhone{{ user.idU }}" value="{{ user.phoneNumber }}">
          </div>
          <div class="mb-3">
            <label for="editRole{{ user.idU }}" class="form-label">Rôle</label>
            <select class="form-select" id="editRole{{ user.idU }}">
              <option value="Voyageurs" {% if user.roleUser == 'Voyageurs' %}selected{% endif %}>Voyageurs</option>
              <option value="Entreprise" {% if user.roleUser == 'Entreprise' %}selected{% endif %}>Entreprise</option>
              <option value="Admin" {% if user.roleUser == 'Admin' %}selected{% endif %}>Admin</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="editStatus{{ user.idU }}" class="form-label">Statut</label>
            <select class="form-select" id="editStatus{{ user.idU }}">
              <option value="actif" {% if user.statut == 'actif' or user.statut == 'active' %}selected{% endif %}>Actif</option>
              <option value="inactif" {% if user.statut == 'inactif' or user.statut == 'inactive' %}selected{% endif %}>Inactif</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="editPhoto{{ user.idU }}" class="form-label">Photo de profil</label>
            <div class="d-flex align-items-center">
              <img src="{{ asset('uploads/users/' ~ user.imagesU) }}" alt="Photo de profil actuelle" 
                  class="avatar avatar-md me-3" style="width: 60px; height: 60px;" onerror="handleImageError(this)">
              <input type="file" class="form-control" id="editPhoto{{ user.idU }}" accept="image/*">
            </div>
            <small class="text-muted">Laissez vide pour conserver la photo actuelle</small>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Annuler</button>
        <button type="button" class="btn bg-gradient-primary" id="saveEditUser-{{ user.idU }}" onclick="saveUser({{ user.idU }})">Enregistrer</button>
      </div>
    </div>
  </div>
</div>
{% endfor %}

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Setup pour le graphique de répartition des utilisateurs
  var ctx = document.getElementById('userRoleChart').getContext('2d');
  var userRoleChart = new Chart(ctx, {
    type: 'doughnut',
    data: {
      labels: ['Voyageurs', 'Entreprise', 'Admin'],
      datasets: [{
        label: 'Utilisateurs par rôle',
        data: [
          {{ usersByRole.Voyageurs }}, 
          {{ usersByRole.Entreprise }}, 
          {{ usersByRole.Admin }}
        ],
        backgroundColor: [
          'rgba(94, 114, 228, 0.8)',
          'rgba(233, 196, 106, 0.8)',
          'rgba(92, 184, 92, 0.8)'
        ],
        borderColor: [
          'rgba(94, 114, 228, 1)',
          'rgba(233, 196, 106, 1)',
          'rgba(92, 184, 92, 1)'
        ],
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'bottom'
        }
      }
    }
  });
  
  // Fonction de recherche utilisateur
  document.getElementById('searchInput').addEventListener('keyup', function() {
    var input, filter, table, tr, td, i, txtValue;
    input = document.getElementById('searchInput');
    filter = input.value.toUpperCase();
    table = document.getElementById('usersTable');
    tr = table.getElementsByTagName('tr');
    
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName('td')[0];
      if (td) {
        txtValue = td.textContent || td.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
          tr[i].style.display = '';
        } else {
          tr[i].style.display = 'none';
        }
      }
    }
  });
  
  // Filtrage des utilisateurs
  document.getElementById('applyFilters').addEventListener('click', function() {
    var roleFilter = document.getElementById('roleFilter').value.toUpperCase();
    var statusFilter = document.getElementById('statusFilter').value.toUpperCase();
    
    var table = document.getElementById('usersTable');
    var tr = table.getElementsByTagName('tr');
    
    for (var i = 1; i < tr.length; i++) {
      var roleCell = tr[i].getElementsByTagName('td')[1];
      var statusCell = tr[i].getElementsByTagName('td')[2];
      
      if (roleCell && statusCell) {
        var roleValue = roleCell.textContent || roleCell.innerText;
        var statusValue = statusCell.textContent || statusCell.innerText;
        
        var roleMatch = roleFilter === '' || roleValue.toUpperCase().indexOf(roleFilter) > -1;
        var statusMatch = statusFilter === '' || statusValue.toUpperCase().indexOf(statusFilter) > -1;
        
        if (roleMatch && statusMatch) {
          tr[i].style.display = '';
        } else {
          tr[i].style.display = 'none';
        }
      }
    }
  });
  
  // Réinitialiser les filtres
  document.getElementById('resetFilters').addEventListener('click', function() {
    document.getElementById('roleFilter').value = '';
    document.getElementById('statusFilter').value = '';
    
    var table = document.getElementById('usersTable');
    var tr = table.getElementsByTagName('tr');
    
    for (var i = 1; i < tr.length; i++) {
      tr[i].style.display = '';
    }
  });
  
  // Enregistrement d'un nouvel utilisateur
  document.getElementById('saveNewUser').addEventListener('click', function() {
    var name = document.getElementById('name').value;
    var prenom = document.getElementById('prenom').value;
    var email = document.getElementById('email').value;
    var password = document.getElementById('password').value;
    var phone = document.getElementById('phone').value;
    var role = document.getElementById('role').value;
    var photoInput = document.getElementById('photo');
    
    if (!name || !prenom || !email || !password) {
      alert('Veuillez remplir tous les champs obligatoires');
      return;
    }
    
    // Use FormData for file uploads
    var formData = new FormData();
    formData.append('name', name);
    formData.append('prenom', prenom);
    formData.append('email', email);
    formData.append('password', password);
    formData.append('phone', phone);
    formData.append('role', role);
    
    // Add photo if selected
    if (photoInput && photoInput.files.length > 0) {
      formData.append('photo', photoInput.files[0]);
    }
    
    fetch('{{ path('admin_user_add') }}', {
      method: 'POST',
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      },
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Utilisateur créé avec succès');
        // Reload page to see the new user, staying on current page
        window.location.href = '{{ path('user_page', {'page': currentPage}) }}';
      } else {
        alert('Erreur: ' + data.message);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Une erreur est survenue');
    });
  });

  // Fonction pour activer tous les utilisateurs
  document.getElementById('activateAllButton').addEventListener('click', function() {
    if (confirm("Êtes-vous sûr de vouloir activer tous les utilisateurs?")) {
      fetch('{{ path('admin_activate_all_users') }}', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Tous les utilisateurs ont été activés avec succès');
          // Reload page to update the user list
          window.location.href = '{{ path('user_page', {'page': currentPage}) }}';
        } else {
          alert('Erreur lors de l\'activation des utilisateurs: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Une erreur est survenue lors de l\'activation des utilisateurs');
      });
    }
  });
});

// Fonction de confirmation de suppression
function confirmDelete(userId) {
  if (confirm("Êtes-vous sûr de vouloir désactiver cet utilisateur ?")) {
    const deletePath = document.getElementById('usersTable').dataset.deletePath.replace('/0', '/' + userId);
    
    fetch(deletePath, {
      method: 'POST',
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Utilisateur désactivé avec succès');
        // Reload page to update the user list, keeping the current page
        window.location.href = '{{ path('user_page', {'page': currentPage}) }}';
      } else {
        alert('Erreur lors de la désactivation');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Une erreur est survenue');
    });
  }
}

// Fonction pour enregistrer les modifications d'un utilisateur
function saveUser(userId) {
  var name = document.getElementById('editName' + userId).value;
  var prenom = document.getElementById('editPrenom' + userId).value;
  var email = document.getElementById('editEmail' + userId).value;
  var phone = document.getElementById('editPhone' + userId).value;
  var role = document.getElementById('editRole' + userId).value;
  var status = document.getElementById('editStatus' + userId).value;
  var photoInput = document.getElementById('editPhoto' + userId);
  
  if (!name || !prenom || !email) {
    alert('Veuillez remplir tous les champs obligatoires');
    return;
  }
  
  // Prepare form data for multipart/form-data (file upload)
  var formData = new FormData();
  formData.append('name', name);
  formData.append('prenom', prenom);
  formData.append('email', email);
  formData.append('phone', phone);
  formData.append('role', role);
  formData.append('status', status);
  
  // Add the file if one was selected
  if (photoInput.files.length > 0) {
    formData.append('photo', photoInput.files[0]);
  }
  
  const editPath = document.getElementById('usersTable').dataset.editPath.replace('/0', '/' + userId);
  
  fetch(editPath, {
    method: 'POST',
    headers: {
      'X-Requested-With': 'XMLHttpRequest'
    },
    body: formData
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      alert('Utilisateur modifié avec succès');
      // Reload page to see the updated user, keeping the current page
      window.location.href = '{{ path('user_page', {'page': currentPage}) }}';
    } else {
      alert('Erreur: ' + data.message);
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Une erreur est survenue');
  });
}
</script>
{% endblock %}