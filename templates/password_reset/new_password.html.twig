<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nouveau mot de passe - Airmess</title>
    <link rel="icon" href="{{ asset('images/logo-airmess.png') }}" type="image/png">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(to right, #a9cfff, #d0c7ff, #ffbde6);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
            padding: 20px;
            overflow-x: hidden;
        }
        
        .password-card {
            width: 100%;
            max-width: 500px;
            border-radius: 24px;
            overflow: hidden;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.12);
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            background-color: white;
            border: none;
            transform: translateY(0);
            position: relative;
            isolation: isolate;
        }
        
        .password-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 30px 70px rgba(0, 0, 0, 0.16);
        }
        
        .password-card::after {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(45deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
            z-index: -1;
        }
        
        .password-header {
            background: linear-gradient(to right, #a9cfff, #d0c7ff, #ffbde6);
            padding: 2.5rem 1.5rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .password-header::before {
            content: '';
            position: absolute;
            top: -10%;
            right: -10%;
            width: 200px;
            height: 200px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            transform: scale(0);
            animation: pulseEffect 8s ease-out infinite;
        }
        
        .password-header::after {
            content: '';
            position: absolute;
            bottom: -5%;
            left: -5%;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            transform: scale(0);
            animation: pulseEffect 8s ease-out 2s infinite;
        }
        
        @keyframes pulseEffect {
            0% {
                transform: scale(0);
                opacity: 0.7;
            }
            50% {
                transform: scale(1.5);
                opacity: 0;
            }
            100% {
                transform: scale(0);
                opacity: 0.7;
            }
        }
        
        .logo-container {
            width: 90px;
            height: 90px;
            margin: 0 auto 1.25rem;
            background-color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            position: relative;
            z-index: 1;
            animation: float 3s ease-in-out infinite;
        }
        
        @keyframes float {
            0% {
                transform: translateY(0px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            }
            50% {
                transform: translateY(-8px);
                box-shadow: 0 15px 35px rgba(0, 0, 0, 0.18);
            }
            100% {
                transform: translateY(0px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            }
        }
        
        .logo-container img {
            width: 60px;
            height: 60px;
            object-fit: contain;
            filter: drop-shadow(0 2px 5px rgba(0, 0, 0, 0.2));
        }
        
        .password-body {
            padding: 3rem;
            position: relative;
        }
        
        .password-body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 6px;
            background: linear-gradient(90deg, #a9cfff, #ffbde6);
            transform: scaleX(0);
            transform-origin: 0% 50%;
            transition: transform 0.5s ease;
        }
        
        .password-card:hover .password-body::before {
            transform: scaleX(1);
        }
        
        .form-floating {
            margin-bottom: 1.5rem;
        }
        
        .form-floating input {
            border-radius: 12px;
            border: 2px solid #e0e6ed;
            padding: 1rem 0.75rem;
            height: 58px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background-color: #f8f9fc;
        }
        
        .form-floating input:focus {
            border-color: #d0c7ff;
            box-shadow: 0 0 0 0.25rem rgba(208, 199, 255, 0.15);
            background-color: #fff;
        }
        
        .form-floating label {
            padding: 1rem 0.75rem;
        }
        
        .btn-reset {
            background: linear-gradient(to right, #a9cfff, #d0c7ff, #ffbde6);
            border: none;
            border-radius: 50px;
            padding: 0.9rem 2rem;
            font-weight: 600;
            font-size: 1.1rem;
            color: white;
            width: 100%;
            margin-top: 1rem;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            box-shadow: 0 5px 15px rgba(208, 199, 255, 0.4);
            position: relative;
            overflow: hidden;
        }
        
        .btn-reset::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: -100%;
            background: linear-gradient(90deg, rgba(255,255,255,0), rgba(255,255,255,0.2), rgba(255,255,255,0));
            transform: skewX(-25deg);
            transition: all 0.6s ease;
        }
        
        .btn-reset:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 25px rgba(208, 199, 255, 0.5);
        }
        
        .btn-reset:hover::after {
            left: 100%;
        }
        
        .btn-reset:disabled {
            opacity: 0.7;
            cursor: not-allowed;
        }
        
        .btn-reset:disabled::after {
            display: none;
        }
        
        .btn-reset:disabled:hover {
            transform: none;
            box-shadow: 0 5px 15px rgba(208, 199, 255, 0.4);
        }
        
        .password-strength {
            height: 8px;
            border-radius: 4px;
            margin-top: 0.5rem;
            margin-bottom: 1.5rem;
            overflow: hidden;
            background-color: #f1f1f1;
            position: relative;
        }
        
        .password-strength-meter {
            height: 100%;
            border-radius: 4px;
            transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            width: 0%;
            position: relative;
        }
        
        .password-strength-meter::after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 5px;
            height: 100%;
            background: white;
            opacity: 0.5;
            border-radius: 4px;
        }
        
        .strength-text {
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            transition: all 0.3s ease;
            color: #6c757d;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .strength-label {
            display: flex;
            align-items: center;
        }
        
        .strength-label i {
            margin-right: 0.5rem;
        }
        
        .password-requirements {
            background-color: #f8f9fe;
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            border-left: none;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.03);
            transition: all 0.3s ease;
        }
        
        .password-requirements:hover {
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.05);
            transform: translateY(-2px);
        }
        
        .requirement-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.75rem;
            font-size: 0.9rem;
            color: #6c757d;
            transition: all 0.2s ease;
            padding: 0.5rem 0.75rem;
            border-radius: 8px;
        }
        
        .requirement-item:last-child {
            margin-bottom: 0;
        }
        
        .requirement-item i {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            margin-right: 0.75rem;
            font-size: 0.7rem;
            min-width: 20px;
            text-align: center;
            background-color: #dc3545;
            color: white;
        }
        
        .requirement-item.valid i {
            background-color: #28a745;
            color: white;
        }
        
        .alert {
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            border: none;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }
        
        .alert-success {
            background-color: rgba(40, 167, 69, 0.1);
            color: #155724;
        }
        
        .alert-danger {
            background-color: rgba(220, 53, 69, 0.1);
            color: #721c24;
        }
        
        .text-decoration-none {
            color: #d0c7ff;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .text-decoration-none:hover {
            color: #a9cfff;
            transform: translateX(3px);
        }
        
        @media (max-width: 576px) {
            .password-body {
                padding: 2rem 1.5rem;
            }
            
            .password-header {
                padding: 2rem 1rem;
            }
            
            .logo-container {
                width: 80px;
                height: 80px;
            }
            
            .logo-container img {
                width: 50px;
                height: 50px;
            }
        }
    </style>
</head>
<body>
    <div class="password-card">
        <div class="password-header">
            <div class="logo-container">
                <img src="{{ asset('images/logo-airmess.png') }}" alt="Airmess Logo" width="60">
            </div>
            <h2 class="text-white mb-0 fw-bold">Créer un nouveau mot de passe</h2>
            <p class="text-white opacity-75 mt-2 mb-0">Sécurisez votre compte Airmess</p>
        </div>
        
        <div class="password-body">
            {% for flash_message in app.flashes('success') %}
                <div class="alert alert-success d-flex align-items-center" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <div>{{ flash_message }}</div>
                </div>
            {% endfor %}
            
            {% for flash_message in app.flashes('error') %}
                <div class="alert alert-danger d-flex align-items-center" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <div>{{ flash_message }}</div>
                </div>
            {% endfor %}
            
            {% if error %}
                <div class="alert alert-danger d-flex align-items-center" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <div>{{ error }}</div>
                </div>
            {% endif %}
            
            <p class="text-center mb-4 fw-light">
                Pour renforcer la sécurité de votre compte, veuillez créer un mot de passe fort.
            </p>
            
            <form action="{{ path('app_password_reset_new') }}" method="post" id="passwordResetForm">
                <div class="form-floating">
                    <input type="password" id="password" name="password" class="form-control" required>
                    <label for="password">Nouveau mot de passe</label>
                </div>
                
                <div class="strength-text" id="strength-text">
                    <span class="strength-label">Force du mot de passe: <span id="strength-value">Non défini</span></span>
                    <span id="strength-percentage">0%</span>
                </div>
                <div class="password-strength">
                    <div class="password-strength-meter" id="strength-meter"></div>
                </div>
                
                <div class="form-floating">
                    <input type="password" id="password_confirm" name="password_confirm" class="form-control" required>
                    <label for="password_confirm">Confirmer le mot de passe</label>
                </div>
                
                <div class="d-grid mt-4">
                    <button type="submit" class="btn btn-reset" id="submit-btn" disabled>
                        <i class="fas fa-lock me-2"></i>Réinitialiser le mot de passe
                    </button>
                </div>
                
                <div class="text-center mt-4">
                    <a href="{{ path('login') }}" class="text-decoration-none">
                        <i class="fas fa-arrow-left me-1"></i> Retour à la connexion
                    </a>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('password');
            const confirmInput = document.getElementById('password_confirm');
            const strengthMeter = document.getElementById('strength-meter');
            const strengthText = document.getElementById('strength-text');
            const strengthValue = document.getElementById('strength-value');
            const strengthPercentage = document.getElementById('strength-percentage');
            const submitBtn = document.getElementById('submit-btn');
            
            // Password requirement variables
            const minLength = 8;
            const requireUppercase = true;
            const requireLowercase = true;
            const requireNumber = true;
            
            // Strength levels with colors
            const strengthLevels = [
                { label: 'Très faible', color: '#dc3545', percent: 20 },
                { label: 'Faible', color: '#ffc107', percent: 40 },
                { label: 'Moyen', color: '#fd7e14', percent: 60 },
                { label: 'Fort', color: '#20c997', percent: 80 },
                { label: 'Très fort', color: '#28a745', percent: 100 }
            ];
            
            function checkRequirements(password) {
                const length = password.length >= minLength;
                const uppercase = requireUppercase ? /[A-Z]/.test(password) : true;
                const lowercase = requireLowercase ? /[a-z]/.test(password) : true;
                const number = requireNumber ? /[0-9]/.test(password) : true;
                
                return { length, uppercase, lowercase, number };
            }
            
            function calculatePasswordStrength(password) {
                if (!password) return 0;
                
                let strength = 0;
                const requirements = checkRequirements(password);
                
                // Check requirements
                if (requirements.length) strength += 25;
                if (requirements.uppercase) strength += 25;
                if (requirements.lowercase) strength += 25;
                if (requirements.number) strength += 25;
                
                // Bonus for length
                if (password.length > 12) strength += 15;
                if (password.length > 16) strength += 10;
                
                // Cap at 100
                return Math.min(100, strength);
            }
            
            function updateStrengthMeter(strength) {
                let level = 0;
                
                if (strength >= 80) level = 4;
                else if (strength >= 60) level = 3;
                else if (strength >= 40) level = 2;
                else if (strength >= 20) level = 1;
                
                // Animate width change
                strengthMeter.style.width = strength + '%';
                strengthMeter.style.backgroundColor = strengthLevels[level].color;
                
                // Update text indicators
                strengthValue.textContent = strengthLevels[level].label;
                strengthValue.style.color = strengthLevels[level].color;
                strengthPercentage.textContent = strength + '%';
                strengthPercentage.style.color = strengthLevels[level].color;
                
                // Enable submit button only if password is at least medium strength
                submitBtn.disabled = strength < 60;
                
                // Add animation effect
                strengthMeter.classList.add('animated');
                setTimeout(() => {
                    strengthMeter.classList.remove('animated');
                }, 600);
            }
            
            function checkPasswordsMatch() {
                const password = passwordInput.value;
                const confirmPassword = confirmInput.value;
                
                if (confirmPassword && password !== confirmPassword) {
                    confirmInput.classList.add('is-invalid');
                    submitBtn.disabled = true;
                } else {
                    confirmInput.classList.remove('is-invalid');
                    // Only enable if strength is sufficient
                    const strength = calculatePasswordStrength(password);
                    submitBtn.disabled = strength < 60;
                }
            }
            
            passwordInput.addEventListener('input', function() {
                const strength = calculatePasswordStrength(this.value);
                updateStrengthMeter(strength);
                checkPasswordsMatch();
            });
            
            confirmInput.addEventListener('input', checkPasswordsMatch);
        });
    </script>
</body>
</html> 