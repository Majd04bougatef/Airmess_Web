{% extends 'base.html.twig' %}

{% block title %}Nouveau mot de passe - Airmess{% endblock %}

{% block stylesheets %}
{{ parent() }}
<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<style>
    /* Reset styles to avoid conflicts with parent template */
    #header, .main > *:not(.password-reset-container) {
        display: none !important;
    }
    
    body {
        padding: 0 !important;
        margin: 0 !important;
        min-height: 100vh;
        background: linear-gradient(to right, #a9cfff, #d0c7ff, #ffbde6);
        overflow-x: hidden;
    }
    
    .main {
        padding: 0 !important;
        margin: 0 !important;
    }

    .password-reset-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem 0;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='400' height='400' viewBox='0 0 800 800'%3E%3Cg fill='none' stroke='%23e4e4e4' stroke-width='1'%3E%3Cpath d='M769 229L1037 260.9M927 880L731 737 520 660 309 538 40 599 295 764 126.5 879.5 40 599-197 493 102 382-31 229 126.5 79.5-69-63'/%3E%3Cpath d='M-31 229L237 261 390 382 603 493 308.5 537.5 101.5 381.5M370 905L295 764'/%3E%3Cpath d='M520 660L578 842 731 737 840 599 603 493 520 660 295 764 309 538 390 382 539 269 769 229 577.5 41.5 370 105 295 -36 126.5 79.5 237 261 102 382 40 599 -69 737 127 880'/%3E%3Cpath d='M520-140L578.5 42.5 731-63M603 493L539 269 237 261 370 105M902 382L539 269M390 382L102 382'/%3E%3Cpath d='M-222 42L126.5 79.5 370 105 539 269 577.5 41.5 927 80 769 229 902 382 603 493 731 737M295-36L577.5 41.5M578 842L295 764M40-201L127 80M102 382L-261 269'/%3E%3C/g%3E%3Cg fill='%23dedeff'%3E%3Ccircle cx='769' cy='229' r='5'/%3E%3Ccircle cx='539' cy='269' r='5'/%3E%3Ccircle cx='603' cy='493' r='5'/%3E%3Ccircle cx='731' cy='737' r='5'/%3E%3Ccircle cx='520' cy='660' r='5'/%3E%3Ccircle cx='309' cy='538' r='5'/%3E%3Ccircle cx='295' cy='764' r='5'/%3E%3Ccircle cx='40' cy='599' r='5'/%3E%3Ccircle cx='102' cy='382' r='5'/%3E%3Ccircle cx='127' cy='80' r='5'/%3E%3Ccircle cx='370' cy='105' r='5'/%3E%3Ccircle cx='578' cy='42' r='5'/%3E%3Ccircle cx='237' cy='261' r='5'/%3E%3Ccircle cx='390' cy='382' r='5'/%3E%3C/g%3E%3C/svg%3E");
        background-attachment: fixed;
        animation: gradientAnimation 10s ease infinite;
        z-index: 1050;
        position: relative;
    }
    
    @keyframes gradientAnimation {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
    }
    
    .password-card {
        width: 100%;
        max-width: 500px;
        border-radius: 24px;
        overflow: hidden;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.12);
        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        background-color: white;
        border: none;
        transform: translateY(0);
        position: relative;
        isolation: isolate;
    }
    
    .password-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 30px 70px rgba(0, 0, 0, 0.16);
    }
    
    .password-card::after {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(45deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
        z-index: -1;
    }
    
    .password-header {
        background: linear-gradient(to right, #a9cfff, #d0c7ff, #ffbde6);
        padding: 2.5rem 1.5rem;
        text-align: center;
        position: relative;
        overflow: hidden;
    }
    
    .password-header::before {
        content: '';
        position: absolute;
        top: -10%;
        right: -10%;
        width: 200px;
        height: 200px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        transform: scale(0);
        animation: pulseEffect 8s ease-out infinite;
    }
    
    .password-header::after {
        content: '';
        position: absolute;
        bottom: -5%;
        left: -5%;
        width: 150px;
        height: 150px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        transform: scale(0);
        animation: pulseEffect 8s ease-out 2s infinite;
    }
    
    @keyframes pulseEffect {
        0% {
            transform: scale(0);
            opacity: 0.7;
        }
        50% {
            transform: scale(1.5);
            opacity: 0;
        }
        100% {
            transform: scale(0);
            opacity: 0.7;
        }
    }
    
    .logo-container {
        width: 90px;
        height: 90px;
        margin: 0 auto 1.25rem;
        background-color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        position: relative;
        z-index: 1;
        animation: float 3s ease-in-out infinite;
    }
    
    @keyframes float {
        0% {
            transform: translateY(0px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        50% {
            transform: translateY(-8px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.18);
        }
        100% {
            transform: translateY(0px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
    }
    
    .logo-container img {
        width: 60px;
        height: 60px;
        object-fit: contain;
        filter: drop-shadow(0 2px 5px rgba(0, 0, 0, 0.2));
    }
    
    .password-body {
        padding: 3rem;
        position: relative;
    }
    
    .password-body::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6px;
        background: linear-gradient(90deg, #a9cfff, #ffbde6);
        transform: scaleX(0);
        transform-origin: 0% 50%;
        transition: transform 0.5s ease;
    }
    
    .password-card:hover .password-body::before {
        transform: scaleX(1);
    }
    
    .form-floating {
        margin-bottom: 1.5rem;
    }
    
    .form-floating input {
        border-radius: 12px;
        border: 2px solid #e0e6ed;
        padding: 1rem 0.75rem;
        height: 58px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background-color: #f8f9fc;
    }
    
    .form-floating input:focus {
        border-color: #d0c7ff;
        box-shadow: 0 0 0 0.25rem rgba(208, 199, 255, 0.15);
        background-color: #fff;
    }
    
    .form-floating label {
        padding: 1rem 0.75rem;
    }
    
    .btn-reset {
        background: linear-gradient(to right, #a9cfff, #d0c7ff, #ffbde6);
        border: none;
        border-radius: 50px;
        padding: 0.9rem 2rem;
        font-weight: 600;
        font-size: 1.1rem;
        color: white;
        width: 100%;
        margin-top: 1rem;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        box-shadow: 0 5px 15px rgba(208, 199, 255, 0.4);
        position: relative;
        overflow: hidden;
    }
    
    .btn-reset::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: -100%;
        background: linear-gradient(90deg, rgba(255,255,255,0), rgba(255,255,255,0.2), rgba(255,255,255,0));
        transform: skewX(-25deg);
        transition: all 0.6s ease;
    }
    
    .btn-reset:hover {
        transform: translateY(-4px);
        box-shadow: 0 12px 25px rgba(208, 199, 255, 0.5);
    }
    
    .btn-reset:hover::after {
        left: 100%;
    }
    
    .btn-reset:disabled {
        opacity: 0.7;
        cursor: not-allowed;
    }
    
    .btn-reset:disabled::after {
        display: none;
    }
    
    .btn-reset:disabled:hover {
        transform: none;
        box-shadow: 0 5px 15px rgba(208, 199, 255, 0.4);
    }
    
    .password-strength {
        height: 8px;
        border-radius: 4px;
        margin-top: 0.5rem;
        margin-bottom: 1.5rem;
        overflow: hidden;
        background-color: #f1f1f1;
        position: relative;
    }
    
    .password-strength-meter {
        height: 100%;
        border-radius: 4px;
        transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        width: 0%;
        position: relative;
    }
    
    .password-strength-meter::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 5px;
        height: 100%;
        background: white;
        opacity: 0.5;
        border-radius: 4px;
    }
    
    .strength-text {
        font-size: 0.9rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
        color: #6c757d;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .strength-label {
        display: flex;
        align-items: center;
    }
    
    .strength-label i {
        margin-right: 0.5rem;
    }
    
    .password-requirements {
        background-color: #f8f9fe;
        border-radius: 16px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        border-left: 4px solid #d0c7ff;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.03);
        transition: all 0.3s ease;
    }
    
    .password-requirements:hover {
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.05);
        transform: translateY(-2px);
    }
    
    .requirement-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.75rem;
        font-size: 0.9rem;
        color: #6c757d;
        transition: all 0.2s ease;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
    }
    
    .requirement-item:last-child {
        margin-bottom: 0;
    }
    
    .requirement-item.valid {
        color: #28a745;
        background-color: rgba(40, 167, 69, 0.05);
    }
    
    .requirement-item.invalid {
        color: #6c757d;
        background-color: transparent;
    }
    
    .requirement-item i {
        margin-right: 0.75rem;
        font-size: 1rem;
        min-width: 16px;
        text-align: center;
    }
    
    .invalid i {
        color: #dc3545;
    }
    
    .valid i {
        color: #28a745;
    }
    
    .alert {
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        border: none;
        padding: 1rem;
        margin-bottom: 1.5rem;
    }
    
    .alert-success {
        background-color: rgba(40, 167, 69, 0.1);
        color: #155724;
    }
    
    .alert-danger {
        background-color: rgba(220, 53, 69, 0.1);
        color: #721c24;
    }
    
    .text-decoration-none {
        color: #d0c7ff;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .text-decoration-none:hover {
        color: #a9cfff;
        transform: translateX(3px);
    }
    
    @media (max-width: 576px) {
        .password-body {
            padding: 2rem 1.5rem;
        }
        
        .password-header {
            padding: 2rem 1rem;
        }
        
        .logo-container {
            width: 80px;
            height: 80px;
        }
        
        .logo-container img {
            width: 50px;
            height: 50px;
        }
    }
</style>
{% endblock %}

{% block body %}
<div class="password-reset-container">
    <div class="password-card">
        <div class="password-header">
            <div class="logo-container">
                <img src="{{ asset('images/logo-airmess.png') }}" alt="Airmess Logo" width="60">
            </div>
            <h2 class="text-white mb-0 fw-bold">Créer un nouveau mot de passe</h2>
            <p class="text-white opacity-75 mt-2 mb-0">Sécurisez votre compte Airmess</p>
        </div>
        
        <div class="password-body">
            {% for flash_message in app.flashes('success') %}
                <div class="alert alert-success d-flex align-items-center" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <div>{{ flash_message }}</div>
                </div>
            {% endfor %}
            
            {% for flash_message in app.flashes('error') %}
                <div class="alert alert-danger d-flex align-items-center" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <div>{{ flash_message }}</div>
                </div>
            {% endfor %}
            
            {% if error %}
                <div class="alert alert-danger d-flex align-items-center" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <div>{{ error }}</div>
                </div>
            {% endif %}
            
            <p class="text-center mb-4 fw-light">
                Pour renforcer la sécurité de votre compte, veuillez créer un mot de passe fort en suivant les critères ci-dessous.
            </p>
            
            <form action="{{ path('app_password_reset_new') }}" method="post" id="passwordResetForm">
                <div class="password-requirements">
                    <h6 class="fw-bold mb-3">Exigences du mot de passe:</h6>
                    <div class="requirement-item invalid" id="req-length">
                        <i class="fas fa-times-circle"></i>
                        <span>Au moins 8 caractères</span>
                    </div>
                    <div class="requirement-item invalid" id="req-uppercase">
                        <i class="fas fa-times-circle"></i>
                        <span>Au moins une lettre majuscule</span>
                    </div>
                    <div class="requirement-item invalid" id="req-lowercase">
                        <i class="fas fa-times-circle"></i>
                        <span>Au moins une lettre minuscule</span>
                    </div>
                    <div class="requirement-item invalid" id="req-number">
                        <i class="fas fa-times-circle"></i>
                        <span>Au moins un chiffre</span>
                    </div>
                </div>
                
                <div class="form-floating">
                    <input type="password" id="password" name="password" class="form-control" required>
                    <label for="password">Nouveau mot de passe</label>
                </div>
                
                <div class="strength-text" id="strength-text">
                    <span class="strength-label">Force du mot de passe: <span id="strength-value">Non défini</span></span>
                    <span id="strength-percentage">0%</span>
                </div>
                <div class="password-strength">
                    <div class="password-strength-meter" id="strength-meter"></div>
                </div>
                
                <div class="form-floating">
                    <input type="password" id="password_confirm" name="password_confirm" class="form-control" required>
                    <label for="password_confirm">Confirmer le mot de passe</label>
                </div>
                
                <div class="d-grid mt-4">
                    <button type="submit" class="btn btn-reset" id="submit-btn" disabled>
                        <i class="fas fa-lock me-2"></i>Réinitialiser le mot de passe
                    </button>
                </div>
                
                <div class="text-center mt-4">
                    <a href="{{ path('login') }}" class="text-decoration-none">
                        <i class="fas fa-arrow-left me-1"></i> Retour à la connexion
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Hide header and other elements from parent template
        document.querySelectorAll('#header, .main > *:not(.password-reset-container)').forEach(function(el) {
            if (el.classList && !el.classList.contains('password-reset-container')) {
                el.style.display = 'none';
            }
        });
        
        const passwordInput = document.getElementById('password');
        const confirmInput = document.getElementById('password_confirm');
        const strengthMeter = document.getElementById('strength-meter');
        const strengthText = document.getElementById('strength-text');
        const strengthValue = document.getElementById('strength-value');
        const strengthPercentage = document.getElementById('strength-percentage');
        const submitBtn = document.getElementById('submit-btn');
        
        // Password requirement elements
        const reqLength = document.getElementById('req-length');
        const reqUppercase = document.getElementById('req-uppercase');
        const reqLowercase = document.getElementById('req-lowercase');
        const reqNumber = document.getElementById('req-number');
        
        // Strength levels with colors
        const strengthLevels = [
            { label: 'Très faible', color: '#dc3545', percent: 20 },
            { label: 'Faible', color: '#ffc107', percent: 40 },
            { label: 'Moyen', color: '#fd7e14', percent: 60 },
            { label: 'Fort', color: '#20c997', percent: 80 },
            { label: 'Très fort', color: '#28a745', percent: 100 }
        ];
        
        function checkRequirements(password) {
            const length = password.length >= 8;
            const uppercase = /[A-Z]/.test(password);
            const lowercase = /[a-z]/.test(password);
            const number = /[0-9]/.test(password);
            
            updateRequirement(reqLength, length);
            updateRequirement(reqUppercase, uppercase);
            updateRequirement(reqLowercase, lowercase);
            updateRequirement(reqNumber, number);
            
            return { length, uppercase, lowercase, number };
        }
        
        function updateRequirement(element, valid) {
            if (valid) {
                element.classList.remove('invalid');
                element.classList.add('valid');
                element.querySelector('i').classList.remove('fa-times-circle');
                element.querySelector('i').classList.add('fa-check-circle');
            } else {
                element.classList.remove('valid');
                element.classList.add('invalid');
                element.querySelector('i').classList.remove('fa-check-circle');
                element.querySelector('i').classList.add('fa-times-circle');
            }
        }
        
        function calculatePasswordStrength(password) {
            if (!password) return 0;
            
            let strength = 0;
            const requirements = checkRequirements(password);
            
            // Check requirements
            if (requirements.length) strength += 25;
            if (requirements.uppercase) strength += 25;
            if (requirements.lowercase) strength += 25;
            if (requirements.number) strength += 25;
            
            // Bonus for length
            if (password.length > 12) strength += 15;
            if (password.length > 16) strength += 10;
            
            // Cap at 100
            return Math.min(100, strength);
        }
        
        function updateStrengthMeter(strength) {
            let level = 0;
            
            if (strength >= 80) level = 4;
            else if (strength >= 60) level = 3;
            else if (strength >= 40) level = 2;
            else if (strength >= 20) level = 1;
            
            // Animate width change
            strengthMeter.style.width = strength + '%';
            strengthMeter.style.backgroundColor = strengthLevels[level].color;
            
            // Update text indicators
            strengthValue.textContent = strengthLevels[level].label;
            strengthValue.style.color = strengthLevels[level].color;
            strengthPercentage.textContent = strength + '%';
            strengthPercentage.style.color = strengthLevels[level].color;
            
            // Enable submit button only if password is at least medium strength
            submitBtn.disabled = strength < 60;
            
            // Add animation effect
            strengthMeter.classList.add('animated');
            setTimeout(() => {
                strengthMeter.classList.remove('animated');
            }, 600);
        }
        
        function checkPasswordsMatch() {
            const password = passwordInput.value;
            const confirmPassword = confirmInput.value;
            
            if (confirmPassword && password !== confirmPassword) {
                confirmInput.classList.add('is-invalid');
                submitBtn.disabled = true;
            } else {
                confirmInput.classList.remove('is-invalid');
                // Only enable if strength is sufficient
                const strength = calculatePasswordStrength(password);
                submitBtn.disabled = strength < 60;
            }
        }
        
        passwordInput.addEventListener('input', function() {
            const strength = calculatePasswordStrength(this.value);
            updateStrengthMeter(strength);
            checkPasswordsMatch();
        });
        
        confirmInput.addEventListener('input', checkPasswordsMatch);
        
        // Add visual feedback on focus
        passwordInput.addEventListener('focus', function() {
            document.querySelector('.password-requirements').style.borderLeftColor = '#d0c7ff';
            document.querySelector('.password-requirements').style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.05)';
        });
        
        passwordInput.addEventListener('blur', function() {
            document.querySelector('.password-requirements').style.borderLeftColor = '';
            document.querySelector('.password-requirements').style.boxShadow = '';
        });
    });
</script>
{% endblock %} 